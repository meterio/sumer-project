/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../../../contracts/FeedPriceOracle.sol/FeedPriceOracle";

const _abi = [
  {
    inputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
    ],
    name: "setFeed",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "contract CToken",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610c2f806100326000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634b90fd691161008c578063a6f9dae111610066578063a6f9dae1146101b8578063ae10561b146101cb578063e983fe25146101de578063fc57d4df146101f1576100cf565b80634b90fd691461017b57806366331bba1461018e5780638da5cb5b146101a3576100cf565b80630c1502eb146100d457806316b8e731146100fd5780631badc89a1461011d5780631e922ea6146101325780632ef91c87146101455780632fba4aa914610158575b600080fd5b6100e76100e23660046108dc565b610204565b6040516100f49190610b35565b60405180910390f35b61011061010b3660046108dc565b610223565b6040516100f49190610b27565b61013061012b3660046109a8565b61028b565b005b6101306101403660046108dc565b6102da565b610130610153366004610947565b61031e565b61016b6101663660046108b6565b6103ec565b6040516100f49493929190610b43565b6101306101893660046108dc565b610425565b610196610476565b6040516100f49190610af9565b6101ab61047b565b6040516100f49190610aeb565b6101306101c63660046108b6565b61048a565b6101306101d93660046108fa565b6104d6565b6100e76101ec3660046108b6565b6105a3565b6100e76101ff3660046108dc565b6105b5565b6001600160a01b0381166000908152600260205260409020545b919050565b61022b610847565b506001600160a01b039081166000908152600160209081526040918290208251608081018452905460ff8082168352610100820490951692820192909252600160a81b8204841692810192909252600160b01b9004909116606082015290565b6000546001600160a01b031633146102be5760405162461bcd60e51b81526004016102b590610b17565b60405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6000546001600160a01b031633146103045760405162461bcd60e51b81526004016102b590610b17565b6001600160a01b0316600090815260026020526040812055565b6000546001600160a01b031633146103485760405162461bcd60e51b81526004016102b590610b17565b60408051608081018252600281526001600160a01b03948516602080830191825260ff958616838501908152948616606084019081529787166000908152600190915292909220905181549251935196518516600160b01b0260ff60b01b19978616600160a81b0260ff60a81b199590971661010002610100600160a81b03199290961660ff19909416939093171693909317919091169290921792909216179055565b60016020526000908152604090205460ff808216916001600160a01b0361010082041691600160a81b8204811691600160b01b90041684565b6000546001600160a01b0316331461044f5760405162461bcd60e51b81526004016102b590610b17565b6001600160a01b0316600090815260016020526040902080546001600160b81b0319169055565b600181565b6000546001600160a01b031681565b6000546001600160a01b031633146104b45760405162461bcd60e51b81526004016102b590610b17565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105005760405162461bcd60e51b81526004016102b590610b17565b6040805160808101825260018082526001600160a01b03948516602080840191825260ff95861684860190815260006060860181815299891681529390915293909120915182549151935196518516600160b01b0260ff60b01b19978616600160a81b0260ff60a81b199590971661010002610100600160a81b03199290961660ff19909316929092171693909317919091169290921792909216919091179055565b60026020526000908152604090205481565b60006105bf610847565b506001600160a01b038083166000908152600160209081526040918290208251608081018452905460ff80821683526101008204909516928201839052600160a81b8104851693820193909352600160b01b9092049092166060820152901561082a57805160ff166001141561075b57600081602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561066e57600080fd5b505afa158015610682573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106a69190810190610a00565b82604001516024030360ff169050602460ff168111156106d85760405162461bcd60e51b81526004016102b590610b07565b80600a0a82602001516001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061075191908101906109e2565b029250505061021e565b805160ff166002141561082a576000816060015182604001516024030360ff169050602460ff168111156107a15760405162461bcd60e51b81526004016102b590610b07565b600082602001516001600160a01b031663053f14da6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107e057600080fd5b505afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061081891908101906109e2565b905081600a0a8102935050505061021e565b50506001600160a01b031660009081526002602052604090205490565b60408051608081018252600080825260208201819052918101829052606081019190915290565b803561087981610bba565b92915050565b803561087981610bd1565b805161087981610bda565b803561087981610bda565b803561087981610be3565b805161087981610be3565b6000602082840312156108c857600080fd5b60006108d4848461086e565b949350505050565b6000602082840312156108ee57600080fd5b60006108d4848461087f565b60008060006060848603121561090f57600080fd5b600061091b868661087f565b935050602061092c8682870161086e565b925050604061093d868287016108a0565b9150509250925092565b6000806000806080858703121561095d57600080fd5b6000610969878761087f565b945050602061097a8782880161086e565b935050604061098b878288016108a0565b925050606061099c878288016108a0565b91505092959194509250565b600080604083850312156109bb57600080fd5b60006109c7858561087f565b92505060206109d885828601610895565b9150509250929050565b6000602082840312156109f457600080fd5b60006108d4848461088a565b600060208284031215610a1257600080fd5b60006108d484846108ab565b610a2781610b8a565b82525050565b610a2781610b95565b6000610a43601183610b81565b70444543494d414c20554e444552464c4f5760781b815260200192915050565b6000610a70600a83610b81565b6927a7262c9027aba722a960b11b815260200192915050565b80516080830190610a9a8482610ae2565b506020820151610aad6020850182610a1e565b506040820151610ac06040850182610ae2565b506060820151610ad36060850182610ae2565b50505050565b610a2781610ba5565b610a2781610bb4565b602081016108798284610a1e565b602081016108798284610a2d565b6020808252810161087981610a36565b6020808252810161087981610a63565b608081016108798284610a89565b602081016108798284610ad9565b60808101610b518287610ae2565b610b5e6020830186610a1e565b610b6b6040830185610ae2565b610b786060830184610ae2565b95945050505050565b90815260200190565b600061087982610ba8565b151590565b600061087982610b8a565b90565b6001600160a01b031690565b60ff1690565b610bc381610b8a565b8114610bce57600080fd5b50565b610bc381610b9a565b610bc381610ba5565b610bc381610bb456fea365627a7a72315820a2ee5a8c5ae0275d5d0675443f40ea552ac8a652528b92b676e076b9391632456c6578706572696d656e74616cf564736f6c63430005100040";

type FeedPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeedPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(...args: FeedPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeedPriceOracle> {
    return super.deploy(overrides || {}) as Promise<FeedPriceOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FeedPriceOracle {
    return super.attach(address) as FeedPriceOracle;
  }
  override connect(signer: Signer): FeedPriceOracle__factory {
    return super.connect(signer) as FeedPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new utils.Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as FeedPriceOracle;
  }
}
