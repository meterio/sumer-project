/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ComptrollerV3Storage,
  ComptrollerV3StorageInterface,
} from "../../../contracts/ComptrollerStorage.sol/ComptrollerV3Storage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accountAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allMarkets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeFactorMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplyState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptrollerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationIncentiveMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "equalAssetGrouId",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isComped",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingComptrollerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underWriterAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104d6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806394b2294b116100ad578063cc7ebdc411610071578063cc7ebdc41461032c578063dce154491461034c578063dcfbc0c71461035f578063e875544614610372578063f851a4401461037b57600080fd5b806394b2294b146102b1578063aa900754146102ba578063b21be7fd146102c3578063bb82aa5e146102ee578063ca0af0431461030157600080fd5b806352d84d1e116100f457806352d84d1e146101a05780636b79c38d146101b35780637dc0d1d01461020f5780638c57804e146102225780638e8f294b1461025a57600080fd5b80631d7b33d7146101265780632408d5f01461015957806326782247146101845780634ada90af14610197575b600080fd5b61014661013436600461040c565b600d6020526000908152604090205481565b6040519081526020015b60405180910390f35b60045461016c906001600160a01b031681565b6040516001600160a01b039091168152602001610150565b60015461016c906001600160a01b031681565b61014660075481565b61016c6101ae366004610488565b61038e565b6101eb6101c136600461040c565b600e602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff909116602083015201610150565b60055461016c906001600160a01b031681565b6101eb61023036600461040c565b600f602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b61029061026836600461040c565b600a602052600090815260409020805460029091015460ff8083169261010090048116911683565b60408051931515845260ff9092166020840152151590820152606001610150565b61014660085481565b610146600c5481565b6101466102d136600461042d565b601060209081526000928352604080842090915290825290205481565b60025461016c906001600160a01b031681565b61014661030f36600461042d565b601160209081526000928352604080842090915290825290205481565b61014661033a36600461040c565b60126020526000908152604090205481565b61016c61035a36600461045f565b6103b8565b60035461016c906001600160a01b031681565b61014660065481565b60005461016c906001600160a01b031681565b600b818154811061039e57600080fd5b6000918252602090912001546001600160a01b0316905081565b600960205281600052604060002081815481106103d457600080fd5b6000918252602090912001546001600160a01b03169150829050565b80356001600160a01b038116811461040757600080fd5b919050565b60006020828403121561041d578081fd5b610426826103f0565b9392505050565b6000806040838503121561043f578081fd5b610448836103f0565b9150610456602084016103f0565b90509250929050565b60008060408385031215610471578182fd5b61047a836103f0565b946020939093013593505050565b600060208284031215610499578081fd5b503591905056fea2646970667358221220e702b6aeca17c64f2ab6d56d48ad7db20f504a11c25bfeaf7657f162c8dba75164736f6c63430008040033";

type ComptrollerV3StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComptrollerV3StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComptrollerV3Storage__factory extends ContractFactory {
  constructor(...args: ComptrollerV3StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ComptrollerV3Storage> {
    return super.deploy(overrides || {}) as Promise<ComptrollerV3Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ComptrollerV3Storage {
    return super.attach(address) as ComptrollerV3Storage;
  }
  override connect(signer: Signer): ComptrollerV3Storage__factory {
    return super.connect(signer) as ComptrollerV3Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComptrollerV3StorageInterface {
    return new utils.Interface(_abi) as ComptrollerV3StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComptrollerV3Storage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ComptrollerV3Storage;
  }
}
