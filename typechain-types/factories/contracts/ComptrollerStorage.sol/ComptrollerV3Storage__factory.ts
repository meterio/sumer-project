/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ComptrollerV3Storage,
  ComptrollerV3StorageInterface,
} from "../../../contracts/ComptrollerStorage.sol/ComptrollerV3Storage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "accountAssets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allMarkets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeFactorMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplyState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptrollerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationIncentiveMantissa",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "markets",
    outputs: [
      {
        internalType: "bool",
        name: "isListed",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "equalAssetGrouId",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isComped",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingComptrollerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "underWriterAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610501806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f15760003560e01c80631d7b33d7146100f65780632408d5f01461012e57806326782247146101525780634ada90af1461015a57806352d84d1e146101625780636b79c38d1461017f5780637dc0d1d0146101cd5780638c57804e146101d55780638e8f294b146101fb57806394b2294b14610245578063aa9007541461024d578063b21be7fd14610255578063bb82aa5e14610283578063ca0af0431461028b578063cc7ebdc4146102b9578063dce15449146102df578063dcfbc0c71461030b578063e875544614610313578063f851a4401461031b575b600080fd5b61011c6004803603602081101561010c57600080fd5b50356001600160a01b0316610323565b60408051918252519081900360200190f35b610136610335565b604080516001600160a01b039092168252519081900360200190f35b610136610344565b61011c610353565b6101366004803603602081101561017857600080fd5b5035610359565b6101a56004803603602081101561019557600080fd5b50356001600160a01b0316610380565b604080516001600160e01b03909316835263ffffffff90911660208301528051918290030190f35b6101366103aa565b6101a5600480360360208110156101eb57600080fd5b50356001600160a01b03166103b9565b6102216004803603602081101561021157600080fd5b50356001600160a01b03166103e3565b60408051931515845260ff9092166020840152151582820152519081900360600190f35b61011c61040b565b61011c610411565b61011c6004803603604081101561026b57600080fd5b506001600160a01b0381358116916020013516610417565b610136610434565b61011c600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610443565b61011c600480360360208110156102cf57600080fd5b50356001600160a01b0316610460565b610136600480360360408110156102f557600080fd5b506001600160a01b038135169060200135610472565b6101366104a7565b61011c6104b6565b6101366104bc565b600d6020526000908152604090205481565b6004546001600160a01b031681565b6001546001600160a01b031681565b60075481565b600b818154811061036657fe5b6000918252602090912001546001600160a01b0316905081565b600e602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b6005546001600160a01b031681565b600f602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b600a602052600090815260409020805460029091015460ff8083169261010090048116911683565b60085481565b600c5481565b601060209081526000928352604080842090915290825290205481565b6002546001600160a01b031681565b601160209081526000928352604080842090915290825290205481565b60126020526000908152604090205481565b6009602052816000526040600020818154811061048b57fe5b6000918252602090912001546001600160a01b03169150829050565b6003546001600160a01b031681565b60065481565b6000546001600160a01b03168156fea26469706673582212205275df8a61e04118f72f4c2b25278fc110dda2a9fea91de20ea02a9139499bad64736f6c634300060b0033";

type ComptrollerV3StorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComptrollerV3StorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComptrollerV3Storage__factory extends ContractFactory {
  constructor(...args: ComptrollerV3StorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ComptrollerV3Storage> {
    return super.deploy(overrides || {}) as Promise<ComptrollerV3Storage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ComptrollerV3Storage {
    return super.attach(address) as ComptrollerV3Storage;
  }
  override connect(signer: Signer): ComptrollerV3Storage__factory {
    return super.connect(signer) as ComptrollerV3Storage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComptrollerV3StorageInterface {
    return new utils.Interface(_abi) as ComptrollerV3StorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComptrollerV3Storage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ComptrollerV3Storage;
  }
}
