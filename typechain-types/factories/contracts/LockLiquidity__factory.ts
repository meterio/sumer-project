/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LockLiquidity,
  LockLiquidityInterface,
} from "../../contracts/LockLiquidity";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610298806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806347e7ef2414610030575b600080fd5b61005c6004803603604081101561004657600080fd5b506001600160a01b03813516906020013561005e565b005b6000826001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561009957600080fd5b505afa1580156100ad573d6000803e3d6000fd5b505050506040513d60208110156100c357600080fd5b5051604080516370a0823160e01b815230600482015290519192506001600160a01b038516916370a0823191602480820192602092909190829003018186803b15801561010f57600080fd5b505afa158015610123573d6000803e3d6000fd5b505050506040513d602081101561013957600080fd5b505115610180576040805162461bcd60e51b815260206004820152601060248201526f6c69717569646974792065786973742160801b604482015290519081900360640190fd5b604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b038316916323b872dd91606480830192600092919082900301818387803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b50505050826001600160a01b031663a0712d68836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561023257600080fd5b505af1158015610246573d6000803e3d6000fd5b505050506040513d602081101561025c57600080fd5b505050505056fea265627a7a72315820b2ff964a73c6643e3fbec9591349ae17b5a38a426eac992198ce53e2029d37f864736f6c63430005100032";

type LockLiquidityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LockLiquidityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LockLiquidity__factory extends ContractFactory {
  constructor(...args: LockLiquidityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LockLiquidity> {
    return super.deploy(overrides || {}) as Promise<LockLiquidity>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LockLiquidity {
    return super.attach(address) as LockLiquidity;
  }
  override connect(signer: Signer): LockLiquidity__factory {
    return super.connect(signer) as LockLiquidity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockLiquidityInterface {
    return new utils.Interface(_abi) as LockLiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LockLiquidity {
    return new Contract(address, _abi, signerOrProvider) as LockLiquidity;
  }
}
