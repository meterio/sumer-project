/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CDaiDelegateMakerHarness,
  CDaiDelegateMakerHarnessInterface,
} from "../../../../contracts/test/CErc20Harness.sol/CDaiDelegateMakerHarness";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "chi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dai",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "dai",
    outputs: [
      {
        internalType: "contract GemLike",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "drip",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "harnessSetBalance",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hope",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pie",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "contract VatLike",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061043a806100206000396000f3fe6080604052600436106100fe5760003560e01c806370a0823111610095578063c92aecc411610064578063c92aecc4146102db578063d9a7eb70146102f0578063dd62ed3e14610329578063ef693bed1461012f578063f4b9fa7514610219576100fe565b806370a08231146102605780637f8661a1146101035780639f678cca14610293578063a3b22fc4146102a8576100fe565b806323b872dd116100d157806323b872dd146101c257806336569e77146102195780633b4da69f1461024a5780636c25b34614610168576100fe565b8063049878f314610103578063095ea7b31461012f5780630bebac861461016857806318160ddd146101ad575b600080fd5b34801561010f57600080fd5b5061012d6004803603602081101561012657600080fd5b5035610364565b005b34801561013b57600080fd5b5061012d6004803603604081101561015257600080fd5b506001600160a01b038135169060200135610367565b34801561017457600080fd5b5061019b6004803603602081101561018b57600080fd5b50356001600160a01b031661036b565b60408051918252519081900360200190f35b3480156101b957600080fd5b5061019b610371565b3480156101ce57600080fd5b50610205600480360360608110156101e557600080fd5b506001600160a01b03813581169160208101359091169060400135610377565b604080519115158252519081900360200190f35b34801561022557600080fd5b5061022e6103ac565b604080516001600160a01b039092168252519081900360200190f35b61012d6004803603604081101561015257600080fd5b34801561026c57600080fd5b5061019b6004803603602081101561028357600080fd5b50356001600160a01b03166103b0565b34801561029f57600080fd5b5061019b6103c2565b3480156102b457600080fd5b5061012d600480360360208110156102cb57600080fd5b50356001600160a01b0316610364565b3480156102e757600080fd5b5061019b6103c7565b3480156102fc57600080fd5b5061012d6004803603604081101561031357600080fd5b506001600160a01b0381351690602001356103cc565b34801561033557600080fd5b5061019b6004803603604081101561034c57600080fd5b506001600160a01b03813581169160200135166103e8565b50565b5050565b50600090565b60005481565b6001600160a01b0392831660009081526002602052604080822080548490039055929093168352912080549091019055600190565b3090565b60026020526000908152604090205481565b600090565b600190565b6001600160a01b03909116600090815260026020526040902055565b60016020908152600092835260408084209091529082529020548156fea265627a7a723158205445cc76342cafd2d9af66fb138010dbfd299b79b745083237489e793ffdcf0364736f6c63430005100032";

type CDaiDelegateMakerHarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CDaiDelegateMakerHarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CDaiDelegateMakerHarness__factory extends ContractFactory {
  constructor(...args: CDaiDelegateMakerHarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CDaiDelegateMakerHarness> {
    return super.deploy(overrides || {}) as Promise<CDaiDelegateMakerHarness>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CDaiDelegateMakerHarness {
    return super.attach(address) as CDaiDelegateMakerHarness;
  }
  override connect(signer: Signer): CDaiDelegateMakerHarness__factory {
    return super.connect(signer) as CDaiDelegateMakerHarness__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CDaiDelegateMakerHarnessInterface {
    return new utils.Interface(_abi) as CDaiDelegateMakerHarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CDaiDelegateMakerHarness {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CDaiDelegateMakerHarness;
  }
}
