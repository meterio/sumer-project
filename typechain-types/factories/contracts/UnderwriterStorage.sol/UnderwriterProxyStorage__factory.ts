/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UnderwriterProxyStorage,
  UnderwriterProxyStorageInterface,
} from "../../../contracts/UnderwriterStorage.sol/UnderwriterProxyStorage";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "pendingImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610125806100206000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80632678224714604b578063396f7b231460655780635c60da1b14606b578063f851a440146071575b600080fd5b60516077565b604051605c919060c0565b60405180910390f35b60516086565b60516095565b605160a4565b6001546001600160a01b031681565b6003546001600160a01b031681565b6002546001600160a01b031681565b6000546001600160a01b031681565b60ba8160d2565b82525050565b6020810160cc828460b3565b92915050565b60006001600160a01b03821660cc56fea365627a7a72315820c4b1b0a2bc9737b48284122ebe638f4dd5f4f6aeba1be03995408f3441a8e7086c6578706572696d656e74616cf564736f6c63430005100040";

type UnderwriterProxyStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnderwriterProxyStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnderwriterProxyStorage__factory extends ContractFactory {
  constructor(...args: UnderwriterProxyStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UnderwriterProxyStorage> {
    return super.deploy(overrides || {}) as Promise<UnderwriterProxyStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UnderwriterProxyStorage {
    return super.attach(address) as UnderwriterProxyStorage;
  }
  override connect(signer: Signer): UnderwriterProxyStorage__factory {
    return super.connect(signer) as UnderwriterProxyStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnderwriterProxyStorageInterface {
    return new utils.Interface(_abi) as UnderwriterProxyStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnderwriterProxyStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UnderwriterProxyStorage;
  }
}
