/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeedPriceOracleSafe,
  FeedPriceOracleSafeInterface,
} from "../FeedPriceOracleSafe";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "feedId",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "setLpFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setPythFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461006357600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361217590816100698239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182630c1502eb146114685750816316b8e7311461138e5781631badc89a14611352578382631e922ea614611319575081632601c6b11461109b5781632fba4aa91461101957816348a1371b14610e9c578382634b90fd6914610e0d5750816366331bba14610df1578163688202c514610b5f57816369ef32d2146108e7578163715018a61461088257816379ba5097146107c15781638da5cb5b14610799578163b1b06949146104a1578163cad75c681461020357508063e30c3978146101db578063e983fe25146101a4578063f2fde38b146101345763fc57d4df1461010557600080fd5b346101305760203660031901126101305760209061012961012461149c565b61199c565b9051908152f35b5080fd5b82346101a15760203660031901126101a15761014e61149c565b610156611681565b600180546001600160a01b0319166001600160a01b0392831690811790915582549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b80fd5b50346101305760203660031901126101305760209181906001600160a01b036101cb61149c565b1681526003845220549051908152f35b503461013057816003193601126101305760015490516001600160a01b039091168152602090f35b90503461049d57606036600319011261049d5761021e61149c565b602435906044356001600160a01b038181169182900361049957610240611681565b85519261024c84611578565b87845282156104635716948587526020946002865283600160ff81858c20015416610455575b6002845161027f81611547565b8881528b8a8c888285019389855286828701948d8652606088019460128652608089019b8c52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055019151908151916001600160401b038311610442578b610305855461150d565b8b601f8211610409575b50505089908c601f851160011461038e57936000805160206121208339815191529b9a999795938193829361037d9b999794610383575b50501b916000199060031b1c19161790555b815196879687528601528401526012606084015260a0608084015260a08301906114cd565b0390a280f35b015192503880610346565b9190601f9493941984168684528c8420935b8181106103f457509161037d9997959391856000805160206121208339815191529e9d9c9a989694106103db575b505050811b019055610358565b015160001960f88460031b161c191690553880806103ce565b82840151855593860193928d01928d016103a0565b8287610430945220601f860160051c8101918d8710610438575b601f0160051c01906116d9565b8b388b61030f565b9091508190610423565b634e487b7160e01b8c526041855260248cfd5b600388528984812055610272565b865162461bcd60e51b8152602081880152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b8680fd5b8280fd5b9190503461049d57608036600319011261049d576104bd61149c565b6104c56114b7565b906104ce611671565b90606435936001600160401b03808611610795573660238701121561079557858701358181116107825782519589602098601f19936105148b86601f840116018b611593565b808a52366024828401011161049d578060248c9301838c013789010152610539611681565b6001600160a01b0390811694851561074c5791849188949316998a97888d5260028b5260ff8d60019586912001541661073e575b8c8b88519261057b84611547565b828452898285019360038552818601938d8552606087019360ff169e8f8552608088019c8d528252600290522093518455868401925160ff16835492600160a81b6101009003905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055600201945190815194851161072b57508b610600865461150d565b8b601f82116106fd575b5050508b8a92601f86116001146106835750938060039a97946000805160206121208339815191529c9a9794829461037d9b9894610678575b50501b91600019908b1b1c19161790555b80519687968b8852870152850152606084015260a0608084015260a08301906114cd565b015192503880610643565b868e528b8e209495949392915084168d5b8181106106e857509261037d989592859260039c99966000805160206121208339815191529e9c9996106106d0575b505050811b019055610654565b0151600019838d1b60f8161c191690553880806106c3565b82840151855593860193928c01928c01610694565b8288610723945220601f870160051c8101918d881061043857601f0160051c01906116d9565b8b388b61060a565b634e487b7160e01b8d526041905260248cfd5b60038b528c8781205561056d565b845162461bcd60e51b8152808b018a9052601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b634e487b7160e01b895260418852602489fd5b8780fd5b505034610130578160031936011261013057905490516001600160a01b039091168152602090f35b9190503461049d578260031936011261049d57600154916001600160a01b0391338385160361082d5750506001600160a01b031991821660015582543392811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b83346101a157806003193601126101a15761089b611681565b600180546001600160a01b03199081169091558154908116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8391503461013057826003193601126101305761090261149c565b9061090b6114b7565b610913611681565b84519061091f82611578565b8482526001600160a01b03908116938415610b29571692838552602095600287528560019460ff86848420015416610b1b575b6002835161095f81611547565b8381528a81018881528582018781528c846060850191600883528d60808701998d8b525252878d209351845560ff8b8501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550191518051916001600160401b038311610b0857506109e2835461150d565b601f8111610ada575b508990601f8311600114610a6257918061037d9694928b9c9896946000805160206121208339815191529b9c92610a57575b5050600019600383901b1c191690881b1790555b80519586958a87528601528401526008606084015260a0608084015260a08301906114cd565b015190508c80610a1d565b838a528a8a209190601f1984168b5b818110610ac5575092899285926000805160206121208339815191529c9d9e9a989661037d9a989610610aac575b505050811b019055610a31565b015160001960f88460031b161c191690558c8080610a9f565b828401518555938a0193928d01928d01610a71565b610b0290848b528b8b20601f850160051c8101918d861061043857601f0160051c01906116d9565b8a6109eb565b634e487b7160e01b8a5260419052602489fd5b600389528183812055610952565b865162461bcd60e51b8152602081860152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b9190503461049d57606036600319011261049d57610b7b61149c565b91610b846114b7565b92610b8d611671565b92610b96611681565b805194610ba286611578565b8686526001600160a01b03908116928315610dbb5790869493929116958693848952826002602098818a5260ff8c600194859120015416610dad575b8b8a875192610bec84611547565b828452888285019386855286828701948d865260ff6060890195169e8f8652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b038411610d9a5750610c71845461150d565b601f8111610d6c575b5088908b601f8511600114610cf057938060029a97946000805160206121208339815191529c9a9794829461037d9b9894610ce5575b50501b916000199060031b1c191617905580519687968b8852870152850152606084015260a0608084015260a08301906114cd565b015192503880610cb0565b50848c52898c209293929190601f1984168d5b818110610d5757509261037d989592859260029c99966000805160206121208339815191529e9c999610610d3e57505050811b019055610654565b015160001960f88460031b161c191690553880806106c3565b82840151855593860193928c01928c01610d03565b610d9490858d528a8d20601f860160051c8101918c871061043857601f0160051c01906116d9565b38610c7a565b634e487b7160e01b8c526041905260248bfd5b60038a528b86812055610bde565b825162461bcd60e51b8152602081870152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b5050346101305781600319360112610130576020905160018152f35b808434610e99576020366003190112610e9957600290610e2b61149c565b610e33611681565b6001600160a01b031683526020829052822082815560018101839055018054610e5b9061150d565b80610e64575050f35b82601f8211600114610e765750505580f35b9091808252610e94601f60208420940160051c8401600185016116d9565b555580f35b50fd5b839150346101305760208060031936011261049d578135926001600160401b0384116101a157366023850112156101a15783830135610eda8161165a565b94610ee787519687611593565b8186528386016024809360051b83010191368311611015579497969593948301905b828210610fe4575050508351610f1e8161165a565b92610f2b87519485611593565b818452610f378261165a565b8489019690601f1901368837855b838110610f8c57505050505083519485948186019282875251809352850193925b828110610f7557505050500390f35b835185528695509381019392810192600101610f66565b9798969794969594610fb06001600160a01b03610fa98385611fb3565b511661199c565b610fba828a611fb3565b526000198114610fd257600101989796949598610f45565b634e487b7160e01b8652601183528486fd5b969795969395949381356001600160a01b0381168103611011578152949796959394908801908801610f09565b8580fd5b8480fd5b505034610130576020366003190112610130576001600160a01b03916110979082908461104461149c565b1681526002602052209160ff8354936110646002600183015492016115b4565b928051968796875283831660208801528260081c169086015260a81c16606084015260a0608084015260a08301906114cd565b0390f35b90503461049d578160031936011261049d576110b561149c565b6110bd6114b7565b906110c6611681565b8351916110d283611578565b8583526001600160a01b039081169182156112e35716938486528260209460028652600160ff81858b200154166112d5575b6002845161111181611547565b8a81528a898b88828501936005855286828701948d8652606088019460128652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b0384116112c25750611197845461150d565b601f8111611294575b5087908a601f851160011461121857938061037d979460059a979482946000805160206121208339815191529d9b989461120d575b50501b916000199060031b1c19161790555b80519586958a87528601528401526012606084015260a0608084015260a08301906114cd565b0151925038806111d5565b50848b52888b209293929190601f1984168c5b81811061127f5750926000805160206121208339815191529a989592859261037d999660059c999610611266575b505050811b0190556111e7565b015160001960f88460031b161c19169055388080611259565b82840151855593860193928b01928b0161122b565b6112bc90858c52898c20601f860160051c8101918b871061043857601f0160051c01906116d9565b386111a0565b634e487b7160e01b8b526041905260248afd5b600387528884812055611104565b855162461bcd60e51b8152602081870152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b808434610e99576020366003190112610e995761133461149c565b61133c611681565b6001600160a01b03168252600360205281205580f35b50503461013057806003193601126101305761136c61149c565b611374611681565b6001600160a01b0316825260036020528120602435905580f35b8284346101a15760209182600319360112610130578060ff611097926113b261149c565b946060608083516113c281611547565b83815289810184905284810184905282810184905201526001600160a01b03958616815260028752208251946113f786611547565b815486526001820154918787019484841686528461142e6002838b0194868860081c1686528360608d019860a81c168852016115b4565b9660808a0197885282519a8b9a818c5251908b015251169088015251166060860152511660808401525160a08084015260c08301906114cd565b8490843461049d57602036600319011261049d576020926001600160a01b0361148f61149c565b1681526003845220548152f35b600435906001600160a01b03821682036114b257565b600080fd5b602435906001600160a01b03821682036114b257565b919082519283825260005b8481106114f9575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016114d8565b90600182811c9216801561153d575b602083101461152757565b634e487b7160e01b600052602260045260246000fd5b91607f169161151c565b60a081019081106001600160401b0382111761156257604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761156257604052565b90601f801991011681019081106001600160401b0382111761156257604052565b90604051918260008254926115c88461150d565b90818452600194858116908160001461163757506001146115f4575b50506115f292500383611593565b565b9093915060005260209081600020936000915b81831061161f5750506115f2935082010138806115e4565b85548884018501529485019487945091830191611607565b9150506115f294506020925060ff191682840152151560051b82010138806115e4565b6001600160401b0381116115625760051b60200190565b6044359060ff821682036114b257565b6000546001600160a01b0316330361169557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8181106116e4575050565b600081556001016116d9565b90670de0b6b3a76400009182810292818404149015171561170d57565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561170d57565b9060405161174381611547565b608061177f600283958054855260ff6001820154818116602088015260018060a01b038160081c16604088015260a81c166060860152016115b4565b910152565b908160209103126114b2575160ff811681036114b25790565b6040513d6000823e3d90fd5b60ff166012039060ff821161170d57565b156117c157565b60405162461bcd60e51b8152602060048201526011602482015270444543494d414c20554e444552464c4f5760781b6044820152606490fd5b51906001600160501b03821682036114b257565b908160a09103126114b257611822816117fa565b916020820151916040810151916118406080606084015193016117fa565b90565b1561184a57565b60405162461bcd60e51b815260206004820152600b60248201526a5374616c6520707269636560a81b6044820152606490fd5b1561188457565b60405162461bcd60e51b815260206004820152600e60248201526d6e6567617469766520707269636560901b6044820152606490fd5b9062015180820180921161170d57565b9190820180921161170d57565b156118de57565b60405162461bcd60e51b81526020600482015260076024820152661d1a5b595bdd5d60ca1b6044820152606490fd5b604d811161170d57600a0a90565b908160209103126114b2575190565b908160609103126114b2576040519060608201908282106001600160401b0383111761156257604091825280518352602081015160208401520151604082015290565b61197f604092838352838301906114cd565b90602081830391015260038152621554d160ea1b60208201520190565b6001600160a01b03811660009081526002602052604090206119bd90611736565b6040810180519092916001600160a01b0390911690816119f7575b50506001600160a01b0316600090815260036020526040902090505490565b602080820192600160ff611a0c865160ff1690565b1614611c005750600260ff611a22855160ff1690565b1614611b665750600360ff611a38845160ff1690565b1614611a9157600460ff611a4d845160ff1690565b1614611a84575060ff611a636005925160ff1690565b1614611a705781806119d8565b5051611840906001600160a01b0316611d5b565b9150506118409150611fdd565b611b0a939250606091506080611aeb611adf611adf611ac4611abe611ab98888015160ff1690565b6117a9565b60ff1690565b96611ad260128911156117ba565b516001600160a01b031690565b6001600160a01b031690565b91015190604051808096819463195556f360e21b83526004830161196d565b03915afa918215611b615761184092611b2d91600091611b33575b50519161190d565b90611723565b611b54915060603d8111611b5a575b611b4c8183611593565b81019061192a565b38611b25565b503d611b42565b61179d565b93915060049250611b99611adf611adf611b8b611abe611ab960608a97015160ff1690565b94611ad260128711156117ba565b60405163029f8a6d60e11b815293849182905afa918215611b615761184093600093611bcb575b5050611b2d9061190d565b611b2d9293509081611bf192903d10611bf9575b611be98183611593565b81019061191b565b919038611bc0565b503d611bdf565b909350600492508391506040519283809263313ce56760e01b82525afa908115611b6157611adf611adf611c49611abe60a095611c5795600498600092611d0f575b50506117a9565b95611ad260128811156117ba565b604051633fabe5a360e21b815292839182905afa8015611b61576118409260008092818091611cc5575b611b2d94955091611ca7611cb892611cc0946001600160501b0380911691161015611843565b611cb36000871361187d565b6118ba565b4211156118d7565b61190d565b505050611b2d9150611cc0611cb8611cf6611ca79560a03d8111611d08575b611cee8183611593565b81019061180e565b9298508897509450909250611c819050565b503d611ce4565b611d2e9250803d10611d35575b611d268183611593565b810190611784565b3880611c42565b503d611d1c565b908160209103126114b257516001600160a01b03811681036114b25790565b604051630dfe168160e01b81526020906001600160a01b038316908281600481855afa908115611b61578390600092611e0c575b5060405163d21220a760e01b81529192829060049082905afa928315611b6157600093611dd7575b5050611dc39083611e5d565b90611dce9192611e5d565b611840916118ca565b611dc39293509081611dfd92903d10611e05575b611df58183611593565b810190611d3c565b919038611db7565b503d611deb565b60049250611e2690823d8411611e0557611df58183611593565b91611d8f565b8115611e36570490565b634e487b7160e01b600052601260045260246000fd5b60ff16604d811161170d57600a0a90565b6040516370a0823160e01b81526001600160a01b038281166004830152838116939290916020918282602481895afa918215611b61576004968491600094611f94575b5060405163313ce56760e01b815297889182905afa958615611b6157600096611f73575b5082906004604051809681936318160ddd60e01b8352165afa908115611b6157611f0a93611f0493600093611f4e575b5050611eff906116f0565b611e2c565b9161199c565b61184092611f259290601260ff821610611f33575b50611723565b670de0b6b3a7640000900490565b90611b2d611f43611f48936117a9565b611e4c565b38611f1f565b611eff9293509081611f6b92903d10611bf957611be98183611593565b919038611ef4565b83919650611f8d90823d8411611d3557611d268183611593565b9590611ec4565b611fac919450823d8411611bf957611be98183611593565b9238611ea0565b8051821015611fc75760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b604090608060018060a01b0383830151169151604484518094819363052571af60e51b8352600483015261070860248301525afa90811561211457600091612076575b509081015160030b60000390818060030b0361170d5763ffffffff8092166012039180831161170d5761206f6001600160401b039161184094169261206860128511156117ba565b519261190d565b9116611723565b6080813d821161210c575b8161208e60809383611593565b81010312610130578251916001600160401b0360808401818111858210176120f857855282518060070b810361049d5784526020830151908116810361013057602084015283820151908160030b82036101a1575090606091848401520151606082015238612020565b634e487b7160e01b83526041600452602483fd5b3d9150612081565b82513d6000823e3d90fdfe3d8adf1be139385d82a5f0d83d5ac348b4bc37e1e1613ccde2a9de0376090c28a26469706673582212203ddd3a9fde5552837d1c1f04bf03a1f342fd415b1d356070731573add54baea364736f6c63430008130033";

export class FeedPriceOracleSafe__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeedPriceOracleSafe> {
    return super.deploy(overrides || {}) as Promise<FeedPriceOracleSafe>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeedPriceOracleSafe {
    return super.attach(address) as FeedPriceOracleSafe;
  }
  connect(signer: Signer): FeedPriceOracleSafe__factory {
    return super.connect(signer) as FeedPriceOracleSafe__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleSafeInterface {
    return new utils.Interface(_abi) as FeedPriceOracleSafeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedPriceOracleSafe {
    return new Contract(address, _abi, signerOrProvider) as FeedPriceOracleSafe;
  }
}
