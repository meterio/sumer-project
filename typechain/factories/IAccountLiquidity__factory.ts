/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IAccountLiquidity,
  IAccountLiquidityInterface,
} from "../IAccountLiquidity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenModify",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "intraSafeLimitMantissa",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interSafeLimitMantissa",
        type: "uint256",
      },
    ],
    name: "getGroupVars",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "cDepositVal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cBorrowVal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "suDepositVal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "suBorrowVal",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "intraCRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "intraMintRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "intraSuRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "interCRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "interSuRate",
            type: "tuple",
          },
        ],
        internalType: "struct IAccountLiquidity.AccountGroupLocalVars[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenModify",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
    ],
    name: "getHypotheticalAccountLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenModify",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "redeemTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
    ],
    name: "getHypotheticalGroupSummary",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "cDepositVal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cBorrowVal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "suDepositVal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "suBorrowVal",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "intraCRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "intraMintRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "intraSuRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "interCRate",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "mantissa",
                type: "uint256",
              },
            ],
            internalType: "struct Exp",
            name: "interSuRate",
            type: "tuple",
          },
        ],
        internalType: "struct IAccountLiquidity.AccountGroupLocalVars",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenModify",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "intraSafeLimitMantissa",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interSafeLimitMantissa",
        type: "uint256",
      },
    ],
    name: "getHypotheticalSafeLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IAccountLiquidity__factory {
  static readonly abi = _abi;
  static createInterface(): IAccountLiquidityInterface {
    return new utils.Interface(_abi) as IAccountLiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAccountLiquidity {
    return new Contract(address, _abi, signerOrProvider) as IAccountLiquidity;
  }
}
