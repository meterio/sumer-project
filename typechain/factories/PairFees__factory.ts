/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PairFees, PairFeesInterface } from "../PairFees";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "claimFeesFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60803461009257601f61045138819003918201601f19168301916001600160401b0383118484101761009757808492604094855283398101031261009257610052602061004b836100ad565b92016100ad565b9060018060a01b0319913383600054161760005560018060a01b038092168360015416176001551690600254161760025560405161038f90816100c28239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100925756fe608080604052600436101561001357600080fd5b600090813560e01c63533cf5ce1461002a57600080fd5b346100cc5760603660031901126100cc576001600160a01b039060043582811681036100c8576024356044359284865416330361009b575080610086575b5081610072578380f35b61007f92600254166100d0565b3880808380f35b610095908285600154166100d0565b38610068565b62461bcd60e51b81526020600482015260086024820152672737ba103830b4b960c11b6044820152606490fd5b8380fd5b5080fd5b9291906040516020928382019163a9059cbb60e01b835260018060a01b0391826024951685830152604482015260448152608081019167ffffffffffffffff978284108985111761027057169060c0810183811089821117610270576040528583527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a0820152600080948192519082855af13d1561025f573d9188831161024c5760405192601f19603f81601f8401160116840199848b10908b1117610239576101ab959697989960405283528286893d92013e610285565b8051806101ba575b5050505050565b818591810103126100cc578301519081159182150361023657506101e0578080806101b3565b90602a6084926040519262461bcd60e51b845260048401528201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b80fd5b634e487b7160e01b865260416004528686fd5b634e487b7160e01b855260416004528585fd5b6101ab939495969750606091610285565b85634e487b7160e01b60005260416004526000fd5b919290156102e75750815115610299575090565b3b156102a25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156102fa5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610340575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061031d56fea2646970667358221220d138b322cfe348e327948c94470273e7b7a52abf7a60c2c6722f59b6c865ec9764736f6c63430008130033";

export class PairFees__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token0: string,
    _token1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PairFees> {
    return super.deploy(_token0, _token1, overrides || {}) as Promise<PairFees>;
  }
  getDeployTransaction(
    _token0: string,
    _token1: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token0, _token1, overrides || {});
  }
  attach(address: string): PairFees {
    return super.attach(address) as PairFees;
  }
  connect(signer: Signer): PairFees__factory {
    return super.connect(signer) as PairFees__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PairFeesInterface {
    return new utils.Interface(_abi) as PairFeesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PairFees {
    return new Contract(address, _abi, signerOrProvider) as PairFees;
  }
}
