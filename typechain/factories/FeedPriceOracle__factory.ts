/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../FeedPriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561134e806100326000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80634b90fd6911610097578063ab9bfdfc11610066578063ab9bfdfc14610212578063e983fe2514610225578063f0be381114610238578063fc57d4df1461024b576100f5565b80634b90fd69146101c257806366331bba146101d55780638da5cb5b146101ea578063a6f9dae1146101ff576100f5565b80631e922ea6116100d35780631e922ea6146101585780632ef91c871461016b5780632fba4aa91461017e57806348a1371b146101a2576100f5565b80630c1502eb146100fa57806316b8e731146101235780631badc89a14610143575b600080fd5b61010d610108366004610df1565b61025e565b60405161011a9190611294565b60405180910390f35b610136610131366004610df1565b61027d565b60405161011a9190611238565b610156610151366004610f7f565b610372565b005b610156610166366004610df1565b6103c1565b610156610179366004610e58565b610405565b61019161018c366004610df1565b610453565b60405161011a95949392919061129d565b6101b56101b0366004610fa8565b61051f565b60405161011a9190611138565b6101566101d0366004610df1565b6105b8565b6101dd61061d565b60405161011a919061117c565b6101f2610622565b60405161011a9190611124565b61015661020d366004610df1565b610631565b610156610220366004610e12565b6106a3565b61010d610233366004610df1565b6106ec565b610156610246366004610eaf565b6106fe565b61010d610259366004610df1565b61073e565b6001600160a01b0381166000908152600260205260409020545b919050565b610285610cc2565b6001600160a01b03828116600090815260016020818152604092839020835160a081018552815460ff808216835261010080830490981683860152600160a81b8204811683880152600160b01b90910416606082015281840180548651600296821615909802600019011694909404601f8101849004840287018401909552848652949093608086019391928301828280156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050815250509050919050565b6000546001600160a01b031633146103a55760405162461bcd60e51b815260040161039c90611214565b60405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6000546001600160a01b031633146103eb5760405162461bcd60e51b815260040161039c90611214565b6001600160a01b0316600090815260026020526040812055565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161039c90611214565b61044d84600285858560405180602001604052806000815250610b48565b50505050565b60016020818152600092835260409283902080548184018054865160026101009783161588026000190190921691909104601f810186900486028201860190975286815260ff808416979684046001600160a01b031696600160a81b8504821696600160b01b90950490911694939192918301828280156105155780601f106104ea57610100808354040283529160200191610515565b820191906000526020600020905b8154815290600101906020018083116104f857829003601f168201915b5050505050905085565b805160609060008167ffffffffffffffff8111801561053d57600080fd5b50604051908082528060200260200182016040528015610567578160200160208202803683370190505b50905060005b828110156105b05761059185828151811061058457fe5b602002602001015161073e565b82828151811061059d57fe5b602090810291909101015260010161056d565b509392505050565b6000546001600160a01b031633146105e25760405162461bcd60e51b815260040161039c90611214565b6001600160a01b0381166000908152600160208190526040822080546001600160b81b0319168155919061061890830182610cf2565b505050565b600181565b6000546001600160a01b031681565b6000546001600160a01b0316331461065b5760405162461bcd60e51b815260040161039c90611214565b6001600160a01b0381166106815760405162461bcd60e51b815260040161039c906111ea565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106cd5760405162461bcd60e51b815260040161039c90611214565b6106188360018484600060405180602001604052806000815250610b48565b60026020526000908152604090205481565b6000546001600160a01b031633146107285760405162461bcd60e51b815260040161039c90611214565b61073785600386868686610b48565b5050505050565b6001600160a01b038181166000908152600160208181526040808420815160a081018352815460ff808216835261010080830490991683870152600160a81b8204811683860152600160b01b90910416606082015281850180548451600297821615909902600019011695909504601f8101859004850288018501909352828752949586959491936080860193919291908301828280156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b5050509190925250505060208101519091506001600160a01b031615610b2b57805160ff166001141561097957600081602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561088c57600080fd5b505afa1580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c491906110bd565b82604001516024030360ff169050602460ff168111156108f65760405162461bcd60e51b815260040161039c906111bf565b80600a0a82602001516001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561093757600080fd5b505afa15801561094b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096f9190611050565b0292505050610278565b805160ff1660021415610a48576000816060015182604001516024030360ff169050602460ff168111156109bf5760405162461bcd60e51b815260040161039c906111bf565b600082602001516001600160a01b031663053f14da6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109fe57600080fd5b505afa158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190611050565b905081600a0a81029350505050610278565b805160ff1660031415610b2b576000816060015182604001516024030360ff169050602460ff16811115610a8e5760405162461bcd60e51b815260040161039c906111bf565b6020820151608083015160405163195556f360e21b81526000926001600160a01b0316916365555bcc91610ac59190600401611187565b60606040518083038186803b158015610add57600080fd5b505afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b159190611068565b905081600a0a8160000151029350505050610278565b50506001600160a01b031660009081526002602052604090205490565b6001600160a01b038416610b6e5760405162461bcd60e51b815260040161039c906111ea565b6001600160a01b03861660009081526001602052604090205460ff1615610ba9576001600160a01b0386166000908152600260205260408120555b6040805160a08101825260ff87811682526001600160a01b03878116602080850191825288841685870190815288851660608701908152608087018981528e8616600090815260018086529990208851815496519451935160ff1990971690891617610100600160a81b03191661010094909716939093029590951760ff60a81b1916600160a81b918716919091021760ff60b01b1916600160b01b939095169290920293909317815590518051939485949293610c6c93918501920190610d39565b50905050866001600160a01b03167f1b292eb0703e5754e27a16b9921a0fad5631d77def2d1c27902b6bf37d194a9c8787878787604051610cb195949392919061129d565b60405180910390a250505050505050565b6040805160a081018252600080825260208201819052918101829052606080820192909252608081019190915290565b50805460018160011615610100020316600290046000825580601f10610d185750610d36565b601f016020900490600052602060002090810190610d369190610dc5565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610d6f5760008555610db5565b82601f10610d8857805160ff1916838001178555610db5565b82800160010185558215610db5579182015b82811115610db5578251825591602001919060010190610d9a565b50610dc1929150610dc5565b5090565b5b80821115610dc15760008155600101610dc6565b80356001600160a01b038116811461027857600080fd5b600060208284031215610e02578081fd5b610e0b82610dda565b9392505050565b600080600060608486031215610e26578182fd5b610e2f84610dda565b9250610e3d60208501610dda565b91506040840135610e4d81611309565b809150509250925092565b60008060008060808587031215610e6d578081fd5b610e7685610dda565b9350610e8460208601610dda565b92506040850135610e9481611309565b91506060850135610ea481611309565b939692955090935050565b600080600080600060a08688031215610ec6578081fd5b610ecf86610dda565b94506020610ede818801610dda565b94506040870135610eee81611309565b93506060870135610efe81611309565b9250608087013567ffffffffffffffff80821115610f1a578384fd5b818901915089601f830112610f2d578384fd5b813581811115610f3957fe5b610f4b601f8201601f191685016112e5565b91508082528a84828501011115610f60578485fd5b8084840185840137810190920192909252949793965091945092919050565b60008060408385031215610f91578182fd5b610f9a83610dda565b946020939093013593505050565b60006020808385031215610fba578182fd5b823567ffffffffffffffff80821115610fd1578384fd5b818501915085601f830112610fe4578384fd5b813581811115610ff057fe5b83810291506110008483016112e5565b8181528481019084860184860187018a101561101a578788fd5b8795505b838610156110435761102f81610dda565b83526001959095019491860191860161101e565b5098975050505050505050565b600060208284031215611061578081fd5b5051919050565b600060608284031215611079578081fd5b6040516060810181811067ffffffffffffffff8211171561109657fe5b80604052508251815260208301516020820152604083015160408201528091505092915050565b6000602082840312156110ce578081fd5b8151610e0b81611309565b60008151808452815b818110156110fe576020818501810151868301820152016110e2565b8181111561110f5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561117057835183529284019291840191600101611154565b50909695505050505050565b901515815260200190565b60006040825261119a60408301846110d9565b828103602084015260038152621554d160ea1b60208201526040810191505092915050565b602080825260119082015270444543494d414c20554e444552464c4f5760781b604082015260600190565b60208082526010908201526f41646472657373206973205a65726f2160801b604082015260600190565b6020808252600a908201526927a7262c9027aba722a960b11b604082015260600190565b60006020825260ff835116602083015260018060a01b03602084015116604083015260ff604084015116606083015260ff6060840151166080830152608083015160a08084015261128c60c08401826110d9565b949350505050565b90815260200190565b60ff86811682526001600160a01b038616602083015284811660408301528316606082015260a0608082018190526000906112da908301846110d9565b979650505050505050565b60405181810167ffffffffffffffff8111828210171561130157fe5b604052919050565b60ff81168114610d3657600080fdfea2646970667358221220167b4ec683276b67f6b4d102a667dc5026cf801e81ae5f2dbd1edae539a8636464736f6c63430007060033";

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeedPriceOracle> {
    return super.deploy(overrides || {}) as Promise<FeedPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeedPriceOracle {
    return super.attach(address) as FeedPriceOracle;
  }
  connect(signer: Signer): FeedPriceOracle__factory {
    return super.connect(signer) as FeedPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new utils.Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as FeedPriceOracle;
  }
}
