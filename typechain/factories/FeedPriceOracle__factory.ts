/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../FeedPriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611319806100326000396000f3fe608060405234801561001057600080fd5b50600436106100c55760003560e01c80630c1502eb146100ca57806316b8e731146100f35780631badc89a146101135780631e922ea6146101285780632ef91c871461013b5780632fba4aa91461014e57806348a1371b146101725780634b90fd691461019257806366331bba146101a55780638da5cb5b146101ba578063a6f9dae1146101cf578063ab9bfdfc146101e2578063e983fe25146101f5578063f0be381114610208578063fc57d4df1461021b575b600080fd5b6100dd6100d8366004610dc0565b61022e565b6040516100ea9190611260565b60405180910390f35b610106610101366004610dc0565b61024d565b6040516100ea9190611204565b610126610121366004610f4d565b610342565b005b610126610136366004610dc0565b610391565b610126610149366004610e27565b6103d5565b61016161015c366004610dc0565b610423565b6040516100ea959493929190611269565b610185610180366004610f76565b6104ef565b6040516100ea9190611104565b6101266101a0366004610dc0565b610587565b6101ad6105ec565b6040516100ea9190611148565b6101c26105f1565b6040516100ea91906110f0565b6101266101dd366004610dc0565b610600565b6101266101f0366004610de1565b610672565b6100dd610203366004610dc0565b6106bb565b610126610216366004610e7e565b6106cd565b6100dd610229366004610dc0565b61070d565b6001600160a01b0381166000908152600260205260409020545b919050565b610255610c91565b6001600160a01b03828116600090815260016020818152604092839020835160a081018552815460ff808216835261010080830490981683860152600160a81b8204811683880152600160b01b90910416606082015281840180548651600296821615909802600019011694909404601f8101849004840287018401909552848652949093608086019391928301828280156103325780601f1061030757610100808354040283529160200191610332565b820191906000526020600020905b81548152906001019060200180831161031557829003601f168201915b5050505050815250509050919050565b6000546001600160a01b031633146103755760405162461bcd60e51b815260040161036c906111e0565b60405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6000546001600160a01b031633146103bb5760405162461bcd60e51b815260040161036c906111e0565b6001600160a01b0316600090815260026020526040812055565b6000546001600160a01b031633146103ff5760405162461bcd60e51b815260040161036c906111e0565b61041d84600285858560405180602001604052806000815250610b17565b50505050565b60016020818152600092835260409283902080548184018054865160026101009783161588026000190190921691909104601f810186900486028201860190975286815260ff808416979684046001600160a01b031696600160a81b8504821696600160b01b90950490911694939192918301828280156104e55780601f106104ba576101008083540402835291602001916104e5565b820191906000526020600020905b8154815290600101906020018083116104c857829003601f168201915b5050505050905085565b80516060906000816001600160401b038111801561050c57600080fd5b50604051908082528060200260200182016040528015610536578160200160208202803683370190505b50905060005b8281101561057f5761056085828151811061055357fe5b602002602001015161070d565b82828151811061056c57fe5b602090810291909101015260010161053c565b509392505050565b6000546001600160a01b031633146105b15760405162461bcd60e51b815260040161036c906111e0565b6001600160a01b0381166000908152600160208190526040822080546001600160b81b031916815591906105e790830182610cc1565b505050565b600181565b6000546001600160a01b031681565b6000546001600160a01b0316331461062a5760405162461bcd60e51b815260040161036c906111e0565b6001600160a01b0381166106505760405162461bcd60e51b815260040161036c906111b6565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461069c5760405162461bcd60e51b815260040161036c906111e0565b6105e78360018484600860405180602001604052806000815250610b17565b60026020526000908152604090205481565b6000546001600160a01b031633146106f75760405162461bcd60e51b815260040161036c906111e0565b61070685600386868686610b17565b5050505050565b6001600160a01b038181166000908152600160208181526040808420815160a081018352815460ff808216835261010080830490991683870152600160a81b8204811683860152600160b01b90910416606082015281850180548451600297821615909902600019011695909504601f8101859004850288018501909352828752949586959491936080860193919291908301828280156107ef5780601f106107c4576101008083540402835291602001916107ef565b820191906000526020600020905b8154815290600101906020018083116107d257829003601f168201915b5050509190925250505060208101519091506001600160a01b031615610afa57805160ff166001141561094857600081602001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561085b57600080fd5b505afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190611089565b82604001516024030360ff169050602460ff168111156108c55760405162461bcd60e51b815260040161036c9061118b565b80600a0a82602001516001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561090657600080fd5b505afa15801561091a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093e919061101d565b0292505050610248565b805160ff1660021415610a17576000816060015182604001516024030360ff169050602460ff1681111561098e5760405162461bcd60e51b815260040161036c9061118b565b600082602001516001600160a01b031663053f14da6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109cd57600080fd5b505afa1580156109e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a05919061101d565b905081600a0a81029350505050610248565b805160ff1660031415610afa576000816060015182604001516024030360ff169050602460ff16811115610a5d5760405162461bcd60e51b815260040161036c9061118b565b6020820151608083015160405163195556f360e21b81526000926001600160a01b0316916365555bcc91610a949190600401611153565b60606040518083038186803b158015610aac57600080fd5b505afa158015610ac0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae49190611035565b905081600a0a8160000151029350505050610248565b50506001600160a01b031660009081526002602052604090205490565b6001600160a01b038416610b3d5760405162461bcd60e51b815260040161036c906111b6565b6001600160a01b03861660009081526001602052604090205460ff1615610b78576001600160a01b0386166000908152600260205260408120555b6040805160a08101825260ff87811682526001600160a01b03878116602080850191825288841685870190815288851660608701908152608087018981528e8616600090815260018086529990208851815496519451935160ff1990971690891617610100600160a81b03191661010094909716939093029590951760ff60a81b1916600160a81b918716919091021760ff60b01b1916600160b01b939095169290920293909317815590518051939485949293610c3b93918501920190610d08565b50905050866001600160a01b03167f1b292eb0703e5754e27a16b9921a0fad5631d77def2d1c27902b6bf37d194a9c8787878787604051610c80959493929190611269565b60405180910390a250505050505050565b6040805160a081018252600080825260208201819052918101829052606080820192909252608081019190915290565b50805460018160011615610100020316600290046000825580601f10610ce75750610d05565b601f016020900490600052602060002090810190610d059190610d94565b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282610d3e5760008555610d84565b82601f10610d5757805160ff1916838001178555610d84565b82800160010185558215610d84579182015b82811115610d84578251825591602001919060010190610d69565b50610d90929150610d94565b5090565b5b80821115610d905760008155600101610d95565b80356001600160a01b038116811461024857600080fd5b600060208284031215610dd1578081fd5b610dda82610da9565b9392505050565b600080600060608486031215610df5578182fd5b610dfe84610da9565b9250610e0c60208501610da9565b91506040840135610e1c816112d4565b809150509250925092565b60008060008060808587031215610e3c578081fd5b610e4585610da9565b9350610e5360208601610da9565b92506040850135610e63816112d4565b91506060850135610e73816112d4565b939692955090935050565b600080600080600060a08688031215610e95578081fd5b610e9e86610da9565b94506020610ead818801610da9565b94506040870135610ebd816112d4565b93506060870135610ecd816112d4565b925060808701356001600160401b0380821115610ee8578384fd5b818901915089601f830112610efb578384fd5b813581811115610f0757fe5b610f19601f8201601f191685016112b1565b91508082528a84828501011115610f2e578485fd5b8084840185840137810190920192909252949793965091945092919050565b60008060408385031215610f5f578182fd5b610f6883610da9565b946020939093013593505050565b60006020808385031215610f88578182fd5b82356001600160401b0380821115610f9e578384fd5b818501915085601f830112610fb1578384fd5b813581811115610fbd57fe5b8381029150610fcd8483016112b1565b8181528481019084860184860187018a1015610fe7578788fd5b8795505b8386101561101057610ffc81610da9565b835260019590950194918601918601610feb565b5098975050505050505050565b60006020828403121561102e578081fd5b5051919050565b600060608284031215611046578081fd5b604051606081016001600160401b038111828210171561106257fe5b80604052508251815260208301516020820152604083015160408201528091505092915050565b60006020828403121561109a578081fd5b8151610dda816112d4565b60008151808452815b818110156110ca576020818501810151868301820152016110ae565b818111156110db5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b8181101561113c57835183529284019291840191600101611120565b50909695505050505050565b901515815260200190565b60006040825261116660408301846110a5565b828103602084015260038152621554d160ea1b60208201526040810191505092915050565b602080825260119082015270444543494d414c20554e444552464c4f5760781b604082015260600190565b60208082526010908201526f41646472657373206973205a65726f2160801b604082015260600190565b6020808252600a908201526927a7262c9027aba722a960b11b604082015260600190565b60006020825260ff835116602083015260018060a01b03602084015116604083015260ff604084015116606083015260ff6060840151166080830152608083015160a08084015261125860c08401826110a5565b949350505050565b90815260200190565b60ff86811682526001600160a01b038616602083015284811660408301528316606082015260a0608082018190526000906112a6908301846110a5565b979650505050505050565b6040518181016001600160401b03811182821017156112cc57fe5b604052919050565b60ff81168114610d0557600080fdfea2646970667358221220c69bfaedffe184a2ef4da28bf43cfddde5f330bc483533304d22c71de1bf173164736f6c63430007060033";

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeedPriceOracle> {
    return super.deploy(overrides || {}) as Promise<FeedPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeedPriceOracle {
    return super.attach(address) as FeedPriceOracle;
  }
  connect(signer: Signer): FeedPriceOracle__factory {
    return super.connect(signer) as FeedPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new utils.Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as FeedPriceOracle;
  }
}
