/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../FeedPriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461002857600080546001600160a01b03191633179055611526908161002e8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182630c1502eb14610ce65750816316b8e73114610c255781631badc89a14610be0578382631e922ea614610b9e575081632fba4aa914610b2757816348a1371b146109a9578382634b90fd691461091e5750816366331bba14610902578163688202c5146106b357816369ef32d21461047a5781638da5cb5b14610452578163a6f9dae114610402578163b1b069491461013457508063e983fe25146100fd5763fc57d4df146100ce57600080fd5b346100f95760203660031901126100f9576020906100f26100ed610d1a565b61102e565b9051908152f35b5080fd5b50346100f95760203660031901126100f95760209181906001600160a01b03610124610d1a565b1681526002845220549051908152f35b919050346103fe5760803660031901126103fe57610150610d1a565b91610159610d35565b610161610ef3565b6064359367ffffffffffffffff928386116103fa57366023870112156103fa5785850135938085116103e757825194602096601f19906101a88983601f8601160189610e13565b8288528b366024858d0101116103e4578989968282876101f69f9860248d9a01838d01378a01015282546001600160a01b039182916101ea9083163314610f03565b169d8e9d8e1515610f3c565b169c8d998a8452600196879485855260ff82822054166103d6575b8582519561021e87610dc5565b600387528087019586528387019460ff169e8f8652606088019d8e5283525220925160ff16835492600160a81b6101009003905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171781550194519081519485116103c357508b61028d8654610d8b565b8a601f821161038a575b5050508b8992601f8611600114610311575093610300979593819382936000805160206114d18339815191529d9c9b999794610306575b50501b916000199060031b1c19161790555b805195869560038752860152840152608060608401526080830190610d4b565b0390a280f35b0151925038806102ce565b868e528a8e209495949392915084168d5b8181106103755750916000805160206114d18339815191529b9a9997959391856103009a9896941061035c575b505050811b0190556102e0565b015160001960f88460031b161c1916905538808061034f565b82840151855593860193928b01928b01610322565b82886103b1945220601f870160051c8101918c88106103b9575b601f0160051c0190610f7b565b8b388a610297565b90915081906103a4565b634e487b7160e01b8d526041905260248cfd5b600285528082812055610211565b80fd5b634e487b7160e01b895260418652602489fd5b8780fd5b8280fd5b83346103e45760203660031901126103e45761041c610d1a565b8154906001600160a01b03906104353383851614610f03565b1690610442821515610f3c565b6001600160a01b03191617815580f35b5050346100f957816003193601126100f957905490516001600160a01b039091168152602090f35b9050346103fe57816003193601126103fe57610494610d1a565b61049c610d35565b84546001600160a01b03906104b49082163314610f03565b808551926104c184610df7565b87845216926104d1841515610f3c565b16938486526001928260209585875260ff848a2054166106a5575b8589888a60ff888051946104ff86610dc5565b86865286858701958b87528388019560088752606089019b8c5283525220935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b16171717815501915180519167ffffffffffffffff831161069257506105708354610d8b565b601f8111610664575b5087908a601f84116001146105ea5792806000805160206114d18339815191529a99989693600896936103009996926105df575b5050600019600383901b1c191690881b1790555b81519687968752860152840152608060608401526080830190610d4b565b0151905038806105ad565b50838b52888b209190601f1984168c5b81811061064f57509389989693600896936000805160206114d18339815191529c9b93836103009b9810610636575b505050811b0190556105c1565b015160001960f88460031b161c19169055388080610629565b828401518555938a0193928b01928b016105fa565b61068c90848c52898c20601f850160051c8101918b86106103b957601f0160051c0190610f7b565b38610579565b634e487b7160e01b8b526041905260248afd5b6002875288848120556104ec565b919050346103fe5760603660031901126103fe576106cf610d1a565b906106d8610d35565b926106e1610ef3565b85546001600160a01b0395869385926106fd9086163314610f03565b825194859261070b84610df7565b8a84521697889761071d891515610f3c565b16978894858b528a600192839260ff60209b8c948686528282822054166108f4575b8682519661074c88610dc5565b600288528088019687528484890196169d8e8752606089019c8d5283525220935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b16171717815501925180519267ffffffffffffffff84116108e157506107be8454610d8b565b601f81116108b3575b5087908b601f85116001146108385793610300979593819382936000805160206114d18339815191529d9c9b99979461082d575b50501b916000199060031b1c19161790555b805195869560028752860152840152608060608401526080830190610d4b565b0151925038806107fb565b50848c52888c209293929190601f1984168d5b81811061089e5750916000805160206114d18339815191529b9a9997959391856103009a98969410610885575b505050811b01905561080d565b015160001960f88460031b161c19169055388080610878565b82840151855593860193928b01928b0161084b565b6108db90858d52898d20601f860160051c8101918b87106103b957601f0160051c0190610f7b565b386107c7565b634e487b7160e01b8c526041905260248bfd5b60028652808281205561073f565b5050346100f957816003193601126100f9576020905160018152f35b8084346109a65760203660031901126109a65760019061093c610d1a565b828060a01b0390610951828654163314610f03565b168352816020528220828155016109688154610d8b565b80610971575050f35b82601f82116001146109835750505580f35b90918082526109a1601f60208420940160051c840160018501610f7b565b555580f35b50fd5b839150346100f9576020806003193601126103fe5781359267ffffffffffffffff84116103e457366023850112156103e457838301356109e881610edb565b946109f587519687610e13565b8186528386016024809360051b83010191368311610b23579497969593948301905b828210610af2575050508351610a2c81610edb565b92610a3987519485610e13565b818452610a4582610edb565b8489019690601f1901368837855b838110610a9a57505050505083519485948186019282875251809352850193925b828110610a8357505050500390f35b835185528695509381019392810192600101610a74565b9798969794969594610abe6001600160a01b03610ab783856114a6565b511661102e565b610ac8828a6114a6565b526000198114610ae057600101989796949598610a53565b634e487b7160e01b8652601183528486fd5b969795969395949381356001600160a01b0381168103610b1f578152949796959394908801908801610a17565b8580fd5b8480fd5b8284346103e45760203660031901126103e4576001600160a01b0390610b9a90839083610b52610d1a565b16815260016020522092610b6a600185549501610e35565b9060ff815195869582821687528160081c16602087015260a81c1690840152608060608401526080830190610d4b565b0390f35b8084346109a65760203660031901126109a657610bb9610d1a565b82546001600160a01b039190610bd29083163314610f03565b168252600260205281205580f35b5050346100f957806003193601126100f957610bfa610d1a565b82546001600160a01b039190610c139083163314610f03565b16825260026020526024359082205580f35b5050346100f957602090816003193601126103fe5760ff92918382610b9a93610c4c610d1a565b956060808351610c5b81610dc5565b83815283888201528385820152015260018060a01b038097168152600185522090805195610c8887610dc5565b8254928484168852610cb26001878a0192848760081c16845287868c019760a81c16875201610e35565b95606089019687528351998a99828b52511690890152511690860152511660608401525160808084015260a0830190610d4b565b849084346103fe5760203660031901126103fe576020926001600160a01b03610d0d610d1a565b1681526002845220548152f35b600435906001600160a01b0382168203610d3057565b600080fd5b602435906001600160a01b0382168203610d3057565b919082519283825260005b848110610d77575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610d56565b90600182811c92168015610dbb575b6020831014610da557565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d9a565b6080810190811067ffffffffffffffff821117610de157604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117610de157604052565b90601f8019910116810190811067ffffffffffffffff821117610de157604052565b9060405191826000825492610e4984610d8b565b908184526001948581169081600014610eb85750600114610e75575b5050610e7392500383610e13565b565b9093915060005260209081600020936000915b818310610ea0575050610e7393508201013880610e65565b85548884018501529485019487945091830191610e88565b915050610e7394506020925060ff191682840152151560051b8201013880610e65565b67ffffffffffffffff8111610de15760051b60200190565b6044359060ff82168203610d3057565b15610f0a57565b60405162461bcd60e51b815260206004820152600a60248201526927a7262c9027aba722a960b11b6044820152606490fd5b15610f4357565b60405162461bcd60e51b815260206004820152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b818110610f86575050565b60008155600101610f7b565b81810292918115918404141715610fa557565b634e487b7160e01b600052601160045260246000fd5b60ff166012039060ff8211610fa557565b15610fd357565b60405162461bcd60e51b8152602060048201526011602482015270444543494d414c20554e444552464c4f5760781b6044820152606490fd5b51906001600160501b0382168203610d3057565b604d8111610fa557600a0a90565b60018060a01b03809116600090808252602090600182526040938484209085519061105882610dc5565b82549060ff8083168452611084600188860196848660081c168852838c88019660a81c16865201610e35565b9260609485810194855283875116806110ac575b505050505050505090600291835252205490565b600184835116146112915750600283825116146111f4575182166003146110d4578080611098565b89965091816110ef8699969593611123959c989c5116610fbb565b16996110fe60128c1115610fcc565b511690518551958693849263195556f360e21b84528260048501526044840190610d4b565b621554d160ea1b87848303926003198401602487015260038152015201915afa9485156111e957809561116e575b50505050509061116561116b925191611020565b90610f92565b90565b9091929380955083813d83116111e2575b6111898183610e13565b810103126103e45783519485019085821067ffffffffffffffff8311176111ce575083528151845280820151908401528101519082015261116561116b388080611151565b634e487b7160e01b81526041600452602490fd5b503d61117f565b8351903d90823e3d90fd5b5087959998965060049794508192935090611210915116610fbb565b169661121f6012891115610fcc565b511685519485809263029f8a6d60e11b82525afa93841561128657508193611251575b50505061116561116b92611020565b9091809350813d831161127f575b6112698183610e13565b810103126103e457505161116561116b38611242565b503d61125f565b51913d9150823e3d90fd5b8b5163313ce56760e01b81529c9b60049b989a99509795508892508c91508a9082905afa801561149c5788999a8499989991611450575b50906112d660a09392610fbb565b16976112e560128a1115610fcc565b5116845198898092633fabe5a360e21b82525afa801561144457818298839484936113ee575b50506001600160501b038091169116106113bd5780871315611389576201518082018092116113765750421161134b575050509061116561116b92611020565b5162461bcd60e51b81529182015260076024820152661d1a5b595bdd5d60ca1b604482015260649150fd5b634e487b7160e01b815260118552602490fd5b50505162461bcd60e51b815291820152600e60248201526d6e6567617469766520707269636560901b604482015260649150fd5b50505162461bcd60e51b815291820152600b60248201526a5374616c6520707269636560a81b604482015260649150fd5b94509850505060a0873d821161143c575b8161140c60a09383610e13565b810103126103e45761141d8761100c565b916114326080868a0151928a0151990161100c565b909792388061130b565b3d91506113ff565b508251903d90823e3d90fd5b878099508193949596979892503d8311611495575b61146f8183610e13565b81010312611491575181811681036114915788969594939291906112d66112c8565b8380fd5b503d611465565b85513d85823e3d90fd5b80518210156114ba5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfec860856125aafa8b271ac64b4debfca1494605c299323106ddffb6282c24a329a2646970667358221220bf974e8a133c043452138efdd217448fd8c0681d0ce70b4fa6cf9d0d326e240464736f6c63430008130033";

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeedPriceOracle> {
    return super.deploy(overrides || {}) as Promise<FeedPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeedPriceOracle {
    return super.attach(address) as FeedPriceOracle;
  }
  connect(signer: Signer): FeedPriceOracle__factory {
    return super.connect(signer) as FeedPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new utils.Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as FeedPriceOracle;
  }
}
