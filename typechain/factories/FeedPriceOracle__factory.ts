/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../FeedPriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "tokenDecimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals_",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611546806100326000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80634b90fd6911610097578063ab9bfdfc11610066578063ab9bfdfc1461023e578063e983fe2514610251578063f0be381114610271578063fc57d4df1461028457600080fd5b80634b90fd69146101d557806366331bba146101e85780638da5cb5b14610200578063a6f9dae11461022b57600080fd5b80631e922ea6116100d35780631e922ea61461016b5780632ef91c871461017e5780632fba4aa91461019157806348a1371b146101b557600080fd5b80630c1502eb146100fa57806316b8e731146101365780631badc89a14610156575b600080fd5b610123610108366004610e4a565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b610149610144366004610e4a565b610297565b60405161012d9190610eb9565b610169610164366004610f0d565b6103b8565b005b610169610179366004610e4a565b610407565b61016961018c366004610f46565b61044b565b6101a461019f366004610e4a565b610499565b60405161012d959493929190610f9e565b6101c86101c336600461102d565b610568565b60405161012d91906110da565b6101696101e3366004610e4a565b610616565b6101f0600181565b604051901515815260200161012d565b600054610213906001600160a01b031681565b6040516001600160a01b03909116815260200161012d565b610169610239366004610e4a565b61067b565b61016961024c36600461111e565b610710565b61012361025f366004610e4a565b60026020526000908152604090205481565b61016961027f366004611165565b610759565b610123610292366004610e4a565b610799565b6040805160a0808201835260008083526020808401829052838501829052606080850183905260808086018290526001600160a01b03888116855260018085529488902088519687018952805460ff8082168952610100820490931695880195909552600160a81b8504821698870198909852600160b01b909304909216908401529084018054939492939184019161032f90611241565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90611241565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050815250509050919050565b6000546001600160a01b031633146103eb5760405162461bcd60e51b81526004016103e29061127c565b60405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6000546001600160a01b031633146104315760405162461bcd60e51b81526004016103e29061127c565b6001600160a01b0316600090815260026020526040812055565b6000546001600160a01b031633146104755760405162461bcd60e51b81526004016103e29061127c565b61049384600285858560405180602001604052806000815250610bc0565b50505050565b60016020819052600091825260409091208054918101805460ff808516946001600160a01b0361010082041694600160a81b8204831694600160b01b909204909216926104e590611241565b80601f016020809104026020016040519081016040528092919081815260200182805461051190611241565b801561055e5780601f106105335761010080835404028352916020019161055e565b820191906000526020600020905b81548152906001019060200180831161054157829003601f168201915b5050505050905085565b805160609060008167ffffffffffffffff81111561058857610588610fe6565b6040519080825280602002602001820160405280156105b1578160200160208202803683370190505b50905060005b8281101561060e576105e18582815181106105d4576105d46112a0565b6020026020010151610799565b8282815181106105f3576105f36112a0565b6020908102919091010152610607816112cc565b90506105b7565b509392505050565b6000546001600160a01b031633146106405760405162461bcd60e51b81526004016103e29061127c565b6001600160a01b0381166000908152600160208190526040822080546001600160b81b0319168155919061067690830182610d58565b505050565b6000546001600160a01b031633146106a55760405162461bcd60e51b81526004016103e29061127c565b6001600160a01b0381166106ee5760405162461bcd60e51b815260206004820152601060248201526f41646472657373206973205a65726f2160801b60448201526064016103e2565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461073a5760405162461bcd60e51b81526004016103e29061127c565b6106768360018484600860405180602001604052806000815250610bc0565b6000546001600160a01b031633146107835760405162461bcd60e51b81526004016103e29061127c565b61079285600386868686610bc0565b5050505050565b6001600160a01b038082166000908152600160208181526040808420815160a081018352815460ff8082168352610100820490981694820194909452600160a81b8404871692810192909252600160b01b9092049094166060850152908101805492938493909291608084019161080f90611241565b80601f016020809104026020016040519081016040528092919081815260200182805461083b90611241565b80156108885780601f1061085d57610100808354040283529160200191610888565b820191906000526020600020905b81548152906001019060200180831161086b57829003601f168201915b5050509190925250505060208101519091506001600160a01b031615610ba357805160ff16600114156109e057600081602001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d91906112e7565b604083015161092d906024611304565b6109379190611304565b60ff169050602481111561095d5760405162461bcd60e51b81526004016103e290611327565b61096881600a611438565b82602001516001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ce9190611444565b6109d8919061145d565b949350505050565b805160ff1660021415610abd576000816060015182604001516024610a059190611304565b610a0f9190611304565b60ff1690506024811115610a355760405162461bcd60e51b81526004016103e290611327565b600082602001516001600160a01b031663053f14da6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190611444565b9050610aaa82600a611438565b610ab4908261145d565b95945050505050565b805160ff1660031415610ba3576000816060015182604001516024610ae29190611304565b610aec9190611304565b60ff1690506024811115610b125760405162461bcd60e51b81526004016103e290611327565b6020820151608083015160405163195556f360e21b81526000926001600160a01b0316916365555bcc91610b49919060040161147c565b606060405180830381865afa158015610b66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8a91906114b4565b9050610b9782600a611438565b8151610ab4919061145d565b50506001600160a01b031660009081526002602052604090205490565b6001600160a01b038416610c095760405162461bcd60e51b815260206004820152601060248201526f41646472657373206973205a65726f2160801b60448201526064016103e2565b6001600160a01b03861660009081526001602052604090205460ff1615610c44576001600160a01b0386166000908152600260205260408120555b6040805160a08101825260ff80881682526001600160a01b03808816602080850191825288841685870190815288851660608701908152608087018981528e861660009081526001808652999020885181549651945193518916600160b01b0260ff60b01b19948a16600160a81b029490941661ffff60a81b1995909816610100026001600160a81b031990971698169790971794909417919091169390931792909217835551805193948594610d02939185019290910190610d95565b50905050866001600160a01b03167f1b292eb0703e5754e27a16b9921a0fad5631d77def2d1c27902b6bf37d194a9c8787878787604051610d47959493929190610f9e565b60405180910390a250505050505050565b508054610d6490611241565b6000825580601f10610d74575050565b601f016020900490600052602060002090810190610d929190610e19565b50565b828054610da190611241565b90600052602060002090601f016020900481019282610dc35760008555610e09565b82601f10610ddc57805160ff1916838001178555610e09565b82800160010185558215610e09579182015b82811115610e09578251825591602001919060010190610dee565b50610e15929150610e19565b5090565b5b80821115610e155760008155600101610e1a565b80356001600160a01b0381168114610e4557600080fd5b919050565b600060208284031215610e5c57600080fd5b610e6582610e2e565b9392505050565b6000815180845260005b81811015610e9257602081850181015186830182015201610e76565b81811115610ea4576000602083870101525b50601f01601f19169290920160200192915050565b6020815260ff825116602082015260018060a01b03602083015116604082015260ff604083015116606082015260ff60608301511660808201526000608083015160a0808401526109d860c0840182610e6c565b60008060408385031215610f2057600080fd5b610f2983610e2e565b946020939093013593505050565b60ff81168114610d9257600080fd5b60008060008060808587031215610f5c57600080fd5b610f6585610e2e565b9350610f7360208601610e2e565b92506040850135610f8381610f37565b91506060850135610f9381610f37565b939692955090935050565b60ff86811682526001600160a01b038616602083015284811660408301528316606082015260a060808201819052600090610fdb90830184610e6c565b979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561102557611025610fe6565b604052919050565b6000602080838503121561104057600080fd5b823567ffffffffffffffff8082111561105857600080fd5b818501915085601f83011261106c57600080fd5b81358181111561107e5761107e610fe6565b8060051b915061108f848301610ffc565b81815291830184019184810190888411156110a957600080fd5b938501935b838510156110ce576110bf85610e2e565b825293850193908501906110ae565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611112578351835292840192918401916001016110f6565b50909695505050505050565b60008060006060848603121561113357600080fd5b61113c84610e2e565b925061114a60208501610e2e565b9150604084013561115a81610f37565b809150509250925092565b600080600080600060a0868803121561117d57600080fd5b61118686610e2e565b94506020611195818801610e2e565b945060408701356111a581610f37565b935060608701356111b581610f37565b9250608087013567ffffffffffffffff808211156111d257600080fd5b818901915089601f8301126111e657600080fd5b8135818111156111f8576111f8610fe6565b61120a601f8201601f19168501610ffc565b91508082528a8482850101111561122057600080fd5b80848401858401376000848284010152508093505050509295509295909350565b600181811c9082168061125557607f821691505b6020821081141561127657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927a7262c9027aba722a960b11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156112e0576112e06112b6565b5060010190565b6000602082840312156112f957600080fd5b8151610e6581610f37565b600060ff821660ff84168082101561131e5761131e6112b6565b90039392505050565b602080825260119082015270444543494d414c20554e444552464c4f5760781b604082015260600190565b600181815b8085111561138d578160001904821115611373576113736112b6565b8085161561138057918102915b93841c9390800290611357565b509250929050565b6000826113a457506001611432565b816113b157506000611432565b81600181146113c757600281146113d1576113ed565b6001915050611432565b60ff8411156113e2576113e26112b6565b50506001821b611432565b5060208310610133831016604e8410600b8410161715611410575081810a611432565b61141a8383611352565b806000190482111561142e5761142e6112b6565b0290505b92915050565b6000610e658383611395565b60006020828403121561145657600080fd5b5051919050565b6000816000190483118215151615611477576114776112b6565b500290565b60408152600061148f6040830184610e6c565b828103602084015260038152621554d160ea1b60208201526040810191505092915050565b6000606082840312156114c657600080fd5b6040516060810181811067ffffffffffffffff821117156114e9576114e9610fe6565b8060405250825181526020830151602082015260408301516040820152809150509291505056fea26469706673582212201a1bdf2476534e03231665eb17d171a01b2866a42a07e701400a665c01fa893464736f6c634300080b0033";

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeedPriceOracle> {
    return super.deploy(overrides || {}) as Promise<FeedPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeedPriceOracle {
    return super.attach(address) as FeedPriceOracle;
  }
  connect(signer: Signer): FeedPriceOracle__factory {
    return super.connect(signer) as FeedPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new utils.Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as FeedPriceOracle;
  }
}
