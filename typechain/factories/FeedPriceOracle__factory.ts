/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../FeedPriceOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "feedId",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setPythFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461002857600080546001600160a01b03191633179055611949908161002e8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182630c1502eb14610f5a5750816316b8e73114610e805781631badc89a14610e3b578382631e922ea614610df9575081632fba4aa914610d7757816348a1371b14610bfe578382634b90fd6914610b685750816366331bba14610b4c578163688202c5146108fe57816369ef32d2146106b25781638da5cb5b1461068a578163a6f9dae114610637578163ae29a842146103c6578163b1b069491461013f57508063e983fe25146101085763fc57d4df146100d957600080fd5b34610104576020366003190112610104576020906100fd6100f8610f8e565b6112f4565b9051908152f35b5080fd5b50346101045760203660031901126101045760209181906001600160a01b0361012f610f8e565b1681526002845220549051908152f35b919050346103c25760803660031901126103c2578261015c610f8e565b610164610fa9565b9061016d611163565b91606435906001600160401b038083116103be5761018f879336908a01611173565b95869260018060a01b0380916101a98285541633146111c9565b16956101b6871515611202565b1698899687835260ff6001809b819560209d8e52200154166103b0575b8b8a8751926101e184611039565b82845288828501936003855287828701948d8652606088019460ff169e8f8652608089019c8d528352522093518455858401925160ff16835492600160a81b6101009003905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055600201935190815193841161039d57506102638454610fff565b601f8111610364575b5088908b601f85116001146102e857938060039a97946000805160206118f48339815191529c9a979482946102d79b98946102dd575b50501b91600019908b1b1c19161790555b80519687968b8852870152850152606084015260a0608084015260a0830190610fbf565b0390a280f35b0151925038806102a2565b50848c52898c209293929190601f1984168d5b81811061034f5750926102d7989592859260039c99966000805160206118f48339815191529e9c999610610337575b505050811b0190556102b3565b0151600019838d1b60f8161c1916905538808061032a565b82840151855593860193928c01928c016102fb565b61038d90858d528a8d20601f860160051c8101918c8710610393575b601f0160051c0190611241565b3861026c565b9091508190610380565b634e487b7160e01b8c526041905260248bfd5b60028a528b868120556101d3565b8580fd5b8280fd5b919050346103c25760803660031901126103c2576103e2610f8e565b91602435906001600160a01b0390604435828116919082900361063357606435906001600160401b039687831161062f57610421879336908401611173565b948591610432828c541633146111c9565b61043d861515611202565b1697888a5260016002888c888d60209d8e9387855260ff88838320015416610622575b81519561046c87611039565b865287858701958c8752838801958652606088019460128652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055019251805192831161060f578b6104e38554610fff565b8b601f82116105e1575b50505089908c601f851160011461056657936000805160206118f48339815191529b9a99979593819382936102d79b99979461055b575b50501b916000199060031b1c19161790555b815196879687528601528401526012606084015260a0608084015260a0830190610fbf565b015192503880610524565b9190601f9493941984168684528c8420935b8181106105cc5750916102d79997959391856000805160206118f48339815191529e9d9c9a989694106105b3575b505050811b019055610536565b015160001960f88460031b161c191690553880806105a6565b82840151855593860193928d01928d01610578565b8287610607945220601f860160051c8101918d871061039357601f0160051c0190611241565b8b388b6104ed565b634e487b7160e01b8c526041855260248cfd5b8685528082812055610460565b8880fd5b8680fd5b833461068757602036600319011261068757610651610f8e565b8154906001600160a01b039061066a33838516146111c9565b1690610677821515611202565b6001600160a01b03191617815580f35b80fd5b505034610104578160031936011261010457905490516001600160a01b039091168152602090f35b8383346101045780600319360112610104576106cc610f8e565b906106d5610fa9565b83546001600160a01b03906106ed90821633146111c9565b808351926106fa8461106a565b868452169361070a851515611202565b16928385526001928560209785895260ff868484200154166108f0575b6002835161073481611039565b8381528a81018881528582018781528c8a6060850191600883528d60808701998d8b525252878d209351845560ff8b8501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550191518051916001600160401b0383116108dd57506107b78354610fff565b601f81116108af575b508990601f83116001146108375791806102d79694928b9c9896946000805160206118f48339815191529b9c9261082c575b5050600019600383901b1c191690881b1790555b80519586958a87528601528401526008606084015260a0608084015260a0830190610fbf565b015190508c806107f2565b838a528a8a209190601f1984168b5b81811061089a575092899285926000805160206118f48339815191529c9d9e9a98966102d79a989610610881575b505050811b019055610806565b015160001960f88460031b161c191690558c8080610874565b828401518555938a0193928d01928d01610846565b6108d790848b528b8b20601f850160051c8101918d861061039357601f0160051c0190611241565b8a6107c0565b634e487b7160e01b8a5260419052602489fd5b600289528183812055610727565b919050346103c25760603660031901126103c25760029161091d610f8e565b610925610fa9565b908361092f611163565b9260018060a01b0394610946868a541633146111c9565b888684519788946109568661106a565b8386521695610966871515611202565b1698899687835260ff6001809b819560209d8e5220015416610b3f575b8b8a87519261099184611039565b828452888285019386855287828701948d865260ff6060890195169e8f8652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b03841161039d5750610a168454610fff565b601f8111610b11575b5088908b601f8511600114610a9557938060029a97946000805160206118f48339815191529c9a979482946102d79b9894610a8a575b50501b916000199060031b1c191617905580519687968b8852870152850152606084015260a0608084015260a0830190610fbf565b015192503880610a55565b50848c52898c209293929190601f1984168d5b818110610afc5750926102d7989592859260029c99966000805160206118f48339815191529e9c999610610ae357505050811b0190556102b3565b015160001960f88460031b161c1916905538808061032a565b82840151855593860193928c01928c01610aa8565b610b3990858d528a8d20601f860160051c8101918c871061039357601f0160051c0190611241565b38610a1f565b818a528b86812055610983565b5050346101045781600319360112610104576020905160018152f35b808434610bfb576020366003190112610bfb57600290610b86610f8e565b83546001600160a01b039190610b9f90831633146111c9565b1683526001602052822082815582600182015501610bbd8154610fff565b80610bc6575050f35b82601f8211600114610bd85750505580f35b9091808252610bf6601f60208420940160051c840160018501611241565b555580f35b50fd5b83915034610104576020806003193601126103c2578135926001600160401b03841161068757366023850112156106875783830135610c3c8161114c565b94610c4987519687611085565b8186528386016024809360051b83010191368311610d73579497969593948301905b828210610d46575050508351610c808161114c565b92610c8d87519485611085565b818452610c998261114c565b8489019690601f1901368837855b838110610cee57505050505083519485948186019282875251809352850193925b828110610cd757505050500390f35b835185528695509381019392810192600101610cc8565b9798969794969594610d126001600160a01b03610d0b83856118c9565b51166112f4565b610d1c828a6118c9565b526000198114610d3457600101989796949598610ca7565b634e487b7160e01b8652601183528486fd5b969795969395949381356001600160a01b03811681036103be578152949796959394908801908801610c6b565b8480fd5b505034610104576020366003190112610104576001600160a01b0391610df590829084610da2610f8e565b1681526001602052209160ff835493610dc26002600183015492016110a6565b928051968796875283831660208801528260081c169086015260a81c16606084015260a0608084015260a0830190610fbf565b0390f35b808434610bfb576020366003190112610bfb57610e14610f8e565b82546001600160a01b039190610e2d90831633146111c9565b168252600260205281205580f35b505034610104578060031936011261010457610e55610f8e565b82546001600160a01b039190610e6e90831633146111c9565b16825260026020526024359082205580f35b8284346106875760209182600319360112610104578060ff610df592610ea4610f8e565b94606060808351610eb481611039565b83815289810184905284810184905282810184905201526001600160a01b0395861681526001875220825194610ee986611039565b8154865260018201549187870194848416865284610f206002838b0194868860081c1686528360608d019860a81c168852016110a6565b9660808a0197885282519a8b9a818c5251908b015251169088015251166060860152511660808401525160a08084015260c0830190610fbf565b849084346103c25760203660031901126103c2576020926001600160a01b03610f81610f8e565b1681526002845220548152f35b600435906001600160a01b0382168203610fa457565b600080fd5b602435906001600160a01b0382168203610fa457565b919082519283825260005b848110610feb575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610fca565b90600182811c9216801561102f575b602083101461101957565b634e487b7160e01b600052602260045260246000fd5b91607f169161100e565b60a081019081106001600160401b0382111761105457604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761105457604052565b90601f801991011681019081106001600160401b0382111761105457604052565b90604051918260008254926110ba84610fff565b90818452600194858116908160001461112957506001146110e6575b50506110e492500383611085565b565b9093915060005260209081600020936000915b8183106111115750506110e4935082010138806110d6565b855488840185015294850194879450918301916110f9565b9150506110e494506020925060ff191682840152151560051b82010138806110d6565b6001600160401b0381116110545760051b60200190565b6044359060ff82168203610fa457565b81601f82011215610fa4578035906001600160401b03821161105457604051926111a7601f8401601f191660200185611085565b82845260208383010111610fa457816000926020809301838601378301015290565b156111d057565b60405162461bcd60e51b815260206004820152600a60248201526927a7262c9027aba722a960b11b6044820152606490fd5b1561120957565b60405162461bcd60e51b815260206004820152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b81811061124c575050565b60008155600101611241565b8181029291811591840414171561126b57565b634e487b7160e01b600052601160045260246000fd5b60ff166012039060ff821161126b57565b1561129957565b60405162461bcd60e51b8152602060048201526011602482015270444543494d414c20554e444552464c4f5760781b6044820152606490fd5b51906001600160501b0382168203610fa457565b604d811161126b57600a0a90565b60018060a01b0380911660009080825260209060018252604093848420855161131c81611039565b8154815260018201549285820160ff808616825289840191838760081c1683526113556002606097848989019a60a81c168a52016110a6565b608097888701918252858551168061137e575b5050505050505050505090600291835252205490565b600185855116146116bf57506002848451161461162057600384845116146114ff57505051166004146113b5578080808080611368565b849550979597939192935116915160248651809481936396834ad360e01b835260048301525afa9586156114f557859661145a575b5050505082015160030b810390818060030b036114465763ffffffff80921660120390828211611446575061143c61144393926001600160401b039216926114356012851115611292565b51926112e6565b9116611258565b90565b634e487b7160e01b81526011600452602490fd5b9091928094965082813d83116114ee575b6114758183611085565b81010312610d73578551938401906001600160401b0391858110838211176114da57875282518060070b81036106335785528083015191821682036103be57840152848101518060030b8103610d7357838601528101519082015291388080806113ea565b634e487b7160e01b87526041600452602487fd5b503d61146b565b84513d87823e3d90fd5b8c995061151f91949c9850879a9796508392509261155395935116611281565b169961152e60128c1115611292565b511690518551958693849263195556f360e21b84528260048501526044840190610fbf565b621554d160ea1b87848303926003198401602487015260038152015201915afa94851561161557809561159b575b5050505050906115956114439251916112e6565b90611258565b9091929380955083813d831161160e575b6115b68183611085565b81010312610687578351948501908582106001600160401b038311176115fa5750835281518452808201519084015281015190820152611595611443388080611581565b634e487b7160e01b81526041600452602490fd5b503d6115ac565b8351903d90823e3d90fd5b91505061163e929a9997508896506004989550819394505116611281565b169661164d6012891115611292565b511685519485809263029f8a6d60e11b82525afa9384156116b45750819361167f575b505050611595611443926112e6565b9091809350813d83116116ad575b6116978183611085565b8101031261068757505161159561144338611670565b503d61168d565b51913d9150823e3d90fd5b95949b9650505050879650899599519788809463313ce56760e01b825260049a8b915afa9283156118bf5790889291859461187d575b5061170260a09394611281565b169861171160128b1115611292565b5116855192838092633fabe5a360e21b82525afa90811561187357829083998495859461181d575b5050506001600160501b038091169116106117ec57808713156117b8576201518082018092116117a55750421161177a5750505090611595611443926112e6565b5162461bcd60e51b81529182015260076024820152661d1a5b595bdd5d60ca1b604482015260649150fd5b634e487b7160e01b815260118552602490fd5b50505162461bcd60e51b815291820152600e60248201526d6e6567617469766520707269636560901b604482015260649150fd5b50505162461bcd60e51b815291820152600b60248201526a5374616c6520707269636560a81b604482015260649150fd5b9350945098505060a0883d821161186b575b8161183c60a09383611085565b8101031261010457611860611850896112d2565b93868a0151928a015199016112d2565b909792388080611739565b3d915061182f565b84513d84823e3d90fd5b91935091508681813d81116118b8575b6118978183611085565b810103126118b4575181811681036118b4579187916117026116f5565b8380fd5b503d61188d565b86513d86823e3d90fd5b80518210156118dd5760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe3d8adf1be139385d82a5f0d83d5ac348b4bc37e1e1613ccde2a9de0376090c28a26469706673582212208d8f08d6e968f142aae534a761bd6e3007bb95c4daad4d4dcd9574fc6832356864736f6c63430008130033";

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeedPriceOracle> {
    return super.deploy(overrides || {}) as Promise<FeedPriceOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeedPriceOracle {
    return super.attach(address) as FeedPriceOracle;
  }
  connect(signer: Signer): FeedPriceOracle__factory {
    return super.connect(signer) as FeedPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new utils.Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeedPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as FeedPriceOracle;
  }
}
