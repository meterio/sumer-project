/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompLogic, CompLogicInterface } from "../CompLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompBorrowSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CompGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompSupplySpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "ContributorCompSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compBorrowIndex",
        type: "uint256",
      },
    ],
    name: "DistributedBorrowerComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "supplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compSupplyIndex",
        type: "uint256",
      },
    ],
    name: "DistributedSupplierComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "SetComptroller",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_grantComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "supplySpeeds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "borrowSpeeds",
        type: "uint256[]",
      },
    ],
    name: "_setCompSpeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "compSpeed",
        type: "uint256",
      },
    ],
    name: "_setContributorCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "borrowers",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "suppliers",
        type: "bool",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "comp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compContributorSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compInitialIndex",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplySpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplyState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "distributeBorrowerComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "distributeSupplierComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comp",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "initializeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastContributorBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supplySpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowSpeed",
        type: "uint256",
      },
    ],
    name: "setCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "_comptroller",
        type: "address",
      },
    ],
    name: "setComptroller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "updateCompBorrowIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "updateCompSupplyIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "updateContributorRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657612bf2908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461120157508163082bc0ab146111ca578163109d0af8146111a15781631c3db2e01461115f578163248a9ca31461113457816327efe3cb1461107d5781632f2ff15d14610fc157816336568abe14610f2f578163485cc95514610d6d5781634f54b3c014610d2e578163598ee1cb14610c865781635f87769b14610c475781635fe3b56714610c1e57816365658c3e14610bca5781636810dfa6146109025781636aa875b5146108ca5781636b79c38d14610871578163741b25251461084c578163759c082a146107425781638bad38dd146106d45781638c57804e146106775781639010d07c1461063657816391d14854146105ef578163986ab838146105b7578163a217fddf1461059c578163a7f0e23114610573578163a8b439481461043f578163b21be7fd146103f6578163bea6b8b8146103be578163ca0af04314610375578163ca15c8731461034d578163cc7ebdc414610315578163d547741f146102d9578163e9af02921461024e57508063f47dbe02146101eb5763f4a433c0146101b157600080fd5b346101e75760203660031901126101e75760209181906001600160a01b036101d761126e565b16815260d1845220549051908152f35b5080fd5b50346101e75760603660031901126101e75761020561126e565b61020d611289565b602036604319011261024a576102479251916102288361129f565b604435835261024260018060a01b0360ca54163314611ad0565b6121eb565b80f35b8380fd5b9050346102d55760203660031901126102d55761026961126e565b60ca54835163b0772d0b60e01b815292859184919082906001600160a01b03165afa9182156102c857610247935084926102a4575b506124a3565b6102c19192503d8086833e6102b98183611309565b810190612405565b903861029e565b50505051903d90823e3d90fd5b8280fd5b919050346102d557806003193601126102d557610247913561031060016102fe611289565b93838752606560205286200154611603565b61175c565b5050346101e75760203660031901126101e75760209181906001600160a01b0361033d61126e565b16815260cb845220549051908152f35b9050346102d55760203660031901126102d55760209282913581526097845220549051908152f35b5050346101e757806003193601126101e7578060209261039361126e565b61039b611289565b6001600160a01b03918216835260cf865283832091168252845220549051908152f35b5050346101e75760203660031901126101e75760209181906001600160a01b036103e661126e565b16815260cd845220549051908152f35b5050346101e757806003193601126101e7578060209261041461126e565b61041c611289565b6001600160a01b03918216835260ce865283832091168252845220549051908152f35b9050346102d55760603660031901126102d55767ffffffffffffffff90803582811161056f576104729036908301611343565b60243583811161056b5761048990369084016113b1565b9260443590811161056b576104a190369084016113b1565b916104aa61140f565b8151948451861480610561575b1561050c575050845b8481106104cb578580f35b610507906105026001600160a01b036104e4838661248f565b51166104f0838861248f565b516104fb848861248f565b5191611b33565b612738565b6104c0565b906020608492519162461bcd60e51b8352820152602960248201527f436f6d7074726f6c6c65723a3a5f736574436f6d7053706565647320696e76616044820152681b1a59081a5b9c1d5d60ba1b6064820152fd5b50835186146104b7565b8580fd5b8480fd5b5050346101e757816003193601126101e757602090516a0c097ce7bc90715b34b9f160241b8152f35b5050346101e757816003193601126101e75751908152602090f35b5050346101e75760203660031901126101e75760209181906001600160a01b036105df61126e565b16815260cc845220549051908152f35b9050346102d557816003193601126102d5578160209360ff92610610611289565b90358252606586528282206001600160a01b039091168252855220549151911615158152f35b9050346102d557816003193601126102d557602092610661913581526097845282602435912061191b565b905491519160018060a01b039160031b1c168152f35b5050346101e75760203660031901126101e7576106d09181906001600160a01b036106a061126e565b16815260d360209081529190205491516001600160e01b038316815260e09290921c908201529081906040820190565b0390f35b9050346102d55760203660031901126102d557356001600160a01b03811691908290036102d5577f51e0228fe901c430722ddefd46e1d63fd4127597ef3ae7c79ae73d2de14fbf389160209161072861140f565b60ca80546001600160a01b0319168317905551908152a180f35b5050346101e757806003193601126101e75761075c61126e565b906024359063ffffffff8216820361024a5760ca54610247936001600160a01b039161078b9083163314611ad0565b16845260d26020526107e5828286209260d36020528620835460018060e01b03908181161561082a575b50815490811615610808575b5080546001600160e01b031660e09290921b6001600160e01b031916919091179055565b80546001600160e01b031660e09290921b6001600160e01b031916919091179055565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b178155386107c1565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b178555386107b5565b833461086e57602036600319011261086e5761024761086961126e565b612365565b80fd5b5050346101e75760203660031901126101e7576106d09181906001600160a01b0361089a61126e565b16815260d260209081529190205491516001600160e01b038316815260e09290921c908201529081906040820190565b5050346101e75760203660031901126101e75760209181906001600160a01b036108f261126e565b16815260d0845220549051908152f35b919050346102d55760803660031901126102d55767ffffffffffffffff823581811161056f576109359036908501611343565b9060243590811161056f5761094d9036908501611343565b936044359384151585036101e7576064359081151582036102d557825b8751811015610b5c576001600160a01b0380610986838b61248f565b5116906024888260ca5416815192838092638e8f294b60e01b8252878a8301525afa908115610b52578791610b24575b5015610ae95788610a27575b846109d8575b50506109d390612738565b61096a565b96919792949098936109e98a611da2565b815b8751811015610a1357806105028a610a06610a0e948c61248f565b51168d612074565b6109eb565b509398509391966109d391965090386109c8565b95949291939787999199519763aa5af0fd60e01b8952888b818660209c8d935afa998a15610adf57869a610aaf575b5050805198610a648a61129f565b8952610a70898c611f57565b845b8751811015610a9c57806105028b8e8c610a8f610a97968e61248f565b5116906121eb565b610a72565b50975097939192949584999199506109c2565b9080929a50813d8311610ad8575b610ac78183611309565b8101031261056f5751973880610a56565b503d610abd565b82513d88823e3d90fd5b875162461bcd60e51b815260208186015260156024820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b610b449150893d8b11610b4b575b610b3c8183611309565b810190611b09565b50386109b6565b503d610b32565b89513d89823e3d90fd5b838686825b8151811015610bc657610bc1906001600160a01b0380610b81838661248f565b511681610b8e848761248f565b5116875260cb90610ba8602091838352888a205490612747565b92610bb3858861248f565b511688525284862055612738565b610b61565b8380f35b5050346101e757806003193601126101e757610be461126e565b60203660231901126102d557610247915190610bff8261129f565b6024358252610c1960018060a01b0360ca54163314611ad0565b611f57565b5050346101e757816003193601126101e75760ca5490516001600160a01b039091168152602090f35b833461086e57606036600319011261086e57610247610c6461126e565b610c7960018060a01b0360ca54163314611ad0565b6044359060243590611b33565b5050346101e757806003193601126101e7577f386537fa92edc3319af95f1f904dcf1900021e4f3f4e08169a577a09076e66b36020610cc361126e565b60243590610ccf61140f565b610cd881612365565b81610d13576001600160a01b038116865260cd83528486208690555b6001600160a01b031680865260cc83528486208290559351908152a280f35b6001600160a01b038116865260cd8352848620439055610cf4565b5050346101e75736600319011261086e57610247610d4a61126e565b610d52611289565b90610d6860018060a01b0360ca54163314611ad0565b612074565b9050346102d557816003193601126102d557610d8761126e565b90610d90611289565b91845460ff8160081c161592838094610f22575b8015610f0b575b15610eb1575060ff198082166001178755610e18929184610ea0575b5060c980546001600160a01b0319166001600160a01b0396871617905586805260656020908152868820929095168088529185528587205460ff1615610e58575b5085805260978452848620611933565b50610e21578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a138808280f35b8680526065855285872082885285526001868820918254161790553381877f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a438610e08565b61ffff191661010117875538610dc7565b608490602087519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b158015610dab5750600160ff831614610dab565b50600160ff831610610da4565b839150346101e757826003193601126101e757610f4a611289565b90336001600160a01b03831603610f665790610247913561175c565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b919050346102d557806003193601126102d5576110309135906097610fe4611289565b9280865260209060658252610ffe60018589200154611603565b808752606582528387206001600160a01b039095168088529482528387205460ff1615611034575b8652528320611933565b5080f35b808752606582528387208588528252838720805460ff191660011790553385827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8a80a4611026565b839150346101e757826003193601126101e75761109861126e565b602435916110a461140f565b6110ae8383612747565b6110f1575092516001600160a01b0390931683526020830152907f98b2f82a3a07f223a0be64b3d0f47711c64dccd1feafb94aa28156b38cd9695c90604090a180f35b606490602086519162461bcd60e51b8352820152601b60248201527f696e73756666696369656e7420636f6d7020666f72206772616e7400000000006044820152fd5b9050346102d55760203660031901126102d55781602093600192358152606585522001549051908152f35b919050346102d5573660031901126101e75761117961126e565b60243567ffffffffffffffff811161024a576102479261119b91369101611343565b906124a3565b5050346101e757816003193601126101e75760c95490516001600160a01b039091168152602090f35b833461086e57602036600319011261086e576102476111e761126e565b6111fc60018060a01b0360ca54163314611ad0565b611da2565b8491346102d55760203660031901126102d5573563ffffffff60e01b81168091036102d55760209250635a05180f60e01b8114908115611243575b5015158152f35b637965db0b60e01b81149150811561125d575b508361123c565b6301ffc9a760e01b14905083611256565b600435906001600160a01b038216820361128457565b600080fd5b602435906001600160a01b038216820361128457565b6020810190811067ffffffffffffffff8211176112bb57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176112bb57604052565b6080810190811067ffffffffffffffff8211176112bb57604052565b90601f8019910116810190811067ffffffffffffffff8211176112bb57604052565b67ffffffffffffffff81116112bb5760051b60200190565b81601f820112156112845780359161135a8361132b565b926113686040519485611309565b808452602092838086019260051b820101928311611284578301905b828210611392575050505090565b81356001600160a01b0381168103611284578152908301908301611384565b81601f82011215611284578035916113c88361132b565b926113d66040519485611309565b808452602092838086019260051b820101928311611284578301905b828210611400575050505090565b813581529083019083016113f2565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260408083205490929060ff161561145157505050565b61145a3361180c565b83519082611467836112ed565b604283528483019360603686378351156115ef57603085538351906001918210156115ef5790607860218601536041915b8183116115815750505061153f576114ed9385936115259361151660489461153b9951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b97880152825192839160378901910161170d565b8401917001034b99036b4b9b9b4b733903937b6329607d1b60378401525180938684019061170d565b01036028810185520183611309565b5162461bcd60e51b815291829160048301611730565b0390fd5b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156115db576f181899199a1a9b1b9c1cb0b131b232b360811b901a6115b185886117e5565b5360041c9280156115c757600019019190611498565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b600081815260209060658252604092838220338352835260ff84832054161561162c5750505050565b6116353361180c565b845191611641836112ed565b604283528483019360603686378351156115ef57603085538351906001918210156115ef5790607860218601536041915b8183116116c75750505061153f576114ed9385936115259361151660489461153b9951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b97880152825192839160378901910161170d565b909192600f811660108110156115db576f181899199a1a9b1b9c1cb0b131b232b360811b901a6116f785886117e5565b5360041c9280156115c757600019019190611672565b60005b8381106117205750506000910152565b8181015183820152602001611710565b60409160208252611750815180928160208601526020868601910161170d565b601f01601f1916010190565b90604061179a9260009080825260656020528282209360018060a01b03169384835260205260ff838320541661179d575b81526097602052206119e0565b50565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a461178d565b9081518110156117f6570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff8211176112bb57604052602a82526020820160403682378251156117f6576030905381516001908110156117f657607860218401536029905b8082116118ad5750506118695790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611906576f181899199a1a9b1b9c1cb0b131b232b360811b901a6118dc84866117e5565b5360041c9180156118f1576000190190611859565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b80548210156117f65760005260206000200190600090565b919060018301600090828252806020526040822054156000146119b757845494680100000000000000008610156119a3578361199361197c886001604098999a0185558461191b565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b919082039182116119ca57565b634e487b7160e01b600052601160045260246000fd5b90600182019060009281845282602052604084205490811515600014611ac95760001991808301818111611ab557825490848201918211611aa157808203611a6c575b50505080548015611a5857820191611a3b838361191b565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b611a8c611a7c61197c938661191b565b90549060031b1c9283928661191b565b90558652846020526040862055388080611a23565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b15611ad757565b60405162461bcd60e51b815260206004820152600a602482015269666f7262696464656e2160b01b6044820152606490fd5b919082604091031261128457815180151581036112845760209092015160ff811681036112845790565b60ca5460408051638e8f294b60e01b81526001600160a01b038085166004830181905294979694959493839183916024918391165afa908115611c7d57600091611d12575b5015611ccf57836000528360209360d085528481846000205403611c88575b505060005260d1835281816000205403611bb4575b505050509050565b805163aa5af0fd60e01b81528381600481885afa908115611c7d57600091611c30575b50611c13907f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e537959697835191611c0c8361129f565b8252611f57565b8460005260d1835281816000205551908152a28038808080611bac565b908482813d8311611c76575b611c468183611309565b8101031261086e5750517f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e537611bd7565b503d611c3c565b82513d6000823e3d90fd5b7fdeafccd0c0b768b2529f7dcbbe58e155d6023059150b7490ed4535cc3744b92d91611cb38a611da2565b8360005260d082528085600020558451908152a2833884611b97565b5162461bcd60e51b815260206004820152601960248201527f636f6d70206d61726b6574206973206e6f74206c6973746564000000000000006044820152606490fd5b611d299150823d8411610b4b57610b3c8183611309565b5038611b78565b60405190611d3d826112d1565b601c82527f626c6f636b206e756d62657220657863656564732033322062697473000000006020830152565b60405190611d76826112d1565b601a82527f6e657720696e64657820657863656564732032323420626974730000000000006020830152565b6001600160a01b0316600081815260d26020908152604080832060d0835281842054949594939092611de2611dd5611d30565b640100000000431061296b565b63ffffffff431694611e0c855460e01c611e06611dfd612a02565b8983111561296b565b876119bd565b978815158080611f4e575b15611f1d5750826004918651928380926318160ddd60e01b82525afa928315611f13578493611ee1575b5050611eca9697611e5a91611e54612a53565b91612b18565b8115611ecc57611e6a9250612b92565b611e8e8354925191611e7b8361129f565b6001600160e01b0384811684529261298f565b51611ea6611e9a611d69565b600160e01b831061296b565b6001600160e01b0391161660e09390931b6001600160e01b03191692909217905550565b565b5050815190611eda8261129f565b8152611e6a565b9080929350813d8311611f0c575b611ef98183611309565b810103126102d557519087611e5a611e41565b503d611eef565b85513d86823e3d90fd5b959798505050505050611f2e575050565b81546001600160e01b031660e09190911b6001600160e01b031916179055565b50821515611e17565b6001600160a01b0316600081815260d36020908152604080832060d1835281842054949695929490939192611f8d611dd5611d30565b63ffffffff431695611fb7865460e01c611fb1611fa8612a02565b8a83111561296b565b886119bd565b98891515808061206b575b156120595750816004918751928380926308f7a6e360e31b82525afa91821561204f57859261201d575b505097612014611e5a9261200c611eca9a9b612006612a53565b90612a8c565b905190612b56565b92611e54612a53565b90809250813d8311612048575b6120348183611309565b8101031261024a5751612014611e5a611fec565b503d61202a565b86513d87823e3d90fd5b96989950505050505050611f2e575050565b50841515611fc2565b6001600160a01b03908116600081815260d2602090815260408083205460ce83528184209690951680845295825280832080546001600160e01b039096169081905591969594909291908015806121d3575b6121be575b6120e9906120e36120da612a02565b8483111561296b565b826119bd565b968351976120f68961129f565b885283516370a0823160e01b8152600481018790528181602481895afa908115611f1357849161218f575b506121636a0c097ce7bc90715b34b9f160241b917f2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a9798999a51611e54612a53565b049287815260cb82528461217a85828420546129be565b9189815260cb845220558351928352820152a3565b90508181813d83116121b7575b6121a68183611309565b8101031261024a5751612163612121565b503d61219c565b506a0c097ce7bc90715b34b9f160241b6120cb565b506a0c097ce7bc90715b34b9f160241b8210156120c6565b6001600160a01b03908116600081815260d3602090815260408083205460cf83528184209690951680845295825280832080546001600160e01b039096169081905596979693949093919080158061234d575b612338575b6122619061225b612252612a02565b8583111561296b565b836119bd565b9784519861226e8a61129f565b895284516395dd919360e01b81526004810188905282816024818a5afa90811561204f5785916122eb575b507f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6969798996122e16a0c097ce7bc90715b34b9f160241b9361200c61216394612006612a53565b9051611e54612a53565b90508281813d8311612331575b6123028183611309565b8101031261056f57517f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6612299565b503d6122f8565b506a0c097ce7bc90715b34b9f160241b612243565b506a0c097ce7bc90715b34b9f160241b83101561223e565b60018060a01b031660009080825260cc602052604082205460cd6020526123a4604084205461239e612395612a02565b4383111561296b565b436119bd565b90811515806123fc575b6123b9575b50505050565b6123db916123c991611e54612a53565b82845260cb60205260408420546129be565b90825260cb602052604082205560cd602052604043912055388080806123b3565b508015156123ae565b60209081818403126112845780519067ffffffffffffffff821161128457019180601f8401121561128457825161243b8161132b565b936124496040519586611309565b818552838086019260051b820101928311611284578301905b828210612470575050505090565b81516001600160a01b0381168103611284578152908301908301612462565b80518210156117f65760209160051b010190565b60408051916124b1836112d1565b60019384845260209081850190823683378551156117f6576001600160a01b039384169091526000865b61255a575b5050846000905b6124f4575b505050505050565b845181101561255557808361250c61254f938861248f565b511684612519838961248f565b511660005261253260cb91828652876000205490612747565b908561253e848a61248f565b511660005284528560002055612738565b856124e7565b6124ec565b8151811015612733578361256e828461248f565b51168460ca54168651638e8f294b60e01b8152808881600494868683015260249485915afa9081156127285760009161270a575b50156126d05750848751809263aa5af0fd60e01b825281855afa9081156126c557600091612698575b50865189949392916125dc8261129f565b81526125e88183611f57565b886000865b612655575b5050506125fe81611da2565b6000845b612619575b505061261290612738565b90916124db565b8894919293945181101561264b578061050288612639612641948d61248f565b511685612074565b8194939291612602565b8194939250612607565b88829793949596975182101561268c5784610502916126778461267f9661248f565b5116876121eb565b89908296959493926125ed565b508296959493506125f2565b908582813d83116126be575b6126ae8183611309565b8101031261086e575051386125cb565b503d6126a4565b87513d6000823e3d90fd5b875162461bcd60e51b8152918201869052601590820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b6127219150893d8b11610b4b57610b3c8183611309565b50386125a2565b89513d6000823e3d90fd5b6124e0565b60001981146119ca5760010190565b9060018060a01b038060ca5416906040805191632aff3bff60e21b8352828187169485600483015281602460009687935afa9081156102c8578491612951575b50835b8151811015612822578261279e828461248f565b511680865260209060d18252858720541591829182612809575b826127ed575b505081156127e5575b506127da576127d590612738565b61278a565b505050505050905090565b9050386127c7565b885260cf815286882089895290525084862054151538806127be565b60ce82528789208a8a52825287892054151593506127b8565b5050909194925060c954168151926370a0823160e01b84523060048501526020938481602481865afa908115612947578791612916575b50851515908161290b575b506128725750505050905090565b825163a9059cbb60e01b8582019081526001600160a01b03929092166024820152604480820196909652948552601f199486928392909183906128b6606482611309565b51925af1503d15612905573d9067ffffffffffffffff82116128f157906128e8838694935195601f8401160185611309565b83523d92013e90565b634e487b7160e01b85526041600452602485fd5b50505090565b905085111538612864565b90508481813d8311612940575b61292d8183611309565b8101031261293c575138612859565b8680fd5b503d612923565b84513d89823e3d90fd5b61296591503d8086833e6102b98183611309565b38612787565b156129735750565b60405162461bcd60e51b815290819061153b9060048301611730565b906129ac9160006040516129a28161129f565b52519051906129be565b604051906129b98261129f565b815290565b604051916129cb836112d1565b60118352706164646974696f6e206f766572666c6f7760781b60208401528101918282116119ca576129ff9183101561296b565b90565b60405190612a0f826112d1565b60158252747375627472616374696f6e20756e646572666c6f7760581b6020830152565b8115612a3d570490565b634e487b7160e01b600052601260045260246000fd5b60405190612a60826112d1565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b801591828015612ace575b612ac657670de0b6b3a764000080830293838504821417156119ca57612ac06129ff9385612a33565b1461296b565b505050600090565b506000612a97565b801591828015612b10575b612ac6576a0c097ce7bc90715b34b9f160241b80830293838504821417156119ca57612ac06129ff9385612a33565b506000612ae1565b9091811592838015612b4e575b612b455780830293838504821417156119ca57612ac06129ff9385612a33565b50505050600090565b508015612b25565b906129ff91612b8d604051612b6a816112d1565b600e81526d646976696465206279207a65726f60901b602082015283151561296b565b612a33565b90612bb76129ac926000604051612ba88161129f565b52612bb1612a53565b90612ad6565b612b5656fea2646970667358221220f89f56e02154713238e97f136c704dd8805577448e89c36d6d9666807db57e8464736f6c63430008130033";

export class CompLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompLogic> {
    return super.deploy(overrides || {}) as Promise<CompLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompLogic {
    return super.attach(address) as CompLogic;
  }
  connect(signer: Signer): CompLogic__factory {
    return super.connect(signer) as CompLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompLogicInterface {
    return new utils.Interface(_abi) as CompLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompLogic {
    return new Contract(address, _abi, signerOrProvider) as CompLogic;
  }
}
