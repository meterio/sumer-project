/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompLogic, CompLogicInterface } from "../CompLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompBorrowSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CompGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompSupplySpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "ContributorCompSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compBorrowIndex",
        type: "uint256",
      },
    ],
    name: "DistributedBorrowerComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "supplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compSupplyIndex",
        type: "uint256",
      },
    ],
    name: "DistributedSupplierComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "SetComptroller",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_grantComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "supplySpeeds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "borrowSpeeds",
        type: "uint256[]",
      },
    ],
    name: "_setCompSpeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "compSpeed",
        type: "uint256",
      },
    ],
    name: "_setContributorCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "calculateComp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "borrowers",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "suppliers",
        type: "bool",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "comp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compContributorSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compInitialIndex",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplySpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplyState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "distributeBorrowerComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "distributeSupplierComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comp",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "initializeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastContributorBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supplySpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowSpeed",
        type: "uint256",
      },
    ],
    name: "setCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "_comptroller",
        type: "address",
      },
    ],
    name: "setComptroller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "updateCompBorrowIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "updateCompSupplyIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "updateContributorRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657613290908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146118ab57508063082bc0ab14611875578063109d0af81461184c5780631c3db2e014611809578063248a9ca3146117da57806327efe3cb146117245780632f2ff15d1461165d57806336568abe146115cb578063485cc955146113e55780634f54b3c0146113a6578063598ee1cb146112f55780635a2e013314610c915780635f87769b14610c535780635fe3b56714610c2a57806365658c3e14610bd65780636810dfa6146109175780636aa875b5146108dd5780636b79c38d1461088b578063741b25251461086a578063759c082a1461075e5780638bad38dd146106f15780638c57804e1461069f5780639010d07c1461065857806391d148541461060b578063986ab838146105d1578063a217fddf146105b5578063a7f0e2311461058c578063a8b439481461045f578063b21be7fd1461040e578063bea6b8b8146103d4578063ca0af04314610383578063ca15c87314610357578063cc7ebdc41461031d578063d547741f146102de578063e9af029214610255578063f47dbe02146101f55763f4a433c0146101b657600080fd5b346101f05760203660031901126101f0576001600160a01b036101d7611918565b1660005260d16020526020604060002054604051908152f35b600080fd5b346101f05760603660031901126101f05761020e611918565b61021661192e565b9060203660431901126101f057610253916040519161023483611944565b604435835261024e60018060a01b0360ca54163314612175565b61287f565b005b346101f05760203660031901126101f0576004610270611918565b60ca5460405163b0772d0b60e01b81529260009184919082906001600160a01b03165afa9081156102d257610253926000926102ad575b50612b31565b6102cb9192503d806000833e6102c381836119ae565b810190612a93565b90836102a7565b6040513d6000823e3d90fd5b346101f05760403660031901126101f0576102536004356102fd61192e565b90806000526065602052610318600160406000200154611ca8565b611e01565b346101f05760203660031901126101f0576001600160a01b0361033e611918565b1660005260cb6020526020604060002054604051908152f35b346101f05760203660031901126101f05760043560005260976020526020604060002054604051908152f35b346101f05760403660031901126101f05761039c611918565b6103a461192e565b9060018060a01b0380911660005260cf602052604060002091166000526020526020604060002054604051908152f35b346101f05760203660031901126101f0576001600160a01b036103f5611918565b1660005260cd6020526020604060002054604051908152f35b346101f05760403660031901126101f057610427611918565b61042f61192e565b9060018060a01b0380911660005260ce602052604060002091166000526020526020604060002054604051908152f35b346101f05760603660031901126101f05767ffffffffffffffff6004358181116101f0576104919036906004016119e8565b906024358181116101f0576104aa903690600401611a56565b906044359081116101f0576104c3903690600401611a56565b916104cc611ab4565b8051918051831480610582575b1561052b5760005b8381106104ea57005b610526906105216001600160a01b036105038387612b1d565b511661050f8386612b1d565b5161051a848a612b1d565b51916121ef565b612dcc565b6104e1565b60405162461bcd60e51b815260206004820152602960248201527f436f6d7074726f6c6c65723a3a5f736574436f6d7053706565647320696e76616044820152681b1a59081a5b9c1d5d60ba1b6064820152608490fd5b50835183146104d9565b346101f05760003660031901126101f05760206040516a0c097ce7bc90715b34b9f160241b8152f35b346101f05760003660031901126101f057602060405160008152f35b346101f05760203660031901126101f0576001600160a01b036105f2611918565b1660005260cc6020526020604060002054604051908152f35b346101f05760403660031901126101f05761062461192e565b600435600052606560205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101f05760403660031901126101f057600435600052609760205260206106866024356040600020611fc0565b905460405160039290921b1c6001600160a01b03168152f35b346101f05760203660031901126101f0576001600160a01b036106c0611918565b16600090815260d360209081526040918290205482516001600160e01b038216815260e09190911c91810191909152f35b346101f05760203660031901126101f0576004356001600160a01b038116908190036101f05760207f51e0228fe901c430722ddefd46e1d63fd4127597ef3ae7c79ae73d2de14fbf3891610743611ab4565b60ca80546001600160a01b03191682179055604051908152a1005b346101f05760403660031901126101f057610777611918565b60243563ffffffff811681036101f05760ca54610253926001600160a01b03916107a49083163314612175565b1660005260d2602052604060002060d3602052610803826040600020835460018060e01b039081811615610848575b50815490811615610826575b5080546001600160e01b031660e09290921b6001600160e01b031916919091179055565b80546001600160e01b031660e09290921b6001600160e01b031916919091179055565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b178155866107df565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b178555876107d3565b346101f05760203660031901126101f057610253610886611918565b6129f3565b346101f05760203660031901126101f0576001600160a01b036108ac611918565b16600090815260d260209081526040918290205482516001600160e01b038216815260e09190911c91810191909152f35b346101f05760203660031901126101f0576001600160a01b036108fe611918565b1660005260d06020526020604060002054604051908152f35b346101f05760803660031901126101f05767ffffffffffffffff6004358181116101f0576109499036906004016119e8565b906024359081116101f0576109629036906004016119e8565b6044351515604435036101f0576064351515606435036101f05760005b8151811015610b67576001600160a01b0361099a8284612b1d565b511660018060a01b0360ca54166040518091638e8f294b60e01b825283600483015281602460609485935afa9182156102d257600092610b38575b505015610afb57604435610a46575b6064356109fb575b506109f690612dcc565b61097f565b929091610a0784612464565b60005b8251811015610a3957610a34906105216001600160a01b03610a2c8387612b1d565b511687612708565b610a0a565b50909250906109f66109ec565b926040929192519163aa5af0fd60e01b8352602083600481885afa9283156102d257600093610ac7575b5060405192610a7e84611944565b8352610a8a83866125fe565b60005b8251811015610abd57610ab890610521856001600160a01b03610ab08488612b1d565b51168961287f565b610a8d565b50929150926109e4565b9092506020813d602011610af3575b81610ae3602093836119ae565b810103126101f057519185610a70565b3d9150610ad6565b60405162461bcd60e51b81526020600482015260156024820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b610b579250803d10610b60575b610b4f81836119ae565b8101906121bb565b505085806109d5565b503d610b45565b8260005b815181101561025357610bd1906001600160a01b0380610b8b8386612b1d565b511681610b988487612b1d565b511660005260cb90610bb560209183835260406000205490612ddb565b92610bc08588612b1d565b511660005252604060002055612dcc565b610b6b565b346101f05760403660031901126101f057610bef611918565b60203660231901126101f05760405161025391610c0b82611944565b6024358252610c2560018060a01b0360ca54163314612175565b6125fe565b346101f05760003660031901126101f05760ca546040516001600160a01b039091168152602090f35b346101f05760603660031901126101f057610253610c6f611918565b610c8460018060a01b0360ca54163314612175565b60443590602435906121ef565b346101f05760203660031901126101f057610caa611918565b60ca5460405163b0772d0b60e01b815290600090829060049082906001600160a01b03165afa9081156102d2576000916112da575b506001600160a01b038216600090815260cb60205260408120545b82518210156112cf576001600160a01b03610d158385612b1d565b5160405163aa5af0fd60e01b8152911691602082600481865afa9182156102d25760009261129b575b5060405191610d4c83611944565b82528260005260d3602052604060002060405190610d6982611976565b5460018060e01b038116825260e01c60208201528360005260d160205260406000205490610da5610d986123f2565b640100000000431061300c565b610dd963ffffffff602083015116610dcd610dbe6130a0565b63ffffffff431683111561300c565b63ffffffff4316612062565b918215158080611292575b1561127557506040516308f7a6e360e31b81526020816004818a5afa9081156102d257600091611241575b50610ef993610e34610e2c610e4393610e266130f1565b9061312a565b8851906131f4565b92610e3d6130f1565b916131b6565b811561123057610e7591610e5691613230565b8251604051906001600160e01b0316610e6e82611944565b8152613030565b51610e8d610e8161242b565b600160e01b831061300c565b6001600160e01b031681524363ffffffff1660208201525b51600085815260cf602090815260408083206001600160a01b038c168452909152902054906001600160e01b0316811580611166575b611150575b610ef4610eeb6130a0565b8284111561300c565b612062565b9160405192610f0784611944565b83526040516395dd919360e01b81526001600160a01b0388166004820152602081602481885afa9081156102d2576000916111fa575b50610f7d93610f6c6a0c097ce7bc90715b34b9f160241b93610f64610f7694610e266130f1565b9051906131f4565b9051610e3d6130f1565b049061305f565b908060005260d260205260406000209060405191610f9a83611976565b5460018060e01b038116835260e01c60208301528060005260d0602052604060002054610fd663ffffffff602085015116610dcd610dbe6130a0565b80151580806111f1575b156111cf57506040516318160ddd60e01b815291602083600481875afa9283156102d257600093611198575b509360209261102361109993602497610e3d6130f1565b811561117e5761103691610e5691613230565b51611042610e8161242b565b6001600160e01b031681524363ffffffff16838201525b51600084815260ce845260408082206001600160a01b038c1683528552902054906001600160e01b03168115806111665761115057610ef4610eeb6130a0565b91604051926110a784611944565b83526040516370a0823160e01b81526001600160a01b038916600482015293849182905afa9182156102d25760009261110c575b50916a0c097ce7bc90715b34b9f160241b610f76611100936111069551610e3d6130f1565b91612dcc565b90610cfa565b9150916020823d602011611148575b81611128602093836119ae565b810103126101f057905190916a0c097ce7bc90715b34b9f160241b6110db565b3d915061111b565b6a0c097ce7bc90715b34b9f160241b9150610ee0565b506a0c097ce7bc90715b34b9f160241b811015610edb565b505061103660405161118f81611944565b60008152610e56565b9250936020833d6020116111c7575b816111b4602093836119ae565b810103126101f05791519193602461100c565b3d91506111a7565b60209250611099915093602494156110595763ffffffff431683820152611059565b50821515610fe0565b9190506020823d602011611228575b81611216602093836119ae565b810103126101f0579051610f7d610f3d565b3d9150611209565b5050610e7560405161118f81611944565b90506020813d60201161126d575b8161125c602093836119ae565b810103126101f05751610ef9610e0f565b3d915061124f565b9050610ef9925015610ea55763ffffffff43166020820152610ea5565b50811515610de4565b9091506020813d6020116112c7575b816112b7602093836119ae565b810103126101f057519086610d3e565b3d91506112aa565b602090604051908152f35b6112ef91503d806000833e6102c381836119ae565b82610cdf565b346101f05760403660031901126101f05761130e611918565b7f386537fa92edc3319af95f1f904dcf1900021e4f3f4e08169a577a09076e66b360206024359261133d611ab4565b611346816129f3565b83611387576001600160a01b038116600090815260cd835260408120555b6001600160a01b0316600081815260cc83526040908190208590555193845292a2005b6001600160a01b038116600090815260cd835260409020439055611364565b346101f05760403660031901126101f0576102536113c2611918565b6113ca61192e565b906113e060018060a01b0360ca54163314612175565b612708565b346101f05760403660031901126101f0576113fe611918565b61140661192e565b9060005460ff8160081c1615918280936115be575b80156115a7575b1561154b5760ff198083166001176000556114ac9284611539575b5060c980546001600160a01b0319166001600160a01b03968716179055931660008181527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260409091205490949060ff16156114ea575b5060008052609784526040600020611fd8565b506114b357005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196000541660005560405160018152a1005b600080526065855260406000208260005285526001604060002091825416179055338160007f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a484611499565b61ffff1916610101176000558561143d565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156114225750600160ff831614611422565b50600160ff83161061141b565b346101f05760403660031901126101f0576115e461192e565b336001600160a01b038216036116005761025390600435611e01565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b346101f05760403660031901126101f057610253600435609761167e61192e565b91806000526020906065825261169b600160406000200154611ca8565b60008181526065835260408082206001600160a01b0390961680835295845290205460ff16156116d4575b600052526040600020611fd8565b806000526065825260406000208460005282526040600020600160ff198254161790553384827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a46116c6565b346101f05760403660031901126101f05761173d611918565b602435611748611ab4565b6117528183612ddb565b61179557604080516001600160a01b0393909316835260208301919091527f98b2f82a3a07f223a0be64b3d0f47711c64dccd1feafb94aa28156b38cd9695c91a1005b60405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e7420636f6d7020666f72206772616e7400000000006044820152606490fd5b346101f05760203660031901126101f05760043560005260656020526020600160406000200154604051908152f35b346101f05760403660031901126101f057611822611918565b6024359067ffffffffffffffff82116101f0576118466102539236906004016119e8565b90612b31565b346101f05760003660031901126101f05760c9546040516001600160a01b039091168152602090f35b346101f05760203660031901126101f057610253611891611918565b6118a660018060a01b0360ca54163314612175565b612464565b346101f05760203660031901126101f0576004359063ffffffff60e01b82168092036101f057602091635a05180f60e01b81149081156118ed575b5015158152f35b637965db0b60e01b811491508115611907575b50836118e6565b6301ffc9a760e01b14905083611900565b600435906001600160a01b03821682036101f057565b602435906001600160a01b03821682036101f057565b6020810190811067ffffffffffffffff82111761196057604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761196057604052565b6080810190811067ffffffffffffffff82111761196057604052565b90601f8019910116810190811067ffffffffffffffff82111761196057604052565b67ffffffffffffffff81116119605760051b60200190565b81601f820112156101f0578035916119ff836119d0565b92611a0d60405194856119ae565b808452602092838086019260051b8201019283116101f0578301905b828210611a37575050505090565b81356001600160a01b03811681036101f0578152908301908301611a29565b81601f820112156101f057803591611a6d836119d0565b92611a7b60405194856119ae565b808452602092838086019260051b8201019283116101f0578301905b828210611aa5575050505090565b81358152908301908301611a97565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260408083205490929060ff1615611af657505050565b611aff33611eb1565b83519082611b0c83611992565b60428352848301936060368637835115611c945760308553835190600191821015611c945790607860218601536041915b818311611c2657505050611be457611b92938593611bca93611bbb604894611be09951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611db2565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190611db2565b010360288101855201836119ae565b5162461bcd60e51b815291829160048301611dd5565b0390fd5b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611c80576f181899199a1a9b1b9c1cb0b131b232b360811b901a611c568588611e8a565b5360041c928015611c6c57600019019190611b3d565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b600081815260209060658252604092838220338352835260ff848320541615611cd15750505050565b611cda33611eb1565b845191611ce683611992565b60428352848301936060368637835115611c945760308553835190600191821015611c945790607860218601536041915b818311611d6c57505050611be457611b92938593611bca93611bbb604894611be09951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611db2565b909192600f81166010811015611c80576f181899199a1a9b1b9c1cb0b131b232b360811b901a611d9c8588611e8a565b5360041c928015611c6c57600019019190611d17565b60005b838110611dc55750506000910152565b8181015183820152602001611db5565b60409160208252611df58151809281602086015260208686019101611db2565b601f01601f1916010190565b906040611e3f9260009080825260656020528282209360018060a01b03169384835260205260ff8383205416611e42575b8152609760205220612085565b50565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4611e32565b908151811015611e9b570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff82111761196057604052602a8252602082016040368237825115611e9b57603090538151600190811015611e9b57607860218401536029905b808211611f52575050611f0e5790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611fab576f181899199a1a9b1b9c1cb0b131b232b360811b901a611f818486611e8a565b5360041c918015611f96576000190190611efe565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b8054821015611e9b5760005260206000200190600090565b9190600183016000908282528060205260408220541560001461205c57845494680100000000000000008610156120485783612038612021886001604098999a01855584611fc0565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9190820391821161206f57565b634e487b7160e01b600052601160045260246000fd5b9060018201906000928184528260205260408420549081151560001461216e576000199180830181811161215a5782549084820191821161214657808203612111575b505050805480156120fd578201916120e08383611fc0565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6121316121216120219386611fc0565b90549060031b1c92839286611fc0565b905586528460205260408620553880806120c8565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b1561217c57565b60405162461bcd60e51b815260206004820152600a602482015269666f7262696464656e2160b01b6044820152606490fd5b519081151582036101f057565b908160609103126101f0576121cf816121ae565b91602082015160ff811681036101f05760406121ec9193016121ae565b90565b60ca5460408051638e8f294b60e01b81526001600160a01b03808516600483018190529497969495949360609183916024918391165afa90811561233d576000916123d2575b501561238f57836000528360209360d085528481846000205403612348575b505060005260d1835281816000205403612271575b505050509050565b805163aa5af0fd60e01b81528381600481885afa90811561233d576000916122ed575b506122d0907f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e5379596978351916122c983611944565b82526125fe565b8460005260d1835281816000205551908152a28038808080612269565b908482813d8311612336575b61230381836119ae565b810103126123335750517f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e537612294565b80fd5b503d6122f9565b82513d6000823e3d90fd5b7fdeafccd0c0b768b2529f7dcbbe58e155d6023059150b7490ed4535cc3744b92d916123738a612464565b8360005260d082528085600020558451908152a2833884612254565b5162461bcd60e51b815260206004820152601960248201527f636f6d70206d61726b6574206973206e6f74206c6973746564000000000000006044820152606490fd5b6123ea915060603d8111610b6057610b4f81836119ae565b505038612235565b604051906123ff82611976565b601c82527f626c6f636b206e756d62657220657863656564732033322062697473000000006020830152565b6040519061243882611976565b601a82527f6e657720696e64657820657863656564732032323420626974730000000000006020830152565b6001600160a01b0316600081815260d26020908152604080832060d0835281842054949594939092612497610d986123f2565b63ffffffff4316946124c1855460e01c6124bb6124b26130a0565b8983111561300c565b87612062565b9788151580806125f5575b156125c45750826004918651928380926318160ddd60e01b82525afa9283156125ba578493612584575b505061256d969761250991610e3d6130f1565b811561256f576125199250613230565b61253d835492519161252a83611944565b6001600160e01b03848116845292613030565b51612549610e8161242b565b6001600160e01b0391161660e09390931b6001600160e01b03191692909217905550565b565b505081519061257d82611944565b8152612519565b9080929350813d83116125b3575b61259c81836119ae565b810103126125af575190876125096124f6565b8280fd5b503d612592565b85513d86823e3d90fd5b9597985050505050506125d5575050565b81546001600160e01b031660e09190911b6001600160e01b031916179055565b508215156124cc565b6001600160a01b0316600081815260d36020908152604080832060d1835281842054949695929490939192612634610d986123f2565b63ffffffff43169561265e865460e01c61265861264f6130a0565b8a83111561300c565b88612062565b9889151580806126ff575b156126ed5750816004918751928380926308f7a6e360e31b82525afa9182156126e35785926126ad575b505097610e3461250992610f6461256d9a9b610e266130f1565b90809250813d83116126dc575b6126c481836119ae565b810103126126d85751610e34612509612693565b8380fd5b503d6126ba565b86513d87823e3d90fd5b969899505050505050506125d5575050565b50841515612669565b6001600160a01b03908116600081815260d2602090815260408083205460ce83528184209690951680845295825280832080546001600160e01b03909616908190559196959490929190801580612867575b612852575b61277d9061277761276e6130a0565b8483111561300c565b82612062565b9683519761278a89611944565b885283516370a0823160e01b8152600481018790528181602481895afa9081156125ba578491612823575b506127f76a0c097ce7bc90715b34b9f160241b917f2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a9798999a51610e3d6130f1565b049287815260cb82528461280e858284205461305f565b9189815260cb845220558351928352820152a3565b90508181813d831161284b575b61283a81836119ae565b810103126126d857516127f76127b5565b503d612830565b506a0c097ce7bc90715b34b9f160241b61275f565b506a0c097ce7bc90715b34b9f160241b82101561275a565b6001600160a01b03908116600081815260d3602090815260408083205460cf83528184209690951680845295825280832080546001600160e01b03909616908190559697969394909391908015806129db575b6129c6575b6128f5906128ef6128e66130a0565b8583111561300c565b83612062565b978451986129028a611944565b895284516395dd919360e01b81526004810188905282816024818a5afa9081156126e3578591612975575b507f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a696979899610f6c6a0c097ce7bc90715b34b9f160241b93610f646127f794610e266130f1565b90508281813d83116129bf575b61298c81836119ae565b810103126129bb57517f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a661292d565b8480fd5b503d612982565b506a0c097ce7bc90715b34b9f160241b6128d7565b506a0c097ce7bc90715b34b9f160241b8310156128d2565b60018060a01b031660009080825260cc602052604082205460cd602052612a326040842054612a2c612a236130a0565b4383111561300c565b43612062565b9081151580612a8a575b612a47575b50505050565b612a6991612a5791610e3d6130f1565b82845260cb602052604084205461305f565b90825260cb602052604082205560cd60205260404391205538808080612a41565b50801515612a3c565b60209081818403126101f05780519067ffffffffffffffff82116101f057019180601f840112156101f0578251612ac9816119d0565b93612ad760405195866119ae565b818552838086019260051b8201019283116101f0578301905b828210612afe575050505090565b81516001600160a01b03811681036101f0578152908301908301612af0565b8051821015611e9b5760209160051b010190565b6040805191612b3f83611976565b6001938484526020908185019082368337855115611e9b576001600160a01b039384169091526000865b612be8575b5050846000905b612b82575b505050505050565b8451811015612be3578083612b9a612bdd9388612b1d565b511684612ba78389612b1d565b5116600052612bc060cb91828652876000205490612ddb565b9085612bcc848a612b1d565b511660005284528560002055612dcc565b85612b75565b612b7a565b8151811015612dc75783612bfc8284612b1d565b51168460ca54168651638e8f294b60e01b815280806004938585830152606092839160249586915afa918215612dbc57600092612d9d575b505015612d635750848751809263aa5af0fd60e01b825281855afa908115612d5857600091612d2b575b5086518994939291612c6f82611944565b8152612c7b81836125fe565b886000865b612ce8575b505050612c9181612464565b6000845b612cac575b5050612ca590612dcc565b9091612b69565b88949192939451811015612cde578061052188612ccc612cd4948d612b1d565b511685612708565b8194939291612c95565b8194939250612c9a565b888297939495969751821015612d1f578461052191612d0a84612d1296612b1d565b51168761287f565b8990829695949392612c80565b50829695949350612c85565b908582813d8311612d51575b612d4181836119ae565b8101031261233357505138612c5e565b503d612d37565b87513d6000823e3d90fd5b875162461bcd60e51b8152918201869052601590820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b612db39250803d10610b6057610b4f81836119ae565b50503880612c34565b8a513d6000823e3d90fd5b612b6e565b600019811461206f5760010190565b9060018060a01b038060ca5416906040805191632aff3bff60e21b8352828187169485600483015281602460009687935afa908115612fff578491612fe5575b50835b8151811015612eb65782612e328284612b1d565b511680865260209060d18252858720541591829182612e9d575b82612e81575b50508115612e79575b50612e6e57612e6990612dcc565b612e1e565b505050505050905090565b905038612e5b565b885260cf81528688208989529052508486205415153880612e52565b60ce82528789208a8a5282528789205415159350612e4c565b5050909194925060c954168151926370a0823160e01b84523060048501526020938481602481865afa908115612fdb578791612faa575b508515159081612f9f575b50612f065750505050905090565b825163a9059cbb60e01b8582019081526001600160a01b03929092166024820152604480820196909652948552601f19948692839290918390612f4a6064826119ae565b51925af1503d15612f99573d9067ffffffffffffffff8211612f855790612f7c838694935195601f84011601856119ae565b83523d92013e90565b634e487b7160e01b85526041600452602485fd5b50505090565b905085111538612ef8565b90508481813d8311612fd4575b612fc181836119ae565b81010312612fd0575138612eed565b8680fd5b503d612fb7565b84513d89823e3d90fd5b612ff991503d8086833e6102c381836119ae565b38612e1b565b50505051903d90823e3d90fd5b156130145750565b60405162461bcd60e51b8152908190611be09060048301611dd5565b9061304d91600060405161304381611944565b525190519061305f565b6040519061305a82611944565b815290565b6040519161306c83611976565b60118352706164646974696f6e206f766572666c6f7760781b602084015281019182821161206f576121ec9183101561300c565b604051906130ad82611976565b60158252747375627472616374696f6e20756e646572666c6f7760581b6020830152565b81156130db570490565b634e487b7160e01b600052601260045260246000fd5b604051906130fe82611976565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b80159182801561316c575b61316457670de0b6b3a7640000808302938385048214171561206f5761315e6121ec93856130d1565b1461300c565b505050600090565b506000613135565b8015918280156131ae575b613164576a0c097ce7bc90715b34b9f160241b808302938385048214171561206f5761315e6121ec93856130d1565b50600061317f565b90918115928380156131ec575b6131e357808302938385048214171561206f5761315e6121ec93856130d1565b50505050600090565b5080156131c3565b906121ec9161322b60405161320881611976565b600e81526d646976696465206279207a65726f60901b602082015283151561300c565b6130d1565b9061325561304d92600060405161324681611944565b5261324f6130f1565b90613174565b6131f456fea2646970667358221220a32d15a2b257b50e21b89046235ec896ba360195cdf939403982645557a5000164736f6c63430008130033";

export class CompLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompLogic> {
    return super.deploy(overrides || {}) as Promise<CompLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompLogic {
    return super.attach(address) as CompLogic;
  }
  connect(signer: Signer): CompLogic__factory {
    return super.connect(signer) as CompLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompLogicInterface {
    return new utils.Interface(_abi) as CompLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompLogic {
    return new Contract(address, _abi, signerOrProvider) as CompLogic;
  }
}
