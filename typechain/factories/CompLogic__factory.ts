/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompLogic, CompLogicInterface } from "../CompLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompBorrowSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CompGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompSupplySpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "ContributorCompSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compBorrowIndex",
        type: "uint256",
      },
    ],
    name: "DistributedBorrowerComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "supplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compSupplyIndex",
        type: "uint256",
      },
    ],
    name: "DistributedSupplierComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "SetComptroller",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_grantComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "supplySpeeds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "borrowSpeeds",
        type: "uint256[]",
      },
    ],
    name: "_setCompSpeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "compSpeed",
        type: "uint256",
      },
    ],
    name: "_setContributorCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "borrowers",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "suppliers",
        type: "bool",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "comp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compContributorSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compInitialIndex",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplySpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplyState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "distributeBorrowerComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "distributeSupplierComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comp",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "initializeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastContributorBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supplySpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowSpeed",
        type: "uint256",
      },
    ],
    name: "setCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "_comptroller",
        type: "address",
      },
    ],
    name: "setComptroller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "updateCompBorrowIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "updateCompSupplyIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "updateContributorRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657612c14908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461120657508163082bc0ab146111cf578163109d0af8146111a65781631c3db2e014611164578163248a9ca31461113957816327efe3cb146110825781632f2ff15d14610fc657816336568abe14610f34578163485cc95514610d725781634f54b3c014610d33578163598ee1cb14610c8b5781635f87769b14610c4c5781635fe3b56714610c2357816365658c3e14610bcf5781636810dfa6146109025781636aa875b5146108ca5781636b79c38d14610871578163741b25251461084c578163759c082a146107425781638bad38dd146106d45781638c57804e146106775781639010d07c1461063657816391d14854146105ef578163986ab838146105b7578163a217fddf1461059c578163a7f0e23114610573578163a8b439481461043f578163b21be7fd146103f6578163bea6b8b8146103be578163ca0af04314610375578163ca15c8731461034d578163cc7ebdc414610315578163d547741f146102d9578163e9af02921461024e57508063f47dbe02146101eb5763f4a433c0146101b157600080fd5b346101e75760203660031901126101e75760209181906001600160a01b036101d7611273565b16815260d1845220549051908152f35b5080fd5b50346101e75760603660031901126101e757610205611273565b61020d61128e565b602036604319011261024a57610247925191610228836112a4565b604435835261024260018060a01b0360ca54163314611ad5565b61220a565b80f35b8380fd5b9050346102d55760203660031901126102d557610269611273565b60ca54835163b0772d0b60e01b815292859184919082906001600160a01b03165afa9182156102c857610247935084926102a4575b506124c2565b6102c19192503d8086833e6102b9818361130e565b810190612424565b903861029e565b50505051903d90823e3d90fd5b8280fd5b919050346102d557806003193601126102d557610247913561031060016102fe61128e565b93838752606560205286200154611608565b611761565b5050346101e75760203660031901126101e75760209181906001600160a01b0361033d611273565b16815260cb845220549051908152f35b9050346102d55760203660031901126102d55760209282913581526097845220549051908152f35b5050346101e757806003193601126101e75780602092610393611273565b61039b61128e565b6001600160a01b03918216835260cf865283832091168252845220549051908152f35b5050346101e75760203660031901126101e75760209181906001600160a01b036103e6611273565b16815260cd845220549051908152f35b5050346101e757806003193601126101e75780602092610414611273565b61041c61128e565b6001600160a01b03918216835260ce865283832091168252845220549051908152f35b9050346102d55760603660031901126102d55767ffffffffffffffff90803582811161056f576104729036908301611348565b60243583811161056b5761048990369084016113b6565b9260443590811161056b576104a190369084016113b6565b916104aa611414565b8151948451861480610561575b1561050c575050845b8481106104cb578580f35b610507906105026001600160a01b036104e483866124ae565b51166104f083886124ae565b516104fb84886124ae565b5191611b4f565b61275d565b6104c0565b906020608492519162461bcd60e51b8352820152602960248201527f436f6d7074726f6c6c65723a3a5f736574436f6d7053706565647320696e76616044820152681b1a59081a5b9c1d5d60ba1b6064820152fd5b50835186146104b7565b8580fd5b8480fd5b5050346101e757816003193601126101e757602090516a0c097ce7bc90715b34b9f160241b8152f35b5050346101e757816003193601126101e75751908152602090f35b5050346101e75760203660031901126101e75760209181906001600160a01b036105df611273565b16815260cc845220549051908152f35b9050346102d557816003193601126102d5578160209360ff9261061061128e565b90358252606586528282206001600160a01b039091168252855220549151911615158152f35b9050346102d557816003193601126102d5576020926106619135815260978452826024359120611920565b905491519160018060a01b039160031b1c168152f35b5050346101e75760203660031901126101e7576106d09181906001600160a01b036106a0611273565b16815260d360209081529190205491516001600160e01b038316815260e09290921c908201529081906040820190565b0390f35b9050346102d55760203660031901126102d557356001600160a01b03811691908290036102d5577f51e0228fe901c430722ddefd46e1d63fd4127597ef3ae7c79ae73d2de14fbf3891602091610728611414565b60ca80546001600160a01b0319168317905551908152a180f35b5050346101e757806003193601126101e75761075c611273565b906024359063ffffffff8216820361024a5760ca54610247936001600160a01b039161078b9083163314611ad5565b16845260d26020526107e5828286209260d36020528620835460018060e01b03908181161561082a575b50815490811615610808575b5080546001600160e01b031660e09290921b6001600160e01b031916919091179055565b80546001600160e01b031660e09290921b6001600160e01b031916919091179055565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b178155386107c1565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b178555386107b5565b833461086e57602036600319011261086e57610247610869611273565b612384565b80fd5b5050346101e75760203660031901126101e7576106d09181906001600160a01b0361089a611273565b16815260d260209081529190205491516001600160e01b038316815260e09290921c908201529081906040820190565b5050346101e75760203660031901126101e75760209181906001600160a01b036108f2611273565b16815260d0845220549051908152f35b919050346102d55760803660031901126102d55767ffffffffffffffff823581811161056f576109359036908501611348565b9060243590811161056f5761094d9036908501611348565b936044359384151585036101e7576064359081151582036102d557825b8751811015610b61576001600160a01b0380610986838b6124ae565b5116908060ca541688518091638e8f294b60e01b8252848783015281602460609485935afa918215610b57578892610b28575b505015610aed5788610a2b575b846109dc575b50506109d79061275d565b61096a565b96919792949098936109ed8a611dc1565b815b8751811015610a1757806105028a610a0a610a12948c6124ae565b51168d612093565b6109ef565b509398509391966109d791965090386109cc565b95949291939787999199519763aa5af0fd60e01b8952888b818660209c8d935afa998a15610ae357869a610ab3575b5050805198610a688a6112a4565b8952610a74898c611f76565b845b8751811015610aa057806105028b8e8c610a93610a9b968e6124ae565b51169061220a565b610a76565b50975097939192949584999199506109c6565b9080929a50813d8311610adc575b610acb818361130e565b8101031261056f5751973880610a5a565b503d610ac1565b82513d88823e3d90fd5b875162461bcd60e51b815260208186015260156024820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b610b479250803d10610b50575b610b3f818361130e565b810190611b1b565b505038806109b9565b503d610b35565b8a513d8a823e3d90fd5b838686825b8151811015610bcb57610bc6906001600160a01b0380610b8683866124ae565b511681610b9384876124ae565b5116875260cb90610bad602091838352888a20549061276c565b92610bb885886124ae565b51168852528486205561275d565b610b66565b8380f35b5050346101e757806003193601126101e757610be9611273565b60203660231901126102d557610247915190610c04826112a4565b6024358252610c1e60018060a01b0360ca54163314611ad5565b611f76565b5050346101e757816003193601126101e75760ca5490516001600160a01b039091168152602090f35b833461086e57606036600319011261086e57610247610c69611273565b610c7e60018060a01b0360ca54163314611ad5565b6044359060243590611b4f565b5050346101e757806003193601126101e7577f386537fa92edc3319af95f1f904dcf1900021e4f3f4e08169a577a09076e66b36020610cc8611273565b60243590610cd4611414565b610cdd81612384565b81610d18576001600160a01b038116865260cd83528486208690555b6001600160a01b031680865260cc83528486208290559351908152a280f35b6001600160a01b038116865260cd8352848620439055610cf9565b5050346101e75736600319011261086e57610247610d4f611273565b610d5761128e565b90610d6d60018060a01b0360ca54163314611ad5565b612093565b9050346102d557816003193601126102d557610d8c611273565b90610d9561128e565b91845460ff8160081c161592838094610f27575b8015610f10575b15610eb6575060ff198082166001178755610e1d929184610ea5575b5060c980546001600160a01b0319166001600160a01b0396871617905586805260656020908152868820929095168088529185528587205460ff1615610e5d575b5085805260978452848620611938565b50610e26578280f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a138808280f35b8680526065855285872082885285526001868820918254161790553381877f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a438610e0d565b61ffff191661010117875538610dcc565b608490602087519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b158015610db05750600160ff831614610db0565b50600160ff831610610da9565b839150346101e757826003193601126101e757610f4f61128e565b90336001600160a01b03831603610f6b57906102479135611761565b608490602085519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b919050346102d557806003193601126102d5576110359135906097610fe961128e565b928086526020906065825261100360018589200154611608565b808752606582528387206001600160a01b039095168088529482528387205460ff1615611039575b8652528320611938565b5080f35b808752606582528387208588528252838720805460ff191660011790553385827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8a80a461102b565b839150346101e757826003193601126101e75761109d611273565b602435916110a9611414565b6110b3838361276c565b6110f6575092516001600160a01b0390931683526020830152907f98b2f82a3a07f223a0be64b3d0f47711c64dccd1feafb94aa28156b38cd9695c90604090a180f35b606490602086519162461bcd60e51b8352820152601b60248201527f696e73756666696369656e7420636f6d7020666f72206772616e7400000000006044820152fd5b9050346102d55760203660031901126102d55781602093600192358152606585522001549051908152f35b919050346102d5573660031901126101e75761117e611273565b60243567ffffffffffffffff811161024a57610247926111a091369101611348565b906124c2565b5050346101e757816003193601126101e75760c95490516001600160a01b039091168152602090f35b833461086e57602036600319011261086e576102476111ec611273565b61120160018060a01b0360ca54163314611ad5565b611dc1565b8491346102d55760203660031901126102d5573563ffffffff60e01b81168091036102d55760209250635a05180f60e01b8114908115611248575b5015158152f35b637965db0b60e01b811491508115611262575b5083611241565b6301ffc9a760e01b1490508361125b565b600435906001600160a01b038216820361128957565b600080fd5b602435906001600160a01b038216820361128957565b6020810190811067ffffffffffffffff8211176112c057604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176112c057604052565b6080810190811067ffffffffffffffff8211176112c057604052565b90601f8019910116810190811067ffffffffffffffff8211176112c057604052565b67ffffffffffffffff81116112c05760051b60200190565b81601f820112156112895780359161135f83611330565b9261136d604051948561130e565b808452602092838086019260051b820101928311611289578301905b828210611397575050505090565b81356001600160a01b0381168103611289578152908301908301611389565b81601f82011215611289578035916113cd83611330565b926113db604051948561130e565b808452602092838086019260051b820101928311611289578301905b828210611405575050505090565b813581529083019083016113f7565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260408083205490929060ff161561145657505050565b61145f33611811565b8351908261146c836112f2565b604283528483019360603686378351156115f457603085538351906001918210156115f45790607860218601536041915b81831161158657505050611544576114f293859361152a9361151b6048946115409951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611712565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190611712565b0103602881018552018361130e565b5162461bcd60e51b815291829160048301611735565b0390fd5b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f811660108110156115e0576f181899199a1a9b1b9c1cb0b131b232b360811b901a6115b685886117ea565b5360041c9280156115cc5760001901919061149d565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b600081815260209060658252604092838220338352835260ff8483205416156116315750505050565b61163a33611811565b845191611646836112f2565b604283528483019360603686378351156115f457603085538351906001918210156115f45790607860218601536041915b8183116116cc57505050611544576114f293859361152a9361151b6048946115409951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611712565b909192600f811660108110156115e0576f181899199a1a9b1b9c1cb0b131b232b360811b901a6116fc85886117ea565b5360041c9280156115cc57600019019190611677565b60005b8381106117255750506000910152565b8181015183820152602001611715565b604091602082526117558151809281602086015260208686019101611712565b601f01601f1916010190565b90604061179f9260009080825260656020528282209360018060a01b03169384835260205260ff83832054166117a2575b81526097602052206119e5565b50565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4611792565b9081518110156117fb570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff8211176112c057604052602a82526020820160403682378251156117fb576030905381516001908110156117fb57607860218401536029905b8082116118b257505061186e5790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f8116601081101561190b576f181899199a1a9b1b9c1cb0b131b232b360811b901a6118e184866117ea565b5360041c9180156118f657600019019061185e565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b80548210156117fb5760005260206000200190600090565b919060018301600090828252806020526040822054156000146119bc57845494680100000000000000008610156119a85783611998611981886001604098999a01855584611920565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b919082039182116119cf57565b634e487b7160e01b600052601160045260246000fd5b90600182019060009281845282602052604084205490811515600014611ace5760001991808301818111611aba57825490848201918211611aa657808203611a71575b50505080548015611a5d57820191611a408383611920565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b611a91611a816119819386611920565b90549060031b1c92839286611920565b90558652846020526040862055388080611a28565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b15611adc57565b60405162461bcd60e51b815260206004820152600a602482015269666f7262696464656e2160b01b6044820152606490fd5b5190811515820361128957565b9081606091031261128957611b2f81611b0e565b91602082015160ff81168103611289576040611b4c919301611b0e565b90565b60ca5460408051638e8f294b60e01b81526001600160a01b03808516600483018190529497969495949360609183916024918391165afa908115611c9a57600091611d2f575b5015611cec57836000528360209360d085528481846000205403611ca5575b505060005260d1835281816000205403611bd1575b505050509050565b805163aa5af0fd60e01b81528381600481885afa908115611c9a57600091611c4d575b50611c30907f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e537959697835191611c29836112a4565b8252611f76565b8460005260d1835281816000205551908152a28038808080611bc9565b908482813d8311611c93575b611c63818361130e565b8101031261086e5750517f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e537611bf4565b503d611c59565b82513d6000823e3d90fd5b7fdeafccd0c0b768b2529f7dcbbe58e155d6023059150b7490ed4535cc3744b92d91611cd08a611dc1565b8360005260d082528085600020558451908152a2833884611bb4565b5162461bcd60e51b815260206004820152601960248201527f636f6d70206d61726b6574206973206e6f74206c6973746564000000000000006044820152606490fd5b611d47915060603d8111610b5057610b3f818361130e565b505038611b95565b60405190611d5c826112d6565b601c82527f626c6f636b206e756d62657220657863656564732033322062697473000000006020830152565b60405190611d95826112d6565b601a82527f6e657720696e64657820657863656564732032323420626974730000000000006020830152565b6001600160a01b0316600081815260d26020908152604080832060d0835281842054949594939092611e01611df4611d4f565b6401000000004310612990565b63ffffffff431694611e2b855460e01c611e25611e1c612a24565b89831115612990565b876119c2565b978815158080611f6d575b15611f3c5750826004918651928380926318160ddd60e01b82525afa928315611f32578493611f00575b5050611ee99697611e7991611e73612a75565b91612b3a565b8115611eeb57611e899250612bb4565b611ead8354925191611e9a836112a4565b6001600160e01b038481168452926129b4565b51611ec5611eb9611d88565b600160e01b8310612990565b6001600160e01b0391161660e09390931b6001600160e01b03191692909217905550565b565b5050815190611ef9826112a4565b8152611e89565b9080929350813d8311611f2b575b611f18818361130e565b810103126102d557519087611e79611e60565b503d611f0e565b85513d86823e3d90fd5b959798505050505050611f4d575050565b81546001600160e01b031660e09190911b6001600160e01b031916179055565b50821515611e36565b6001600160a01b0316600081815260d36020908152604080832060d1835281842054949695929490939192611fac611df4611d4f565b63ffffffff431695611fd6865460e01c611fd0611fc7612a24565b8a831115612990565b886119c2565b98891515808061208a575b156120785750816004918751928380926308f7a6e360e31b82525afa91821561206e57859261203c575b505097612033611e799261202b611ee99a9b612025612a75565b90612aae565b905190612b78565b92611e73612a75565b90809250813d8311612067575b612053818361130e565b8101031261024a5751612033611e7961200b565b503d612049565b86513d87823e3d90fd5b96989950505050505050611f4d575050565b50841515611fe1565b6001600160a01b03908116600081815260d2602090815260408083205460ce83528184209690951680845295825280832080546001600160e01b039096169081905591969594909291908015806121f2575b6121dd575b612108906121026120f9612a24565b84831115612990565b826119c2565b96835197612115896112a4565b885283516370a0823160e01b8152600481018790528181602481895afa908115611f325784916121ae575b506121826a0c097ce7bc90715b34b9f160241b917f2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a9798999a51611e73612a75565b049287815260cb82528461219985828420546129e3565b9189815260cb845220558351928352820152a3565b90508181813d83116121d6575b6121c5818361130e565b8101031261024a5751612182612140565b503d6121bb565b506a0c097ce7bc90715b34b9f160241b6120ea565b506a0c097ce7bc90715b34b9f160241b8210156120e5565b6001600160a01b03908116600081815260d3602090815260408083205460cf83528184209690951680845295825280832080546001600160e01b039096169081905596979693949093919080158061236c575b612357575b6122809061227a612271612a24565b85831115612990565b836119c2565b9784519861228d8a6112a4565b895284516395dd919360e01b81526004810188905282816024818a5afa90811561206e57859161230a575b507f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6969798996123006a0c097ce7bc90715b34b9f160241b9361202b61218294612025612a75565b9051611e73612a75565b90508281813d8311612350575b612321818361130e565b8101031261056f57517f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a66122b8565b503d612317565b506a0c097ce7bc90715b34b9f160241b612262565b506a0c097ce7bc90715b34b9f160241b83101561225d565b60018060a01b031660009080825260cc602052604082205460cd6020526123c360408420546123bd6123b4612a24565b43831115612990565b436119c2565b908115158061241b575b6123d8575b50505050565b6123fa916123e891611e73612a75565b82845260cb60205260408420546129e3565b90825260cb602052604082205560cd602052604043912055388080806123d2565b508015156123cd565b60209081818403126112895780519067ffffffffffffffff821161128957019180601f8401121561128957825161245a81611330565b93612468604051958661130e565b818552838086019260051b820101928311611289578301905b82821061248f575050505090565b81516001600160a01b0381168103611289578152908301908301612481565b80518210156117fb5760209160051b010190565b60408051916124d0836112d6565b60019384845260209081850190823683378551156117fb576001600160a01b039384169091526000865b612579575b5050846000905b612513575b505050505050565b845181101561257457808361252b61256e93886124ae565b51168461253883896124ae565b511660005261255160cb9182865287600020549061276c565b908561255d848a6124ae565b51166000528452856000205561275d565b85612506565b61250b565b8151811015612758578361258d82846124ae565b51168460ca54168651638e8f294b60e01b815280806004938585830152606092839160249586915afa91821561274d5760009261272e575b5050156126f45750848751809263aa5af0fd60e01b825281855afa9081156126e9576000916126bc575b5086518994939291612600826112a4565b815261260c8183611f76565b886000865b612679575b50505061262281611dc1565b6000845b61263d575b50506126369061275d565b90916124fa565b8894919293945181101561266f57806105028861265d612665948d6124ae565b511685612093565b8194939291612626565b819493925061262b565b8882979394959697518210156126b057846105029161269b846126a3966124ae565b51168761220a565b8990829695949392612611565b50829695949350612616565b908582813d83116126e2575b6126d2818361130e565b8101031261086e575051386125ef565b503d6126c8565b87513d6000823e3d90fd5b875162461bcd60e51b8152918201869052601590820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b6127449250803d10610b5057610b3f818361130e565b505038806125c5565b8a513d6000823e3d90fd5b6124ff565b60001981146119cf5760010190565b9060018060a01b038060ca5416906040805191632aff3bff60e21b8352828187169485600483015281602460009687935afa9081156102c8578491612976575b50835b815181101561284757826127c382846124ae565b511680865260209060d1825285872054159182918261282e575b82612812575b5050811561280a575b506127ff576127fa9061275d565b6127af565b505050505050905090565b9050386127ec565b885260cf815286882089895290525084862054151538806127e3565b60ce82528789208a8a52825287892054151593506127dd565b5050909194925060c954168151926370a0823160e01b84523060048501526020938481602481865afa90811561296c57879161293b575b508515159081612930575b506128975750505050905090565b825163a9059cbb60e01b8582019081526001600160a01b03929092166024820152604480820196909652948552601f199486928392909183906128db60648261130e565b51925af1503d1561292a573d9067ffffffffffffffff8211612916579061290d838694935195601f840116018561130e565b83523d92013e90565b634e487b7160e01b85526041600452602485fd5b50505090565b905085111538612889565b90508481813d8311612965575b612952818361130e565b8101031261296157513861287e565b8680fd5b503d612948565b84513d89823e3d90fd5b61298a91503d8086833e6102b9818361130e565b386127ac565b156129985750565b60405162461bcd60e51b81529081906115409060048301611735565b906129d19160006040516129c7816112a4565b52519051906129e3565b604051906129de826112a4565b815290565b604051916129f0836112d6565b60118352706164646974696f6e206f766572666c6f7760781b60208401528101918282116119cf57611b4c91831015612990565b60405190612a31826112d6565b60158252747375627472616374696f6e20756e646572666c6f7760581b6020830152565b8115612a5f570490565b634e487b7160e01b600052601260045260246000fd5b60405190612a82826112d6565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b801591828015612af0575b612ae857670de0b6b3a764000080830293838504821417156119cf57612ae2611b4c9385612a55565b14612990565b505050600090565b506000612ab9565b801591828015612b32575b612ae8576a0c097ce7bc90715b34b9f160241b80830293838504821417156119cf57612ae2611b4c9385612a55565b506000612b03565b9091811592838015612b70575b612b675780830293838504821417156119cf57612ae2611b4c9385612a55565b50505050600090565b508015612b47565b90611b4c91612baf604051612b8c816112d6565b600e81526d646976696465206279207a65726f60901b6020820152831515612990565b612a55565b90612bd96129d1926000604051612bca816112a4565b52612bd3612a75565b90612af8565b612b7856fea2646970667358221220bf0929625f12e704099214241d3efccf8fd0f101a0b9409516dbc0feb0a5cbac64736f6c63430008130033";

export class CompLogic__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompLogic> {
    return super.deploy(overrides || {}) as Promise<CompLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompLogic {
    return super.attach(address) as CompLogic;
  }
  connect(signer: Signer): CompLogic__factory {
    return super.connect(signer) as CompLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompLogicInterface {
    return new utils.Interface(_abi) as CompLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompLogic {
    return new Contract(address, _abi, signerOrProvider) as CompLogic;
  }
}
