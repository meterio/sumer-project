/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Volt, VoltInterface } from "../Volt";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100b15760008055600380546001600160a01b031916339081179091551561006f573360005260016020526040516000815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36040516107b190816100b78239f35b62461bcd60e51b815260206004820152601e60248201527f564f4c543a204d696e7420746f20746865207a65726f206164647265737300006044820152606490fd5b600080fdfe60806040908082526004918236101561001757600080fd5b600092833560e01c92836306fdde031461051d5750826307546172146104f4578263095ea7b31461043057826318160ddd1461041357826323b872dd1461030e578263313ce567146102f257826340c10f191461021757826370a08231146101df57826395d89b411461017b57508163a9059cbb14610148578163dd62ed3e146100fb575063fca3b5aa146100ab57600080fd5b346100f85760203660031901126100f8576100c46105c7565b600354906001600160a01b03906100de33838516146105f8565b16906bffffffffffffffffffffffff60a01b161760035580f35b80fd5b905034610144578060031936011261014457806020926101196105c7565b6101216105e2565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b5080fd5b9050346101445780600319360112610144576020906101726101686105c7565b602435903361065a565b90519015158152f35b8382346101445781600319360112610144578051918183019083821067ffffffffffffffff8311176101cc5750926101c89382528252631593d31560e21b6020830152519182918261057e565b0390f35b634e487b7160e01b815260418552602490fd5b8382346101445760203660031901126101445760209181906001600160a01b036102076105c7565b1681526001845220549051908152f35b9083346100f857816003193601126100f8576102316105c7565b60035460243592916001600160a01b039161024f90831633146105f8565b169182156102af5760208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9184845260018252858420610293828254610637565b90556102a0818554610637565b84558551908152a35160018152f35b835162461bcd60e51b8152602081870152601e60248201527f564f4c543a204d696e7420746f20746865207a65726f206164647265737300006044820152606490fd5b8382346101445781600319360112610144576020905160128152f35b91503461040f57606036600319011261040f576103296105c7565b6103316105e2565b6001600160a01b0382168086526002602090815284872033885281528487205490956044359492919060018201610371575b50505090610172929161065a565b8582106103cc5750908596978561017297930392818385935260028b528181203382528b52205586519182527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925883393a38594933880610363565b865162461bcd60e51b8152908101889052601c60248201527f564f4c543a20496e73756666696369656e7420616c6c6f77616e6365000000006044820152606490fd5b8280fd5b838234610144578160031936011261014457602091549051908152f35b9083346100f857816003193601126100f85761044a6105c7565b6001600160a01b0316906024359082156104a75760209450838291338152600287528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b835162461bcd60e51b8152602081870152602160248201527f564f4c543a20417070726f766520746f20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b83823461014457816003193601126101445760035490516001600160a01b039091168152602090f35b8285346100f857806003193601126100f8578183019083821067ffffffffffffffff8311176101cc57506101c893508152601982527f566f6c745377617020476f7665726e616e636520546f6b656e00000000000000602083015251918291825b6020808252825181830181905290939260005b8281106105b357505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610591565b600435906001600160a01b03821682036105dd57565b600080fd5b602435906001600160a01b03821682036105dd57565b156105ff57565b60405162461bcd60e51b815260206004820152601060248201526f2b27a62a1d102737ba1036b4b73a32b960811b6044820152606490fd5b9190820180921161064457565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03918216929190831561072b571690600082815260016020526040812054918083106106d857604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652600186520382822055868152206106ca828254610637565b9055604051908152a3600190565b60405162461bcd60e51b815260206004820152602560248201527f564f4c543a205472616e7366657220616d6f756e7420657863656564732062616044820152646c616e636560d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f564f4c543a205472616e7366657220746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fdfea2646970667358221220520a595884857f279452da0564c6342f9e3d46cbb893ad25d93ab758e4f5903764736f6c63430008130033";

export class Volt__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Volt> {
    return super.deploy(overrides || {}) as Promise<Volt>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Volt {
    return super.attach(address) as Volt;
  }
  connect(signer: Signer): Volt__factory {
    return super.connect(signer) as Volt__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VoltInterface {
    return new utils.Interface(_abi) as VoltInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Volt {
    return new Contract(address, _abi, signerOrProvider) as Volt;
  }
}
