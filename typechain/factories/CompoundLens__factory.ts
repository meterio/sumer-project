/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundLens, CompoundLensInterface } from "../CompoundLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalancesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "heteroLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "homoLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sutokenLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "intraRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "discountRate",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenMetadataAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "heteroLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "homoLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sutokenLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "intraRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "discountRate",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenUnderlyingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenUnderlyingPriceAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountLimits",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "markets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortfall",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.AccountLimits",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadataExt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocated",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadataExt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "blockNumbers",
        type: "uint32[]",
      },
    ],
    name: "getCompVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "abstainVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovBravoProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "support",
            type: "uint8",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovBravoReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "isDeprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateBorrowAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "actualRepayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateCalculateSeizeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657614092908161001c8239f35b600080fdfe610280604052600436101561001357600080fd5b6000803560e01c80630972bf8b1461218c578063158eca8b1461215f5780631bd886b014611c8f5780631ea637411461191e5780632b2d5ed6146118085780633394fba5146117d1578063416405d71461162457806343c811cc1461140e5780634b70d84b14611303578063595642191461111a5780636dabf94f14610dd057806375d80e901461096b5780637dd8f6d9146107da57806396994869146103b0578063995ed99f1461015a578063bdf950c91461011f5763c5ae5934146100d957600080fd5b3461011c57602036600319011261011c5760406100fc6100f7612321565b613968565b815181516001600160a01b0316815260209182015191810191909152f35bf35b80fd5b503461011c57604036600319011261011c5761010061014d61013f612321565b6101476122b4565b90613588565b61011a60405180926122ca565b503461011c576060908160031936011261011c57610176612321565b61017e6122b4565b906044356001600160401b0381116103ac5761019e903690600401612591565b908151916101ab8361257a565b936101b96040519586612559565b838552601f196101c88561257a565b01865b81811061038f5750506001600160a01b0390921691855b8481106102525787878760405191602080840190808552835180925280604086019401925b8281106102145785850386f35b835180518652808301511515868401526040808201511515908701528701516001600160601b03168786015260809094019392810192600101610207565b61029c9061025e612871565b898461026a8488613536565b5160405163711d4d2960e11b815260048101919091526001600160a01b03909116602482015293849081906044820190565b0381895afa801561038457898a908b92610329575b61032495506020928385019160408601936001600160601b03809316855215158352151585526102e1868a613536565b51945115159151151592511692604051946102fb86612498565b855284015260408301528a8201526103138289613536565b5261031e8188613536565b506134d7565b6101e2565b50505090918981813d831161037d575b6103438183612559565b8101031261037957908161035a61032494936127c6565b610372604061036b602085016127c6565b9301613b5d565b91906102b1565b8880fd5b503d610339565b6040513d8b823e3d90fd5b60209061039d969596613b38565b82828a010152019493946101cb565b8380fd5b503461011c57604036600319011261011c576103ca612321565b6024356001600160401b0381116107d6576103e9903690600401612284565b6103f58193929361257a565b926104036040519485612559565b818452601f196104128361257a565b01855b81811061076c575050845b82811061053c5760408051602080825287518183018190528993600582901b8401810192808b01929185015b8287106104595785850386f35b909192938280600192603f1989820301855287519081518152848060a01b03838301511683820152604082015160408201526104e76104d46104c16104ae606080870151906101a080918801528601906125ef565b608080870151908683039087015261262c565b60a08086015190858303908601526126a8565b60c08085015190848303908501526126a8565b9160e081015160e083015261010080820151908301526101208082015190830152610140808201519083015261016080820151151590830152610180809101511515910152960192019601959291909261044c565b6105478184846134fc565b604051631946ecc160e11b81529035600482015286816024816001600160a01b0389165afa80156107615787918889918a9361073a575b506040519361058c85612505565b8a85528a60208601528a60408601526060850152608084015260a083015260c08201528660e082015286610100820152866101208201528661014082015286610160820152866101808201526105e28287613536565b526105ed8186613536565b506105f88186613536565b51906106058185856134fc565b60405163013cf08b60e01b8152903560048201819052929088610120826024816001600160a01b038c165afa91821561072d57818283849185938695879861069a575b5090610180979695949392916106959b8a5260018060a01b031660208a0152604089015260e0880152610100870152610120860152610140850152151561016084015215159101526134d7565b610420565b975050505050505050610120813d61012011610725575b816106bf6101209383612559565b810103126103795761069593816106db602061018094016127b2565b9060408101516060820151608083015160a08401519160c08501519361071061010061070960e089016127c6565b97016127c6565b979b9798509496939592949193909290610648565b3d91506106b1565b50604051903d90823e3d90fd5b9250505061075a91503d8089833e6107528183612559565b810190613b71565b913861057e565b6040513d89823e3d90fd5b60209060405161077b81612505565b888152828981830152896040830152606080808401528060808401528060a084015260c08301528960e08301528961010083015289610120830152896101408301528961016083015289610180830152828901015201610415565b8280fd5b503461011c57604036600319011261011c576107f4612321565b906107fd6122b4565b604051610809816124b3565b826040606092838152826020820152015260018060a01b038094169360405192635ec88c7960e01b8452168060048401528183602481885afa90811561096057848594869361092b575b50610927578490602460405180988193632aff3bff60e21b835260048301525afa93841561091b5780946108d0575b506108c0945060405193610895856124b3565b84526020840192835260408401908152604051948594602086525183602087015260808601906125ef565b9251604085015251908301520390f35b9093503d8082873e6108e28187612559565b850194602081870312610917578051916001600160401b03831161011c575094610910916108c09601613ad2565b9238610882565b5080fd5b604051903d90823e3d90fd5b8480fd5b9194505061094f9150823d8411610959575b6109478183612559565b810190612890565b9390939138610853565b503d61093d565b6040513d86823e3d90fd5b503461011c57604036600319011261011c57610985612321565b6024356001600160401b0381116107d6576109a4903690600401612284565b6109b08193929361257a565b926109be6040519485612559565b818452601f196109cd8361257a565b01855b818110610d5f575050845b828110610ac95760408051602080825287518183018190528993600582901b8401810192808b01929185015b828710610a145785850386f35b909192938280600192603f1989820301855287519081518152848060a01b0383830151168382015260408201516040820152610a696104d46104c16104ae606080870151906101c080918801528601906125ef565b9160e081015160e08301526101008082015190830152610120808201519083015261014080820151908301526101608082015190830152610180808201511515908301526101a08091015115159101529601920196019592919092610a07565b610ad48184846134fc565b604051631946ecc160e11b81529035600482015286816024816001600160a01b0389165afa80156107615787918889918a93610d40575b5060405193610b19856124e9565b8a85528a60208601528a60408601526060850152608084015260a083015260c08201528660e08201528661010082015286610120820152866101408201528661016082015286610180820152866101a0820152610b768287613536565b52610b818186613536565b50610b8c8186613536565b5190610b998185856134fc565b60405163013cf08b60e01b81529035600482018190529290610140816024816001600160a01b038b165afa908115610384578991610c4f575b506101206101a091610c4a95845260018060a01b03602082015116602085015260408101516040850152606081015160e0850152608081015161010085015260a08101518285015260c081015161014085015260e08101516101608501526101008101511515610180850152015115159101526134d7565b6109db565b9050610140813d61014011610d38575b81610c6d6101409383612559565b810103126103795760405190816101408101106001600160401b0361014084011117610d2257610c4a9482610d1561012080946101406101a0970160405280518452610cbb602082016127b2565b602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610d0961010082016127c6565b610100850152016127c6565b8382015292509450610bd2565b634e487b7160e01b600052604160045260246000fd5b3d9150610c5f565b92505050610d5891503d8089833e6107528183612559565b9138610b0b565b602090604051610d6e816124e9565b888152828981830152896040830152606080808401528060808401528060a084015260c08301528960e08301528961010083015289610120830152896101408301528961016083015289610180830152896101a08301528289010152016109d0565b503461011c5760c036600319011261011c57610dea612321565b90610df36122b4565b90610dfc612451565b50610e05612467565b60a4359360843591906001600160a01b038087169190828803610f855760405197637bca031760e11b91828a52898185169384600483015260209a8b60249d8e818b5afa92831561110f579084918c946110d1575b5083611070575b50505015611038576040516395dd919360e01b81529516600486018190529288868b81865afa95861561102d578896610ffa575b5090610ea091613d5b565b15610ebe57505050610eb6929394501015613ed2565b604051908152f35b60405191634e79238f60e01b8352600483015287820152846044820152846064820152606081608481855afa908115610fef578591610fce575b5015610f915784955093600493946040519485809263743aaa2360e11b82525afa928315610960578493610f5b575b50610f4d670de0b6b3a764000091610f569460405190610f468261247d565b8152613f70565b51041015613ed2565b610eb6565b92508483813d8311610f8a575b610f728183612559565b81010312610f8557915191610f4d610f27565b600080fd5b503d610f68565b60405162461bcd60e51b815260048101869052601681880152751a5b9cdd59999a58da595b9d081cda1bdc9d19985b1b60521b6044820152606490fd5b610fe6915060603d8111610959576109478183612559565b91505038610ef8565b6040513d87823e3d90fd5b919095508882813d8311611026575b6110138183612559565b81010312610f8557905194610ea0610e95565b503d611009565b6040513d8a823e3d90fd5b60405162461bcd60e51b8152600481018a90526011818c01527013505492d15517d393d517d31254d51151607a1b6044820152606490fd5b604051928352166004820152905089818c81895afa90811561038457899161109c575b50388281610e61565b90508981813d83116110ca575b6110b38183612559565b81010312610379576110c4906127c6565b38611093565b503d6110a9565b8d809295508193503d8311611108575b6110eb8183612559565b81010312611104576110fd84916127c6565b9238610e5a565b8a80fd5b503d6110e1565b6040513d8d823e3d90fd5b503461011c57606036600319011261011c57611134612321565b9061113d6122b4565b91604480356001600160401b0381116103ac5761115e903690600401612284565b90916111698261257a565b956111776040519788612559565b828752601f196111868461257a565b01865b8181106112de5750506001600160a01b039081169416855b8381106111ee576040805160208082528a51818301819052818c01938301918b5b8281106111cf5784840385f35b85518051855282015184830152948101946040909301926001016111c2565b63ffffffff8061120761120284888a6134fc565b613d1a565b169061121761120284888a6134fc565b60405163782d6fe160e01b8152600481018a90529116602482015260209081818781885afa9081156112d3578a91611288575b50906001600160601b0361128394939260405193611267856124ce565b84521690820152611278828b613536565b5261031e818a613536565b6111a1565b90508181813d83116112cc575b61129f8183612559565b810103126112c857906001600160601b036112be611283959493613b5d565b919293945061124a565b8980fd5b503d611295565b6040513d8c823e3d90fd5b6020906040516112ed816124ce565b6000815282600081830152828c01015201611189565b503461011c57602080600319360112610917576004356001600160401b0381116107d657611335903690600401612284565b9061133f8261257a565b9161134d6040519384612559565b808352601f1961135c8261257a565b01855b8181106113f2575050845b8181106113be575050506040519180830190808452825180925280604085019301945b82811061139a5784840385f35b90919282610320826113af6001948a51612337565b0196019101949291909461138d565b806113e06113db6113d66113ea9486889b999b6134fc565b613522565b6128ab565b6103138289613536565b94929461136a565b85906113ff9795976126fd565b82828a0101520195939561135f565b503461011c576060908160031936011261011c5761142a612321565b6114326122b4565b906044356001600160401b0381116103ac57611455909291923690600401612591565b8051916114618361257a565b9361146f6040519586612559565b838552601f1961147e8561257a565b01865b8181106116075750506001600160a01b0316855b8481106115065787878760405191602080840190808552835180925280604086019401925b8281106114c75785850386f35b8351805186528083015115158684015260408082015160ff16908701528701516001600160601b031687860152608090940193928101926001016114ba565b8088846115166115489488613536565b5160405163711d4d2960e11b815260048101919091526001600160a01b03909116602482015292839081906044820190565b0381865afa801561102d57889061159b575b61159692506115698287613536565b519080511515906020916001600160601b03604060ff85850151169301511692604051946102fb86612498565b611495565b50908881813d8311611600575b6115b28183612559565b810103126115fc5790611596916115f260408051926115d0846124b3565b6115d9816127c6565b845260206115e88183016127d3565b9085015201613b5d565b604082015261155a565b8780fd5b503d6115a8565b602090611615969396613b38565b82828a01015201949194611481565b503461011c57604036600319011261011c5761163e612321565b6116466122b4565b9061164f612871565b506040516370a0823160e01b81526001600160a01b0392831660048201819052918316939092916020908185602481895afa9485156117c6578395611797575b5060405163b4b5ea5760e01b8152600481018290529082826024818a5afa91821561096057908391859361175f575b50602460405180998193632c3e6f0f60e11b835260048301525afa92831561091b578093611725575b506060955083604080516116fa816124b3565b8781526001600160601b03858201941684520193168352604051948552519084015251166040820152f35b9092508186813d8311611758575b61173d8183612559565b8101031261011c57506117516060956127b2565b91386116e7565b503d611733565b8281939294503d8311611790575b6117778183612559565b810103126103ac576117898391613b5d565b91386116be565b503d61176d565b9094508181813d83116117bf575b6117af8183612559565b81010312610f855751933861168f565b503d6117a5565b6040513d85823e3d90fd5b503461011c57604036600319011261011c5760206117fe6117f0612321565b6117f86122b4565b90613d5b565b6040519015158152f35b503461011c57602080600319360112610917576004356001600160401b0381116107d65761183a903690600401612284565b906118448261257a565b916118526040519384612559565b808352601f196118618261257a565b01855b8181106118f4575050845b8181106118d4575050506040519180830190808452825180925280604085019301945b82811061189f5784840385f35b909192826040826118c56001948a516020809160018060a01b0381511684520151910152565b01960191019492919094611892565b806113e06100f76113d66118ec9486889b999b6134fc565b94929461186f565b8590604097959751611905816124ce565b6000815260008382015282828a01015201959395611864565b503461011c57606036600319011261011c57611938612321565b6119406122b4565b611948612451565b91611951613b38565b5060018060a01b038091169360405193826370a0823160e01b9182875216806004870152602091602495838888818c5afa978815610fef578598611c60575b508516803b15610927576040516374d7814960e11b8152600481018490528581898183865af18015611c5557611c27575b50604051918252826004830152838288818c5afa918215610fef578793929185918793611bf5575b506040519889809263331faf7160e21b82528660048301525afa968715610fef578597611bc6575b5060405190611a1f826124ce565b600e82526d1cdd5b4818dbdb5c081d1bdd185b60921b85830152870196878111611bb35790611a5091881015613d2b565b611a81604051611a5f816124ce565b600d81526c1cdd5888185b1b1bd8d85d1959609a1b8582015287891115613d2b565b868603958611611ba05760405163b4b5ea5760e01b81526004810182905291838382818c5afa928315610fef57908492918694611b66575b50604051809a8193632c3e6f0f60e11b835260048301525afa92831561091b578093611b2c575b50608096506060604051611af381612498565b8781526001600160601b038482019316835285604082019516855201948552604051958652519085015251166040830152516060820152f35b9092508187813d8311611b5f575b611b448183612559565b8101031261011c5750611b586080966127b2565b9138611ae0565b503d611b3a565b838193949295503d8311611b99575b611b7f8183612559565b810103126109275790611b928492613b5d565b9238611ab9565b503d611b75565b50634e487b7160e01b8352601160045282fd5b634e487b7160e01b865260116004528386fd5b9096508381813d8311611bee575b611bde8183612559565b81010312610f8557519538611a11565b503d611bd4565b9450915083813d8311611c20575b611c0d8183612559565b81010312610f85578387935191386119e9565b503d611c03565b6001600160401b038196929611611c425760405293386119c1565b634e487b7160e01b825260416004528782fd5b6040513d88823e3d90fd5b9097508381813d8311611c88575b611c788183612559565b8101031261092757519685611990565b503d611c6e565b503461011c57608036600319011261011c57611ca9612321565b90611cb26122b4565b6001600160a01b039283611cc4612467565b1691604051926307dc0d1d60e41b84526020938481600481855afa908115611c55579087918791612127575b501692604051928763fc57d4df60e01b9283865216918260048601528685602481895afa94851561102d579087929189966120f3575b506024906040519a8b938492835216978860048301525afa968715611c555786976120c0575b50821515806120b7575b156120845760405163182df0f560e01b8152938585600481845afa948515610761578795612055575b5086604051611d8d8161247d565b5286604051611d9b8161247d565b5286604051611da98161247d565b5260405191638e8f294b60e01b928381528160048201526060928382602481895afa9182156112d3578a92612033575b5060405194855260048501528284602481885afa938415610384578994611ffe575b50826004949560405195868092634ada90af60e01b82525afa9384156103845789908a948b96611fd9575b505060ff80919616911614611f0c575b505050604095611eb0611e93670de0b6b3a764000095611e78611eff96611ee8968c5190611e638261247d565b81528c5191611e718361247d565b8252613f2f565b938a5190611e858261247d565b81528a5191611e718361247d565b91878951611ea08161247d565b5251611eaa613f9b565b90613fd4565b905190611ee38851611ec1816124ce565b600e81526d646976696465206279207a65726f60901b88820152831515613d2b565b613f0f565b855190611ef48261247d565b815260443590613f70565b5104908351928352820152f35b600491929350869060405192838092637f4e225760e11b82525afa908115610761578791611f76575b50611e93670de0b6b3a764000095611e78611eff96611ee89660409c96611eb09615600014611f6f57505b96509650509550829850611e36565b9050611f60565b90508581813d8311611fd2575b611f8d8183612559565b81010312611fce57611e93670de0b6b3a764000095611e78611eff96611ee89660409c96611fbd611eb0976127c6565b9650969c5096509650509550611f35565b8680fd5b503d611f83565b60ff9650869550611ff69250803d10610959576109478183612559565b959094611e26565b600494506120228491823d841161202c575b61201a8183612559565b8101906127e1565b5090509450611dfb565b503d612010565b61204b919250843d861161202c5761201a8183612559565b5090509038611dd9565b9094508581813d831161207d575b61206d8183612559565b81010312611fce57519338611d7f565b503d612063565b60405162461bcd60e51b815260048101869052600b60248201526a282924a1a2afa2a92927a960a91b6044820152606490fd5b50861515611d56565b9096508481813d83116120ec575b6120d88183612559565b810103126120e857519538611d4c565b8580fd5b503d6120ce565b838193949297503d8311612120575b61210c8183612559565b810103126115fc5751938691906024611d26565b503d612102565b809250868092503d8311612158575b6121408183612559565b810103126120e85761215287916127b2565b38611cf0565b503d612136565b503461011c57602036600319011261011c5761032061217f6113db612321565b61011a6040518092612337565b503461011c57604036600319011261011c576004356001600160401b038111610917576121bd903690600401612284565b91906121c76122b4565b6121d08461257a565b936121de6040519586612559565b808552601f196121ed8261257a565b01845b81811061226d575050835b81811061224d576040805160208082528851818301819052818a0193830191895b8281106122295784840385f35b909192826101008261223e6001948a516122ca565b0196019101949291909461221c565b806113e0846122636113d661226895878a6134fc565b613588565b6121fb565b60209061227861354a565b82828a010152016121f0565b9181601f84011215610f85578235916001600160401b038311610f85576020808501948460051b010111610f8557565b602435906001600160a01b0382168203610f8557565b60e0809160018060a01b038151168452602081015115156020850152604081015115156040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b600435906001600160a01b0382168203610f8557565b60018060a01b038082511683526020820151602084015260408201516040840152606082015160608401526080820151608084015260a082015160a084015260c082015160c084015260e082015160e084015261010080830151908401526101208083015115159084015261014090818301511690830152610160808201519083015261018080820151908301526101a0808201511515908301526101c0808201511515908301526101e08082015190830152610200808201519083015261022080820151908301526102408082015190830152610260808201519083015261028060ff8183015116908301526102a080820151908301526102c080820151908301526102e0808201519083015261030080910151910152565b604435906001600160a01b0382168203610f8557565b606435906001600160a01b0382168203610f8557565b602081019081106001600160401b03821117610d2257604052565b608081019081106001600160401b03821117610d2257604052565b606081019081106001600160401b03821117610d2257604052565b604081019081106001600160401b03821117610d2257604052565b6101c081019081106001600160401b03821117610d2257604052565b6101a081019081106001600160401b03821117610d2257604052565b61032081019081106001600160401b03821117610d2257604052565b61010081019081106001600160401b03821117610d2257604052565b90601f801991011681019081106001600160401b03821117610d2257604052565b6001600160401b038111610d225760051b60200190565b81601f82011215610f85578035916125a88361257a565b926125b66040519485612559565b808452602092838086019260051b820101928311610f85578301905b8282106125e0575050505090565b813581529083019083016125d2565b90815180825260208080930193019160005b82811061260f575050505090565b83516001600160a01b031685529381019392810192600101612601565b90815180825260208080930193019160005b82811061264c575050505090565b83518552938101939281019260010161263e565b60005b8381106126735750506000910152565b8181015183820152602001612663565b9060209161269c81518092818552858086019101612660565b601f01601f1916010190565b90815180825260208092019182818360051b85019501936000915b8483106126d35750505050505090565b90919293949584806126ed83856001950387528a51612683565b98019301930191949392906126c3565b6040519061270a82612521565b816103006000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c0820152826101e08201528261020082015282610220820152826102408201528261026082015282610280820152826102a0820152826102c0820152826102e08201520152565b51906001600160a01b0382168203610f8557565b51908115158203610f8557565b519060ff82168203610f8557565b90816060910312610f85576127f5816127c6565b9161280e6040612807602085016127d3565b93016127c6565b90565b909291926001600160401b038111610d22576040519161283b601f8301601f191660200184612559565b829482845282820111610f85576020612855930190612660565b565b9080601f83011215610f8557815161280e92602001612811565b6040519061287e826124b3565b60006040838281528260208201520152565b90816060910312610f85578051916040602083015192015190565b906128b46126fd565b50604051635fe3b56760e01b81526020816004816001600160a01b0387165afa908115612e9b5760009161349d575b50604051632b1e137760e21b81526000906020816004816001600160a01b0389165afa908115613492578291613458575b501561330b575060009260125b604051638e8f294b60e01b81526001600160a01b0380841660048301529092906060908490602490829088165afa928315612e9b5760009384610120526132e5575b5060405163243cdb5560e01b81526101205160ff1660048201526000816024816001600160a01b0389165afa908115612e9b576000916131fe575b506129a7612871565b6101c052604051637f4e225760e11b81526020816004816001600160a01b0387165afa908115612e9b576000916131c4575b501561319e5780604060609201516101c0515260a081015160406101c0510152015160206101c05101525b604051634ada90af60e01b81526060816004816001600160a01b0389165afa8015612e9b5760006101405260006101605260006101a052613173575b5060405163bd6d894d60e01b815260208160048160006001600160a01b0387165af18015612e9b57600061010052613138575b50604051630ae9d70b60e41b81526020816004816001600160a01b0386165afa8015612e9b57600060e0526130ff575b50604051631f1f3b4560e31b81526020816004816001600160a01b0386165afa8015612e9b57600060c0526130c6575b506040516305cee64160e21b8152926020846004816001600160a01b0386165afa938415612e9b57600094613092575b506040516308f7a6e360e31b8152966020886004816001600160a01b0387165afa978815612e9b5760009861305e575b50604051638f840ddd60e01b8152916020836004816001600160a01b0388165afa928315612e9b5760009361302a575b506040516318160ddd60e01b81526020816004816001600160a01b0389165afa908115612e9b57600091612ff8575b50604051631d8e90d160e11b8152906020826004816001600160a01b038a165afa918215612e9b57600092612fc4575b5060405163313ce56760e01b8152946020866004816001600160a01b038b165afa958615612e9b57600096612f88575b50604051637f4e225760e11b81529b60208d6004816001600160a01b038c165afa998a15612e9b5760009a612f50575b604051632b1e137760e21b81529d5060208e6004816001600160a01b038d165afa9b8c15612e9b5760009c612f14575b60405163a7e9613f60e01b81526001600160a01b038b811660048301529e9f509d6020908f90602490829085165afa9d8e15612e9b5760009e612ee0575b50604051639cc7becf60e01b81526001600160a01b03808c166004830152909160209183916024918391165afa8015612e9b576000608052612ea7575b506101c0518051610220526040808201516101e052602091820151610200525161026081815263131d060f60e21b909152516004816001600160a01b038d165afa806102405215612e9b57600060a05261024051612e5a575b60ff98612d396040518061018052612521565b60018060a01b0316610180515261010051602061018051015260e051604061018051015260c0516060610180510152608061018051015260a061018051015260c061018051015260e0610180510152610100610180510152151561012061018051015260018060a01b0316610140610180510152166101606101805101526101808051015215156101a061018051015215156101c06101805101526101e061018051015260805161020061018051015261014051610220610180510152610160516102406101805101526101a05161026061018051015260ff6101205116610280610180510152610220516102a0610180510152610200516102c06101805101526101e0516102e061018051015260a0516103006101805101526101805190565b6020983d602011612e93575b612e738a61026051612559565b602061026051809b81010312612e8d57985160a052612d26565b60a05180fd5b3d9950612e66565b6040513d6000823e3d90fd5b6020813d602011612ed8575b81612ec060209383612559565b81010312612ed2575160805238612ccd565b60805180fd5b3d9150612eb3565b909d6020823d602011612f0c575b81612efb60209383612559565b8101031261011c5750519c38612c90565b3d9150612eee565b9b60208f813d8311612f49575b612f2b8183612559565b8101031261011c5750612f4060209d9e6127c6565b9b8e9d50612c52565b503d612f21565b9960208e813d8311612f81575b612f678183612559565b8101031261011c5750612f7b60209d6127c6565b99612c22565b503d612f5d565b90956020823d602011612fbc575b81612fa360209383612559565b8101031261011c5750612fb5906127d3565b9438612bf2565b3d9150612f96565b90916020823d602011612ff0575b81612fdf60209383612559565b8101031261011c5750519038612bc2565b3d9150612fd2565b906020823d602011613022575b8161301260209383612559565b8101031261011c57505138612b92565b3d9150613005565b90926020823d602011613056575b8161304560209383612559565b8101031261011c5750519138612b63565b3d9150613038565b90976020823d60201161308a575b8161307960209383612559565b8101031261011c5750519638612b33565b3d915061306c565b90936020823d6020116130be575b816130ad60209383612559565b8101031261011c5750519238612b03565b3d91506130a0565b6020813d6020116130f7575b816130df60209383612559565b810103126130f1575160c05238612ad3565b60c05180fd5b3d91506130d2565b6020813d602011613130575b8161311860209383612559565b8101031261312a575160e05238612aa3565b60e05180fd5b3d915061310b565b6020813d60201161316b575b8161315160209383612559565b8101031261316457516101005238612a73565b6101005180fd5b3d9150613144565b61318b9060603d606011610959576109478183612559565b9161014052610160526101a05238612a40565b60c0608082019182516101c05152015160406101c05101525160206101c0510152612a04565b906020823d6020116131f6575b816131de60209383612559565b8101031261011c57506131f0906127c6565b386129d9565b3d91506131d1565b903d918282823e61320f8382612559565b6020818481010312610917578051916001600160401b03831161011c5760e0838301858401031261011c57604051938460e08101106001600160401b0360e0870111176132d15760e085016040526132688484016127d3565b855260208484010151916001600160401b03831161011c575082916132969160c09594019084840101612857565b60208501520160408181015190840152606080820151908401526080808201519084015260a08082015190840152015160c08201523861299e565b634e487b7160e01b82526041600452602482fd5b6132ff91935060603d60601161202c5761201a8183612559565b50610120529138612963565b604051636f307dc360e01b8082529491906020816004816001600160a01b0387165afa91821561091b57809261341b575b5050604051948552936020816004816001600160a01b0386165afa908115612e9b576000916133dc575b5060405163313ce56760e01b815290602090829060049082906001600160a01b03165afa8015612e9b576000906133a2575b60ff915016612921565b6020823d6020116133d4575b816133bb60209383612559565b8101031261011c57506133cf60ff916127d3565b613398565b3d91506133ae565b906020823d602011613413575b816133f660209383612559565b8101031261011c5750602061340c6004926127b2565b9150613366565b3d91506133e9565b9091506020823d602011613450575b8161343760209383612559565b8101031261011c5750613449906127b2565b388061333c565b3d915061342a565b90506020813d60201161348a575b8161347360209383612559565b8101031261091757613484906127c6565b38612914565b3d9150613466565b6040513d84823e3d90fd5b906020823d6020116134cf575b816134b760209383612559565b8101031261011c57506134c9906127b2565b386128e3565b3d91506134aa565b60001981146134e65760010190565b634e487b7160e01b600052601160045260246000fd5b919081101561350c5760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b0381168103610f855790565b805182101561350c5760209160051b010190565b604051906135578261253d565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b61359061354a565b50604080516370a0823160e01b8082526001600160a01b0394851660048301819052938516946020949390929085826024818a5afa91821561395d5760009261392e575b5080516305eff7ef60e21b81526004810186905292868460248160008c5af1938415613923576000946138f4575b508151633af9e66960e01b81526004810187905294878660248160008d5af195861561380557908992916000976138c0575b5060009084518a81600481632b1e137760e21b988982525afa90811561388157839161388b575b50156137585750505085319531965b8251637f4e225760e11b815281816004818d5afa90811561371857600091613723575b50835192835281836004818d5afa928315613718576000936136e1575b508351996136b78b61253d565b8a521515908901521515908701526060860152608085015260a084015260c083015260e082015290565b90928282813d8311613711575b6136f88183612559565b8101031261011c575061370a906127c6565b91386136aa565b503d6136ee565b84513d6000823e3d90fd5b908282813d8311613751575b6137398183612559565b8101031261011c575061374b906127c6565b3861368d565b503d61372f565b8451636f307dc360e01b81528a816004818f5afa90811561388157839161384c575b50169184519081528860048201528981602481865afa9182156138415790818b93613810575b5050976044855180948193636eb1769f60e11b835260048301528d60248301525afa908115613805576000916137d8575b509661366a565b908882813d83116137fe575b6137ee8183612559565b8101031261011c575051386137d1565b503d6137e4565b83513d6000823e3d90fd5b91509182813d831161383a575b6138278183612559565b8101031261011c575088905138806137a0565b503d61381d565b8551903d90823e3d90fd5b90508a81813d831161387a575b6138638183612559565b810103126107d657613874906127b2565b3861377a565b503d613859565b86513d85823e3d90fd5b90508a81813d83116138b9575b6138a28183612559565b810103126107d6576138b3906127c6565b3861365b565b503d613898565b919250958882813d83116138ed575b6138d98183612559565b8101031261011c5750908891519538613634565b503d6138cf565b90938782813d831161391c575b61390b8183612559565b8101031261011c5750519238613602565b503d613901565b82513d6000823e3d90fd5b90918682813d8311613956575b6139458183612559565b8101031261011c57505190386135d4565b503d61393b565b50513d6000823e3d90fd5b60408051613975816124ce565b600080825260209182018190528251635fe3b56760e01b81526001600160a01b0394851694919391908381600481895afa908115613a9157829185918791613a9b575b5060048551809481936307dc0d1d60e41b8352165afa908115613a91579084918691613a5b575b50602484518094819363fc57d4df60e01b83528a6004840152165afa938415613a50578094613a1e575b50505192613a16846124ce565b835282015290565b909193508282813d8311613a49575b613a378183612559565b8101031261011c575051913880613a09565b503d613a2d565b8251903d90823e3d90fd5b82819392503d8311613a8a575b613a728183612559565b8101031261092757613a8484916127b2565b386139df565b503d613a68565b83513d87823e3d90fd5b92505081813d8311613acb575b613ab28183612559565b810103126109275783613ac583926127b2565b386139b8565b503d613aa8565b81601f82011215610f8557805191613ae98361257a565b92613af76040519485612559565b808452602092838086019260051b820101928311610f85578301905b828210613b21575050505090565b838091613b2d846127b2565b815201910190613b13565b60405190613b4582612498565b60006060838281528260208201528260408201520152565b51906001600160601b0382168203610f8557565b608081830312610f85578051926001600160401b0393848111610f855783613b9a918401613ad2565b93602080840151828111610f8557840185601f82011215610f8557805190613bc18261257a565b90604092613bd184519384612559565b808352848084019160051b83010191898311610f855785809101915b838310613d0a57505050509581860151848111610f8557860181601f82011215610f85578051613c1c8161257a565b91613c2985519384612559565b818352858084019260051b82010191848311610f8557868201905b838210613ce5575050505095606081015190858211610f8557019181601f84011215610f8557825190613c768261257a565b95613c8382519788612559565b828752858088019360051b86010194848611610f8557868101935b868510613cb057505050505050505090565b8451838111610f8557820186603f82011215610f85578891613cda88838886809601519101612811565b815201940193613c9e565b8151898111610f85578891613cff88848094880101612857565b815201910190613c44565b8251815291810191869101613bed565b3563ffffffff81168103610f855790565b15613d335750565b60405162461bcd60e51b815260206004820152908190613d57906024830190612683565b0390fd5b604080516302a9bed760e61b81526001600160a01b0392831660048201819052929093169290916020918281602481885afa801561371857600090613e9d575b60ff915016159384613e32575b5083613db5575b50505090565b82516305cee64160e21b815293508190849060049082905afa918215613e285750600091613df3575b50670de0b6b3a7640000915014388080613daf565b82813d8311613e21575b613e078183612559565b8101031261011c5750670de0b6b3a7640000905138613dde565b503d613dfd565b513d6000823e3d90fd5b6024919450829084519283809263715cfdd960e01b82528860048301525afa90811561380557600091613e68575b509238613da8565b908282813d8311613e96575b613e7e8183612559565b8101031261011c5750613e90906127c6565b38613e60565b503d613e74565b8382813d8311613ecb575b613eb28183612559565b8101031261011c5750613ec660ff916127d3565b613d9b565b503d613ea8565b15613ed957565b60405162461bcd60e51b815260206004820152600e60248201526d746f6f206d75636820726570617960901b6044820152606490fd5b8115613f19570490565b634e487b7160e01b600052601260045260246000fd5b670de0b6b3a764000091613f5d916000604051613f4b8161247d565b52519051613f57613f9b565b9161401e565b0460405190613f6b8261247d565b815290565b90613f8e916000604051613f838161247d565b525190613f57613f9b565b60405190613f6b8261247d565b60405190613fa8826124ce565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b801591828015614016575b61400e57670de0b6b3a764000080830293838504821417156134e65761400861280e9385613f0f565b14613d2b565b505050600090565b506000613fdf565b9091811592838015614054575b61404b5780830293838504821417156134e65761400861280e9385613f0f565b50505050600090565b50801561402b56fea2646970667358221220fd60da0d99ecebe5e058ee27aea153a368c34d162bf7d8e67a70546de82af61164736f6c63430008130033";

export class CompoundLens__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundLens> {
    return super.deploy(overrides || {}) as Promise<CompoundLens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompoundLens {
    return super.attach(address) as CompoundLens;
  }
  connect(signer: Signer): CompoundLens__factory {
    return super.connect(signer) as CompoundLens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundLensInterface {
    return new utils.Interface(_abi) as CompoundLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundLens {
    return new Contract(address, _abi, signerOrProvider) as CompoundLens;
  }
}
