/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundLens, CompoundLensInterface } from "../CompoundLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalancesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationIncentive",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenMetadataAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationIncentive",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenUnderlyingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenUnderlyingPriceAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountLimits",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "markets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortfall",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.AccountLimits",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadataExt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocated",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadataExt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "blockNumbers",
        type: "uint32[]",
      },
    ],
    name: "getCompVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "abstainVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovBravoProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "support",
            type: "uint8",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovBravoReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "isDeprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateBorrowAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "actualRepayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateCalculateSeizeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50614456806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634b70d84b116100a25780637dd8f6d9116100715780637dd8f6d9146102f25780639699486914610312578063995ed99f14610332578063bdf950c914610352578063c5ae59341461037257600080fd5b80634b70d84b1461027157806359564219146102915780636dabf94f146102b157806375d80e90146102d257600080fd5b80632b2d5ed6116100de5780632b2d5ed6146101d05780633394fba5146101f0578063416405d71461021357806343c811cc1461025157600080fd5b80630972bf8b14610110578063158eca8b146101395780631bd886b0146101595780631ea6374114610181575b600080fd5b61012361011e36600461328c565b610392565b604051610130919061333c565b60405180910390f35b61014c61014736600461338b565b610462565b604051610130919061348e565b61016c61016736600461349d565b610d5b565b60408051928352602083019190915201610130565b61019461018f3660046134f0565b611069565b604051610130919081518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b6101e36101de366004613530565b6113ca565b6040516101309190613571565b6102036101fe3660046135d1565b61149f565b6040519015158152602001610130565b6102266102213660046135d1565b611660565b604080518251815260208084015190820152918101516001600160a01b031690820152606001610130565b61026461025f366004613707565b611801565b6040516101309190613768565b61028461027f366004613530565b6119a3565b60405161013091906137cd565b6102a461029f366004613810565b611a61565b6040516101309190613874565b6102c46102bf3660046138b6565b611bfd565b604051908152602001610130565b6102e56102e036600461392f565b611f81565b6040516101309190613a9b565b6103056103003660046135d1565b6121e2565b6040516101309190613bd5565b61032561032036600461392f565b61231c565b6040516101309190613c11565b610345610340366004613707565b612566565b6040516101309190613d32565b6103656103603660046135d1565b612741565b6040516101309190613d96565b61038561038036600461338b565b612b7e565b6040516101309190613da5565b6060826000816001600160401b038111156103af576103af61360a565b6040519080825280602002602001820160405280156103e857816020015b6103d561312d565b8152602001906001900390816103cd5790505b50905060005b828110156104565761042687878381811061040b5761040b613dc5565b9050602002016020810190610420919061338b565b86612741565b82828151811061043857610438613dc5565b6020026020010181905250808061044e90613df1565b9150506103ee565b509150505b9392505050565b61046a61317f565b6000826001600160a01b031663bd6d894d6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190613e0c565b90506000836001600160a01b0316635fe3b5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105369190613e35565b90506000816001600160a01b0316632408d5f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190613e35565b604051638e8f294b60e01b81526001600160a01b038781166004830152919250600091829190851690638e8f294b906024016040805180830381865afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e9190613e62565b91509150600080886001600160a01b031663ac784ddc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610653573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106779190613e8e565b1561068857506000905060126107b5565b886001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190613e35565b9150886001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190613e35565b6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561078b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107af9190613eba565b60ff1690505b6040518061026001604052808a6001600160a01b031681526020018881526020018a6001600160a01b031663ae9d70b06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108389190613e0c565b81526020018a6001600160a01b031663f8f9da286040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f9190613e0c565b81526020018a6001600160a01b031663173b99046040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109069190613e0c565b81526020018a6001600160a01b03166347bd37186040518163ffffffff1660e01b8152600401602060405180830381865afa158015610949573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096d9190613e0c565b81526020018a6001600160a01b0316638f840ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190613e0c565b81526020018a6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190613e0c565b81526020018a6001600160a01b0316633b1d21a26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190613e0c565b81526020018515158152602001848152602001836001600160a01b031681526020018a6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b269190613eba565b60ff1681526020018281526020018a6001600160a01b031663fe9c44ae6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b969190613e8e565b151581526020018a6001600160a01b031663ac784ddc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bff9190613e8e565b1515815260405163a7e9613f60e01b81526001600160a01b038c8116600483015260209092019188169063a7e9613f90602401602060405180830381865afa158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c739190613e0c565b8152604051639cc7becf60e01b81526001600160a01b038c81166004830152602090920191891690639cc7becf90602401602060405180830381865afa158015610cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce59190613e0c565b8152602001876001600160a01b0316634ada90af6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4c9190613e0c565b90529998505050505050505050565b6000806000836001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc29190613e35565b60405163fc57d4df60e01b81526001600160a01b03898116600483015291925060009183169063fc57d4df90602401602060405180830381865afa158015610e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e329190613e0c565b60405163fc57d4df60e01b81526001600160a01b03898116600483015291925060009184169063fc57d4df90602401602060405180830381865afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea29190613e0c565b9050600082118015610eb45750600081115b610ef35760405162461bcd60e51b815260206004820152600b60248201526a282924a1a2afa2a92927a960a91b60448201526064015b60405180910390fd5b6000886001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f579190613e0c565b90506000610f716040518060200160405280600081525090565b60408051602081019091526000815260408051602081019091526000815261101660405180602001604052808981525060405180602001604052808e6001600160a01b0316634ada90af6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e9190613e0c565b905290612ce8565b6040805160208082018352888252825190810190925288825291945061103b91612ce8565b91506110478383612d30565b9050611053818d612d6a565b60009f909e509c50505050505050505050505050565b61109d6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001600081525090565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908616906370a0823190602401602060405180830381865afa1580156110e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110b9190613e0c565b6040516374d7814960e11b81526001600160a01b0385811660048301529192509085169063e9af029290602401600060405180830381600087803b15801561115257600080fd5b505af1158015611166573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b03868116600483015260009350881691506370a0823190602401602060405180830381865afa1580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d79190613e0c565b60405163331faf7160e21b81526001600160a01b03868116600483015291925060009187169063cc7ebdc490602401602060405180830381865afa158015611223573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112479190613e0c565b9050600061127c82846040518060400160405280600e81526020016d1cdd5b4818dbdb5c081d1bdd185b60921b815250612d8a565b905060006112b082866040518060400160405280600d81526020016c1cdd5888185b1b1bd8d85d1959609a1b815250612dbb565b60408051608081018252878152905163b4b5ea5760e01b81526001600160a01b038a8116600483015292935090916020830191908c169063b4b5ea5790602401602060405180830381865afa15801561130d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113319190613eec565b6001600160601b03168152604051632c3e6f0f60e11b81526001600160a01b038a811660048301526020909201918c169063587cde1e90602401602060405180830381865afa158015611388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ac9190613e35565b6001600160a01b031681526020019190915298975050505050505050565b6060816000816001600160401b038111156113e7576113e761360a565b60405190808252806020026020018201604052801561142c57816020015b60408051808201909152600080825260208201528152602001906001900390816114055790505b50905060005b828110156114945761146486868381811061144f5761144f613dc5565b9050602002016020810190610380919061338b565b82828151811061147657611476613dc5565b6020026020010181905250808061148c90613df1565b915050611432565b509150505b92915050565b6040516302a9bed760e61b81526001600160a01b0383811660048301526000919083169063aa6fb5c090602401602060405180830381865afa1580156114e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150d9190613eba565b60ff161580156115e65750816001600160a01b0316632408d5f06040518163ffffffff1660e01b8152600401602060405180830381865afa158015611556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157a9190613e35565b60405163715cfdd960e01b81526001600160a01b038581166004830152919091169063715cfdd990602401602060405180830381865afa1580156115c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e69190613e8e565b801561045b5750826001600160a01b031663173b99046040518163ffffffff1660e01b8152600401602060405180830381865afa15801561162b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164f9190613e0c565b670de0b6b3a7640000149392505050565b61168d6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b6040805160608101918290526370a0823160e01b9091526001600160a01b038381166064830152819085166370a0823160848301602060405180830381865afa1580156116de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117029190613e0c565b815260405163b4b5ea5760e01b81526001600160a01b03858116600483015260209092019186169063b4b5ea5790602401602060405180830381865afa158015611750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117749190613eec565b6001600160601b03168152604051632c3e6f0f60e11b81526001600160a01b03858116600483015260209092019186169063587cde1e90602401602060405180830381865afa1580156117cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ef9190613e35565b6001600160a01b031690529392505050565b80516060906000816001600160401b038111156118205761182061360a565b60405190808252806020026020018201604052801561187257816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161183e5790505b50905060005b82811015610456576000876001600160a01b031663e23a9a528784815181106118a3576118a3613dc5565b6020026020010151896040518363ffffffff1660e01b81526004016118db9291909182526001600160a01b0316602082015260400190565b606060405180830381865afa1580156118f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191c9190613f07565b9050604051806080016040528087848151811061193b5761193b613dc5565b60200260200101518152602001826000015115158152602001826020015160ff16815260200182604001516001600160601b031681525083838151811061198457611984613dc5565b602002602001018190525050808061199b90613df1565b915050611878565b6060816000816001600160401b038111156119c0576119c061360a565b6040519080825280602002602001820160405280156119f957816020015b6119e661317f565b8152602001906001900390816119de5790505b50905060005b8281101561149457611a31868683818110611a1c57611a1c613dc5565b9050602002016020810190610147919061338b565b828281518110611a4357611a43613dc5565b60200260200101819052508080611a5990613df1565b9150506119ff565b60606000826001600160401b03811115611a7d57611a7d61360a565b604051908082528060200260200182016040528015611ac257816020015b6040805180820190915260008082526020820152815260200190600190039081611a9b5790505b50905060005b83811015611bf3576040518060400160405280868684818110611aed57611aed613dc5565b9050602002016020810190611b029190613f72565b63ffffffff168152602001886001600160a01b031663782d6fe189898987818110611b2f57611b2f613dc5565b9050602002016020810190611b449190613f72565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015263ffffffff166024820152604401602060405180830381865afa158015611b93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb79190613eec565b6001600160601b0316815250828281518110611bd557611bd5613dc5565b60200260200101819052508080611beb90613df1565b915050611ac8565b5095945050505050565b604051637bca031760e11b81526001600160a01b0387811660048301526000919083169063f794062e90602401602060405180830381865afa158015611c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6b9190613e8e565b8015611cdc5750604051637bca031760e11b81526001600160a01b03878116600483015283169063f794062e90602401602060405180830381865afa158015611cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cdc9190613e8e565b611d1c5760405162461bcd60e51b815260206004820152601160248201527013505492d15517d393d517d31254d51151607a1b6044820152606401610eea565b6040516395dd919360e01b81526001600160a01b038581166004830152600091908916906395dd919390602401602060405180830381865afa158015611d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8a9190613e0c565b9050611d96888461149f565b15611de15783811015611ddc5760405162461bcd60e51b815260206004820152600e60248201526d746f6f206d75636820726570617960901b6044820152606401610eea565b611f73565b604051634e79238f60e01b81526001600160a01b0386811660048301528981166024830152600060448301819052606483018190529190851690634e79238f90608401606060405180830381865afa158015611e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e659190613f98565b9250505060008111611eb25760405162461bcd60e51b81526020600482015260166024820152751a5b9cdd59999a58da595b9d081cda1bdc9d19985b1b60521b6044820152606401610eea565b6000611f2d836040518060200160405280886001600160a01b031663e87554466040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f259190613e0c565b905290612d6a565b905080861115611f705760405162461bcd60e51b815260206004820152600e60248201526d746f6f206d75636820726570617960901b6044820152606401610eea565b50505b506000979650505050505050565b60606000826001600160401b03811115611f9d57611f9d61360a565b60405190808252806020026020018201604052801561204d57816020015b61203a604051806101c001604052806000815260200160006001600160a01b03168152602001600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b815260200190600190039081611fbb5790505b50905060005b838110156121d957600080600080896001600160a01b031663328dd9828a8a8881811061208257612082613dc5565b905060200201356040518263ffffffff1660e01b81526004016120a791815260200190565b600060405180830381865afa1580156120c4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526120ec919081019061410c565b9350935093509350604051806101c001604052806000815260200160006001600160a01b031681526020016000815260200185815260200184815260200183815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525086868151811061217b5761217b613dc5565b60200260200101819052506121c286868151811061219b5761219b613dc5565b60200260200101518b8b8b898181106121b6576121b6613dc5565b90506020020135612df5565b5050505080806121d190613df1565b915050612053565b50949350505050565b61220660405180606001604052806060815260200160008152602001600081525090565b604051635ec88c7960e01b81526001600160a01b0383811660048301526000918291829190871690635ec88c7990602401606060405180830381865afa158015612254573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122789190613f98565b9250925092508260001461228b57600080fd5b604080516060810191829052632aff3bff60e21b9091526001600160a01b0386811660648301528190881663abfceffc60848301600060405180830381865afa1580156122dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612304919081019061420d565b81526020810193909352604090920152949350505050565b60606000826001600160401b038111156123385761233861360a565b6040519080825280602002602001820160405280156123e157816020015b6123ce604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b8152602001906001900390816123565790505b50905060005b838110156121d957600080600080896001600160a01b031663328dd9828a8a8881811061241657612416613dc5565b905060200201356040518263ffffffff1660e01b815260040161243b91815260200190565b600060405180830381865afa158015612458573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612480919081019061410c565b9350935093509350604051806101a001604052806000815260200160006001600160a01b0316815260200160008152602001858152602001848152602001838152602001828152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525086868151811061250857612508613dc5565b602002602001018190525061254f86868151811061252857612528613dc5565b60200260200101518b8b8b8981811061254357612543613dc5565b90506020020135612ee0565b50505050808061255e90613df1565b9150506123e7565b80516060906000816001600160401b038111156125855761258561360a565b6040519080825280602002602001820160405280156125d757816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816125a35790505b50905060005b82811015610456576040805160608101825260008082526020820181905291810191909152876001600160a01b031663e23a9a5287848151811061262357612623613dc5565b6020026020010151896040518363ffffffff1660e01b815260040161265b9291909182526001600160a01b0316602082015260400190565b606060405180830381865afa158015612678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269c9190614241565b6001600160601b031660408085019190915290151560208401529015158252805160808101909152865181908890859081106126da576126da613dc5565b6020026020010151815260200182600001511515815260200182602001511515815260200182604001516001600160601b031681525083838151811061272257612722613dc5565b602002602001018190525050808061273990613df1565b9150506125dd565b61274961312d565b6040516370a0823160e01b81526001600160a01b038381166004830152600091908516906370a0823190602401602060405180830381865afa158015612793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b79190613e0c565b6040516305eff7ef60e21b81526001600160a01b0385811660048301529192506000918616906317bfdfbc906024016020604051808303816000875af1158015612805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128299190613e0c565b604051633af9e66960e01b81526001600160a01b038681166004830152919250600091871690633af9e669906024016020604051808303816000875af1158015612877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061289b9190613e0c565b9050600080876001600160a01b031663ac784ddc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156128de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129029190613e8e565b1561291c5750506001600160a01b03851680319031612a68565b6000886001600160a01b0316636f307dc36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561295c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129809190613e35565b6040516370a0823160e01b81526001600160a01b038a81166004830152919250908216906370a0823190602401602060405180830381865afa1580156129ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ee9190613e0c565b604051636eb1769f60e11b81526001600160a01b038a811660048301528b811660248301529194509082169063dd62ed3e90604401602060405180830381865afa158015612a40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a649190613e0c565b9150505b604051806101000160405280896001600160a01b03168152602001896001600160a01b031663fe9c44ae6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ae59190613e8e565b15158152602001896001600160a01b031663ac784ddc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b4e9190613e8e565b15158152602001868152602001858152602001848152602001838152602001828152509550505050505092915050565b60408051808201909152600080825260208201526000826001600160a01b0316635fe3b5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf69190613e35565b90506000816001600160a01b0316637dc0d1d06040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c5c9190613e35565b6040805180820182526001600160a01b03808816808352925163fc57d4df60e01b815260048101939093529293509160208301919084169063fc57d4df90602401602060405180830381865afa158015612cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cde9190613e0c565b9052949350505050565b6040805160208101909152600081526040518060200160405280670de0b6b3a7640000612d1d86600001518660000151612ff9565b612d279190614284565b90529392505050565b6040805160208101909152600081526040518060200160405280612d27612d638660000151670de0b6b3a7640000612ff9565b855161303b565b600080612d77848461306e565b9050612d8281613096565b949350505050565b600080612d9784866142a6565b905082858210156121d95760405162461bcd60e51b8152600401610eea91906142be565b60008184841115612ddf5760405162461bcd60e51b8152600401610eea91906142be565b506000612dec84866142d1565b95945050505050565b60405163013cf08b60e01b8152600481018290526000906001600160a01b0384169063013cf08b9060240161014060405180830381865afa158015612e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e6291906142e8565b918452506020808201516001600160a01b03169084015260408082015190840152606081015160e08085019190915260808201516101008086019190915260a08301516101208087019190915260c0840151610140870152918301516101608601528201511515610180850152015115156101a09092019190915250565b600080600080600080600080896001600160a01b031663013cf08b8a6040518263ffffffff1660e01b8152600401612f1a91815260200190565b61012060405180830381865afa158015612f38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5c919061437f565b9850985098509850985098509850985050888b6000018181525050878b602001906001600160a01b031690816001600160a01b031681525050868b6040018181525050858b60e0018181525050848b610100018181525050838b610120018181525050828b610140018181525050818b610160019015159081151581525050808b6101800190151590811515815250505050505050505050505050565b600061045b83836040518060400160405280601781526020017f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000008152506130ae565b600061045b83836040518060400160405280600e81526020016d646976696465206279207a65726f60901b815250613101565b6040805160208101909152600081526040518060200160405280612d27856000015185612ff9565b805160009061149990670de0b6b3a764000090614284565b60008315806130bb575082155b156130c85750600061045b565b60006130d48486614401565b9050836130e18683614284565b1483906121d95760405162461bcd60e51b8152600401610eea91906142be565b600081836131225760405162461bcd60e51b8152600401610eea91906142be565b50612d828385614284565b60405180610100016040528060006001600160a01b0316815260200160001515815260200160001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b60405180610260016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000151581526020016000151581526020016000815260200160008152602001600081525090565b60008083601f84011261323b57600080fd5b5081356001600160401b0381111561325257600080fd5b6020830191508360208260051b850101111561326d57600080fd5b9250929050565b6001600160a01b038116811461328957600080fd5b50565b6000806000604084860312156132a157600080fd5b83356001600160401b038111156132b757600080fd5b6132c386828701613229565b90945092505060208401356132d781613274565b809150509250925092565b60018060a01b038151168252602081015115156020830152604081015115156040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301525050565b6020808252825182820181905260009190848201906040850190845b8181101561337f5761336b8385516132e2565b928401926101009290920191600101613358565b50909695505050505050565b60006020828403121561339d57600080fd5b813561045b81613274565b80516001600160a01b031682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e08301526101008082015181840152506101208082015161341b8285018215159052565b50506101408181015190830152610160808201516001600160a01b03169083015261018080820151908301526101a080820151908301526101c0808201511515908301526101e0808201511515908301526102008082015190830152610220808201519083015261024090810151910152565b610260810161149982846133a8565b600080600080608085870312156134b357600080fd5b84356134be81613274565b935060208501356134ce81613274565b92506040850135915060608501356134e581613274565b939692955090935050565b60008060006060848603121561350557600080fd5b833561351081613274565b9250602084013561352081613274565b915060408401356132d781613274565b6000806020838503121561354357600080fd5b82356001600160401b0381111561355957600080fd5b61356585828601613229565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b828110156135c4576135b484835180516001600160a01b03168252602090810151910152565b928401929085019060010161358e565b5091979650505050505050565b600080604083850312156135e457600080fd5b82356135ef81613274565b915060208301356135ff81613274565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156136435761364361360a565b60405290565b604051601f8201601f191681016001600160401b03811182821017156136715761367161360a565b604052919050565b60006001600160401b038211156136925761369261360a565b5060051b60200190565b600082601f8301126136ad57600080fd5b813560206136c26136bd83613679565b613649565b82815260059290921b840181019181810190868411156136e157600080fd5b8286015b848110156136fc57803583529183019183016136e5565b509695505050505050565b60008060006060848603121561371c57600080fd5b833561372781613274565b9250602084013561373781613274565b915060408401356001600160401b0381111561375257600080fd5b61375e8682870161369c565b9150509250925092565b602080825282518282018190526000919060409081850190868401855b828110156135c457815180518552868101511515878601528581015160ff16868601526060908101516001600160601b03169085015260809093019290850190600101613785565b6020808252825182820181905260009190848201906040850190845b8181101561337f576137fc8385516133a8565b9284019261026092909201916001016137e9565b6000806000806060858703121561382657600080fd5b843561383181613274565b9350602085013561384181613274565b925060408501356001600160401b0381111561385c57600080fd5b61386887828801613229565b95989497509550505050565b602080825282518282018190526000919060409081850190868401855b828110156135c457815180518552860151868501529284019290850190600101613891565b60008060008060008060c087890312156138cf57600080fd5b86356138da81613274565b955060208701356138ea81613274565b945060408701356138fa81613274565b9350606087013561390a81613274565b92506080870135915060a087013561392181613274565b809150509295509295509295565b60008060006040848603121561394457600080fd5b833561394f81613274565b925060208401356001600160401b0381111561396a57600080fd5b61397686828701613229565b9497909650939450505050565b600081518084526020808501945080840160005b838110156139bc5781516001600160a01b031687529582019590820190600101613997565b509495945050505050565b600081518084526020808501945080840160005b838110156139bc578151875295820195908201906001016139db565b60005b83811015613a125781810151838201526020016139fa565b83811115613a21576000848401525b50505050565b60008151808452613a3f8160208601602086016139f7565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b858110156135c4578284038952613a89848351613a27565b98850198935090840190600101613a71565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613bc757888303603f19018552815180518452878101516001600160a01b038116898601526101c0905087820151888601526060808301518282880152613b0f83880182613983565b9250505060808083015186830382880152613b2a83826139c7565b9250505060a08083015186830382880152613b458382613a53565b9250505060c08083015186830382880152613b608382613a53565b60e085810151908901526101008086015190890152610120808601519089015261014080860151908901526101608086015190890152610180808601511515908901526101a094850151151594909701939093525050509386019390860190600101613ac2565b509098975050505050505050565b602081526000825160606020840152613bf16080840182613983565b905060208401516040840152604084015160608401528091505092915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015613bc757888303603f19018552815180518452878101516001600160a01b038116898601526101a0905087820151888601526060808301518282880152613c8583880182613983565b9250505060808083015186830382880152613ca083826139c7565b9250505060a08083015186830382880152613cbb8382613a53565b9250505060c08083015186830382880152613cd68382613a53565b60e085810151908901526101008086015190890152610120808601519089015261014080860151908901526101608086015115159089015261018094850151151594909701939093525050509386019390860190600101613c38565b602080825282518282018190526000919060409081850190868401855b828110156135c45781518051855286810151151587860152858101511515868601526060908101516001600160601b03169085015260809093019290850190600101613d4f565b610100810161149982846132e2565b81516001600160a01b031681526020808301519082015260408101611499565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415613e0557613e05613ddb565b5060010190565b600060208284031215613e1e57600080fd5b5051919050565b8051613e3081613274565b919050565b600060208284031215613e4757600080fd5b815161045b81613274565b80518015158114613e3057600080fd5b60008060408385031215613e7557600080fd5b613e7e83613e52565b9150602083015190509250929050565b600060208284031215613ea057600080fd5b61045b82613e52565b805160ff81168114613e3057600080fd5b600060208284031215613ecc57600080fd5b61045b82613ea9565b80516001600160601b0381168114613e3057600080fd5b600060208284031215613efe57600080fd5b61045b82613ed5565b600060608284031215613f1957600080fd5b604051606081018181106001600160401b0382111715613f3b57613f3b61360a565b604052613f4783613e52565b8152613f5560208401613ea9565b6020820152613f6660408401613ed5565b60408201529392505050565b600060208284031215613f8457600080fd5b813563ffffffff8116811461045b57600080fd5b600080600060608486031215613fad57600080fd5b8351925060208401519150604084015190509250925092565b600082601f830112613fd757600080fd5b81516020613fe76136bd83613679565b82815260059290921b8401810191818101908684111561400657600080fd5b8286015b848110156136fc57805161401d81613274565b835291830191830161400a565b60006001600160401b038311156140435761404361360a565b614056601f8401601f1916602001613649565b905082815283838301111561406a57600080fd5b61045b8360208301846139f7565b600082601f83011261408957600080fd5b815160206140996136bd83613679565b82815260059290921b840181019181810190868411156140b857600080fd5b8286015b848110156136fc5780516001600160401b038111156140db5760008081fd5b8701603f810189136140ed5760008081fd5b6140fe89868301516040840161402a565b8452509183019183016140bc565b6000806000806080858703121561412257600080fd5b84516001600160401b038082111561413957600080fd5b61414588838901613fc6565b955060209150818701518181111561415c57600080fd5b8701601f8101891361416d57600080fd5b805161417b6136bd82613679565b81815260059190911b8201840190848101908b83111561419a57600080fd5b928501925b828410156141b85783518252928501929085019061419f565b60408b01519098509450505050808211156141d257600080fd5b6141de88838901614078565b935060608701519150808211156141f457600080fd5b5061420187828801614078565b91505092959194509250565b60006020828403121561421f57600080fd5b81516001600160401b0381111561423557600080fd5b612d8284828501613fc6565b60008060006060848603121561425657600080fd5b61425f84613e52565b925061426d60208501613e52565b915061427b60408501613ed5565b90509250925092565b6000826142a157634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156142b9576142b9613ddb565b500190565b60208152600061045b6020830184613a27565b6000828210156142e3576142e3613ddb565b500390565b600061014082840312156142fb57600080fd5b614303613620565b8251815261431360208401613e25565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e0820152610100614362818501613e52565b90820152610120614374848201613e52565b908201529392505050565b60008060008060008060008060006101208a8c03121561439e57600080fd5b8951985060208a01516143b081613274565b8098505060408a0151965060608a0151955060808a0151945060a08a0151935060c08a015192506143e360e08b01613e52565b91506143f26101008b01613e52565b90509295985092959850929598565b600081600019048311821515161561441b5761441b613ddb565b50029056fea2646970667358221220eaeda6f911637030036e70464558bbe9fae474b1b28659a60a9d22289394b0b264736f6c634300080b0033";

export class CompoundLens__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundLens> {
    return super.deploy(overrides || {}) as Promise<CompoundLens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompoundLens {
    return super.attach(address) as CompoundLens;
  }
  connect(signer: Signer): CompoundLens__factory {
    return super.connect(signer) as CompoundLens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundLensInterface {
    return new utils.Interface(_abi) as CompoundLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundLens {
    return new Contract(address, _abi, signerOrProvider) as CompoundLens;
  }
}
