/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundLens, CompoundLensInterface } from "../CompoundLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalancesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenMetadataAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "collateralFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenUnderlyingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenUnderlyingPriceAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountLimits",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "markets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortfall",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.AccountLimits",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadataExt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocated",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadataExt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "blockNumbers",
        type: "uint32[]",
      },
    ],
    name: "getCompVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "abstainVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovBravoProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "support",
            type: "uint8",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovBravoReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "isDeprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateBorrowAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "actualRepayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateCalculateSeizeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506142f8806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634b70d84b116100a25780637dd8f6d9116100715780637dd8f6d91461029a57806396994869146102ba578063995ed99f146102da578063bdf950c9146102fa578063c5ae59341461031a5761010b565b80634b70d84b1461021a578063595642191461023a5780636dabf94f1461025a57806375d80e901461027a5761010b565b80632b2d5ed6116100de5780632b2d5ed61461019a5780633394fba5146101ba578063416405d7146101da57806343c811cc146101fa5761010b565b80630972bf8b14610110578063158eca8b146101395780631bd886b0146101595780631ea637411461017a575b600080fd5b61012361011e366004613550565b61033a565b6040516101309190613c30565b60405180910390f35b61014c61014736600461362b565b6103f2565b6040516101309190614191565b61016c610167366004613358565b610b49565b60405161013092919061422c565b61018d6101883660046136a9565b610e6e565b60405161013091906141ae565b6101ad6101a8366004613511565b6111f5565b6040516101309190613cc1565b6101cd6101c83660046133aa565b6112a6565b6040516101309190614081565b6101ed6101e83660046133aa565b6114a5565b60405161013091906141e2565b61020d6102083660046136e8565b61164e565b6040516101309190613e8a565b61022d610228366004613511565b6117b6565b6040516101309190613c7e565b61024d610248366004613647565b61185c565b6040516101309190613d01565b61026d6102683660046132e0565b6119c8565b604051610130919061420c565b61028d610288366004613747565b611d01565b6040516101309190613d43565b6102ad6102a83660046133aa565b611ed8565b6040516101309190614147565b6102cd6102c8366004613747565b612014565b6040516101309190613eef565b6102ed6102e83660046136e8565b6121db565b604051610130919061401d565b61030d6103083660046133aa565b612367565b6040516101309190614183565b61032d61032836600461362b565b612736565b60405161013091906141a0565b6060826000816001600160401b038111801561035557600080fd5b5060405190808252806020026020018201604052801561038f57816020015b61037c612d94565b8152602001906001900390816103745790505b50905060005b828110156103e6576103c78787838181106103ac57fe5b90506020020160208101906103c1919061362b565b86612367565b8282815181106103d357fe5b6020908102919091010152600101610395565b509150505b9392505050565b6103fa612dd3565b6000826001600160a01b031663bd6d894d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561043757600080fd5b505af115801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190613897565b90506000836001600160a01b0316635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156104ac57600080fd5b505afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e491906132c4565b9050600080826001600160a01b0316638e8f294b876040518263ffffffff1660e01b81526004016105159190613bba565b604080518083038186803b15801561052c57600080fd5b505afa158015610540573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105649190613600565b91509150600080876001600160a01b031663ac784ddc6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a457600080fd5b505afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc91906135a4565b156105ed5750600090506012610747565b876001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561062657600080fd5b505afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906132c4565b9150876001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561069957600080fd5b505afa1580156106ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d191906132c4565b6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561070957600080fd5b505afa15801561071d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107419190613981565b60ff1690505b604051806101c00160405280896001600160a01b03168152602001878152602001896001600160a01b031663ae9d70b06040518163ffffffff1660e01b815260040160206040518083038186803b1580156107a157600080fd5b505afa1580156107b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d99190613897565b8152602001896001600160a01b031663f8f9da286040518163ffffffff1660e01b815260040160206040518083038186803b15801561081757600080fd5b505afa15801561082b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084f9190613897565b8152602001896001600160a01b031663173b99046040518163ffffffff1660e01b815260040160206040518083038186803b15801561088d57600080fd5b505afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c59190613897565b8152602001896001600160a01b03166347bd37186040518163ffffffff1660e01b815260040160206040518083038186803b15801561090357600080fd5b505afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190613897565b8152602001896001600160a01b0316638f840ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561097957600080fd5b505afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190613897565b8152602001896001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109ef57600080fd5b505afa158015610a03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a279190613897565b8152602001896001600160a01b0316633b1d21a26040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6557600080fd5b505afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190613897565b81526020018515158152602001848152602001836001600160a01b03168152602001896001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610af857600080fd5b505afa158015610b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b309190613981565b60ff16815260200191909152955050505050505b919050565b6000806000836001600160a01b0316637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610b8757600080fd5b505afa158015610b9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906132c4565b90506000816001600160a01b031663fc57d4df896040518263ffffffff1660e01b8152600401610bef9190613bba565b60206040518083038186803b158015610c0757600080fd5b505afa158015610c1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3f9190613897565b90506000826001600160a01b031663fc57d4df896040518263ffffffff1660e01b8152600401610c6f9190613bba565b60206040518083038186803b158015610c8757600080fd5b505afa158015610c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbf9190613897565b9050600082118015610cd15750600081115b610cf65760405162461bcd60e51b8152600401610ced9061409f565b60405180910390fd5b6000886001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d3157600080fd5b505afa158015610d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d699190613897565b90506000610d75612e56565b610d7d612e56565b610d85612e56565b610e1b60405180602001604052808981525060405180602001604052808e6001600160a01b0316634ada90af6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ddb57600080fd5b505afa158015610def573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e139190613897565b9052906128c8565b60408051602080820183528882528251908101909252888252919450610e40916128c8565b9150610e4c8383612907565b9050610e58818d612943565b60009f909e509c50505050505050505050505050565b610e76612e69565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190610ea5908690600401613bba565b60206040518083038186803b158015610ebd57600080fd5b505afa158015610ed1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef59190613897565b6040516374d7814960e11b81529091506001600160a01b0385169063e9af029290610f24908690600401613bba565b600060405180830381600087803b158015610f3e57600080fd5b505af1158015610f52573d6000803e3d6000fd5b50506040516370a0823160e01b8152600092506001600160a01b03881691506370a0823190610f85908790600401613bba565b60206040518083038186803b158015610f9d57600080fd5b505afa158015610fb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd59190613897565b90506000856001600160a01b031663cc7ebdc4866040518263ffffffff1660e01b81526004016110059190613bba565b60206040518083038186803b15801561101d57600080fd5b505afa158015611031573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110559190613897565b9050600061108a82846040518060400160405280600e81526020016d1cdd5b4818dbdb5c081d1bdd185b60921b815250612963565b905060006110be82866040518060400160405280600d81526020016c1cdd5888185b1b1bd8d85d1959609a1b81525061298a565b905060405180608001604052808681526020018a6001600160a01b031663b4b5ea578a6040518263ffffffff1660e01b81526004016110fd9190613bba565b60206040518083038186803b15801561111557600080fd5b505afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d919061399b565b6001600160601b031681526020018a6001600160a01b031663587cde1e8a6040518263ffffffff1660e01b81526004016111879190613bba565b60206040518083038186803b15801561119f57600080fd5b505afa1580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d791906132c4565b6001600160a01b031681526020019190915298975050505050505050565b6060816000816001600160401b038111801561121057600080fd5b5060405190808252806020026020018201604052801561124a57816020015b611237612e9a565b81526020019060019003908161122f5790505b50905060005b8281101561129b5761127c86868381811061126757fe5b9050602002016020810190610328919061362b565b82828151811061128857fe5b6020908102919091010152600101611250565b509150505b92915050565b6040516302a9bed760e61b81526000906001600160a01b0383169063aa6fb5c0906112d5908690600401613bba565b60206040518083038186803b1580156112ed57600080fd5b505afa158015611301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113259190613981565b60ff1615801561141c5750816001600160a01b0316632408d5f06040518163ffffffff1660e01b815260040160206040518083038186803b15801561136957600080fd5b505afa15801561137d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a191906132c4565b6001600160a01b031663715cfdd9846040518263ffffffff1660e01b81526004016113cc9190613bba565b60206040518083038186803b1580156113e457600080fd5b505afa1580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c91906135a4565b80156103eb5750826001600160a01b031663173b99046040518163ffffffff1660e01b815260040160206040518083038186803b15801561145c57600080fd5b505afa158015611470573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114949190613897565b670de0b6b3a7640000149392505050565b6114ad612eb1565b6040805160608101918290526370a0823160e01b909152806001600160a01b0385166370a082316114e18660648501613bba565b60206040518083038186803b1580156114f957600080fd5b505afa15801561150d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115319190613897565b8152602001846001600160a01b031663b4b5ea57856040518263ffffffff1660e01b81526004016115629190613bba565b60206040518083038186803b15801561157a57600080fd5b505afa15801561158e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b2919061399b565b6001600160601b03168152602001846001600160a01b031663587cde1e856040518263ffffffff1660e01b81526004016115ec9190613bba565b60206040518083038186803b15801561160457600080fd5b505afa158015611618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163c91906132c4565b6001600160a01b031690529392505050565b80516060906000816001600160401b038111801561166b57600080fd5b506040519080825280602002602001820160405280156116a557816020015b611692612edb565b81526020019060019003908161168a5790505b50905060005b828110156103e6576000876001600160a01b031663e23a9a528784815181106116d057fe5b6020026020010151896040518363ffffffff1660e01b81526004016116f6929190614215565b60606040518083038186803b15801561170e57600080fd5b505afa158015611722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117469190613833565b9050604051806080016040528087848151811061175f57fe5b60200260200101518152602001826000015115158152602001826020015160ff16815260200182604001516001600160601b03168152508383815181106117a257fe5b6020908102919091010152506001016116ab565b6060816000816001600160401b03811180156117d157600080fd5b5060405190808252806020026020018201604052801561180b57816020015b6117f8612dd3565b8152602001906001900390816117f05790505b50905060005b8281101561129b5761183d86868381811061182857fe5b9050602002016020810190610147919061362b565b82828151811061184957fe5b6020908102919091010152600101611811565b60606000826001600160401b038111801561187657600080fd5b506040519080825280602002602001820160405280156118b057816020015b61189d612f02565b8152602001906001900390816118955790505b50905060005b838110156119be5760405180604001604052808686848181106118d557fe5b90506020020160208101906118ea919061395d565b63ffffffff168152602001886001600160a01b031663782d6fe18989898781811061191157fe5b9050602002016020810190611926919061395d565b6040518363ffffffff1660e01b8152600401611943929190613c11565b60206040518083038186803b15801561195b57600080fd5b505afa15801561196f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611993919061399b565b6001600160601b03168152508282815181106119ab57fe5b60209081029190910101526001016118b6565b5095945050505050565b604051637bca031760e11b81526000906001600160a01b0383169063f794062e906119f7908a90600401613bba565b60206040518083038186803b158015611a0f57600080fd5b505afa158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4791906135a4565b8015611aca5750604051637bca031760e11b81526001600160a01b0383169063f794062e90611a7a908990600401613bba565b60206040518083038186803b158015611a9257600080fd5b505afa158015611aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aca91906135a4565b611ae65760405162461bcd60e51b8152600401610ced9061411c565b6040516395dd919360e01b81526000906001600160a01b038916906395dd919390611b15908890600401613bba565b60206040518083038186803b158015611b2d57600080fd5b505afa158015611b41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b659190613897565b9050611b7188846112a6565b15611b9b5783811015611b965760405162461bcd60e51b8152600401610ced906140f4565b611cf3565b604051634e79238f60e01b81526000906001600160a01b03851690634e79238f90611bd09089908d9086908190600401613be8565b60606040518083038186803b158015611be857600080fd5b505afa158015611bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c209190613930565b9250505060008111611c445760405162461bcd60e51b8152600401610ced906140c4565b6000611cce836040518060200160405280886001600160a01b031663e87554466040518163ffffffff1660e01b815260040160206040518083038186803b158015611c8e57600080fd5b505afa158015611ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc69190613897565b905290612943565b905080861115611cf05760405162461bcd60e51b8152600401610ced906140f4565b50505b506000979650505050505050565b60606000826001600160401b0381118015611d1b57600080fd5b50604051908082528060200260200182016040528015611d5557816020015b611d42612f1c565b815260200190600190039081611d3a5790505b50905060005b83811015611ecf57600080600080896001600160a01b031663328dd9828a8a88818110611d8457fe5b905060200201356040518263ffffffff1660e01b8152600401611da7919061420c565b60006040518083038186803b158015611dbf57600080fd5b505afa158015611dd3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611dfb9190810190613414565b9350935093509350604051806101c001604052806000815260200160006001600160a01b0316815260200160008152602001858152602001848152602001838152602001828152602001600081526020016000815260200160008152602001600081526020016000815260200160001515815260200160001515815250868681518110611e8457fe5b6020026020010181905250611ebf868681518110611e9e57fe5b60200260200101518b8b8b89818110611eb357fe5b905060200201356129b6565b505060019092019150611d5b9050565b50949350505050565b611ee0612f98565b6000806000856001600160a01b0316635ec88c79866040518263ffffffff1660e01b8152600401611f119190613bba565b60606040518083038186803b158015611f2957600080fd5b505afa158015611f3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f619190613930565b92509250925082600014611f7457600080fd5b604080516060810191829052632aff3bff60e21b909152806001600160a01b03881663abfceffc611fa88960648501613bba565b60006040518083038186803b158015611fc057600080fd5b505afa158015611fd4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611ffc91908101906133e2565b81526020810193909352604090920152949350505050565b60606000826001600160401b038111801561202e57600080fd5b5060405190808252806020026020018201604052801561206857816020015b612055612fb9565b81526020019060019003908161204d5790505b50905060005b83811015611ecf57600080600080896001600160a01b031663328dd9828a8a8881811061209757fe5b905060200201356040518263ffffffff1660e01b81526004016120ba919061420c565b60006040518083038186803b1580156120d257600080fd5b505afa1580156120e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261210e9190810190613414565b9350935093509350604051806101a001604052806000815260200160006001600160a01b0316815260200160008152602001858152602001848152602001838152602001828152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525086868151811061219057fe5b60200260200101819052506121cb8686815181106121aa57fe5b60200260200101518b8b8b898181106121bf57fe5b90506020020135612ab4565b50506001909201915061206e9050565b80516060906000816001600160401b03811180156121f857600080fd5b5060405190808252806020026020018201604052801561223257816020015b61221f612edb565b8152602001906001900390816122175790505b50905060005b828110156103e65761224861302e565b876001600160a01b031663e23a9a5287848151811061226357fe5b6020026020010151896040518363ffffffff1660e01b8152600401612289929190614215565b60606040518083038186803b1580156122a157600080fd5b505afa1580156122b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d991906135be565b6001600160601b0316604080850191909152901515602084015290151582528051608081019091528651819088908590811061231157fe5b6020026020010151815260200182600001511515815260200182602001511515815260200182604001516001600160601b031681525083838151811061235357fe5b602090810291909101015250600101612238565b61236f612d94565b6040516370a0823160e01b81526000906001600160a01b038516906370a082319061239e908690600401613bba565b60206040518083038186803b1580156123b657600080fd5b505afa1580156123ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ee9190613897565b90506000846001600160a01b03166317bfdfbc856040518263ffffffff1660e01b815260040161241e9190613bba565b602060405180830381600087803b15801561243857600080fd5b505af115801561244c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124709190613897565b90506000856001600160a01b0316633af9e669866040518263ffffffff1660e01b81526004016124a09190613bba565b602060405180830381600087803b1580156124ba57600080fd5b505af11580156124ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f29190613897565b9050600080876001600160a01b031663ac784ddc6040518163ffffffff1660e01b815260040160206040518083038186803b15801561253057600080fd5b505afa158015612544573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256891906135a4565b156125825750506001600160a01b038516803190316126f9565b6000886001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b1580156125bd57600080fd5b505afa1580156125d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125f591906132c4565b6040516370a0823160e01b81529091506001600160a01b038216906370a0823190612624908b90600401613bba565b60206040518083038186803b15801561263c57600080fd5b505afa158015612650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126749190613897565b604051636eb1769f60e11b81529093506001600160a01b0382169063dd62ed3e906126a5908b908d90600401613bce565b60206040518083038186803b1580156126bd57600080fd5b505afa1580156126d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f59190613897565b9150505b6040805160c0810182526001600160a01b039990991689526020890195909552938701929092526060860152608085015260a08401525090919050565b61273e612e9a565b6000826001600160a01b0316635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561277957600080fd5b505afa15801561278d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127b191906132c4565b90506000816001600160a01b0316637dc0d1d06040518163ffffffff1660e01b815260040160206040518083038186803b1580156127ee57600080fd5b505afa158015612802573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282691906132c4565b90506040518060400160405280856001600160a01b03168152602001826001600160a01b031663fc57d4df876040518263ffffffff1660e01b815260040161286e9190613bba565b60206040518083038186803b15801561288657600080fd5b505afa15801561289a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128be9190613897565b9052949350505050565b6128d0612e56565b6040518060200160405280670de0b6b3a76400006128f686600001518660000151612bda565b816128fd57fe5b0490529392505050565b61290f612e56565b604051806020016040528061293a6129338660000151670de0b6b3a7640000612bda565b8551612c1c565b90529392505050565b6000806129508484612c4f565b905061295b81612c70565b949350505050565b60008383018285821015611ecf5760405162461bcd60e51b8152600401610ced919061408c565b600081848411156129ae5760405162461bcd60e51b8152600401610ced919061408c565b505050900390565b60405163013cf08b60e01b81526000906001600160a01b0384169063013cf08b906129e590859060040161420c565b6101406040518083038186803b1580156129fe57600080fd5b505afa158015612a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a369190613799565b918452506020808201516001600160a01b03169084015260408082015190840152606081015160e08085019190915260808201516101008086019190915260a08301516101208087019190915260c0840151610140870152918301516101608601528201511515610180850152015115156101a09092019190915250565b600080600080600080600080896001600160a01b031663013cf08b8a6040518263ffffffff1660e01b8152600401612aec919061420c565b6101206040518083038186803b158015612b0557600080fd5b505afa158015612b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b3d91906138af565b9850985098509850985098509850985050888b6000018181525050878b602001906001600160a01b031690816001600160a01b031681525050868b6040018181525050858b60e0018181525050848b610100018181525050838b610120018181525050828b610140018181525050818b610160019015159081151581525050808b6101800190151590811515815250505050505050505050505050565b60006103eb83836040518060400160405280601781526020017f6d756c7469706c69636174696f6e206f766572666c6f77000000000000000000815250612c7f565b60006103eb83836040518060400160405280600e81526020016d646976696465206279207a65726f60901b815250612d32565b612c57612e56565b604051806020016040528061293a856000015185612bda565b51670de0b6b3a7640000900490565b6000831580612c8c575082155b15612c99575060006103eb565b83830283858281612ca657fe5b04148390611ecf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cf7578181015183820152602001612cdf565b50505050905090810190601f168015612d245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60008183612d815760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315612cf7578181015183820152602001612cdf565b50828481612d8b57fe5b04949350505050565b6040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b604051806101c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b6040518060200160405280600081525090565b6040518060800160405280600081526020016000815260200160006001600160a01b03168152602001600081525090565b604080518082019091526000808252602082015290565b6040518060600160405280600081526020016000815260200160006001600160a01b031681525090565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604051806040016040528060008152602001600081525090565b604051806101c001604052806000815260200160006001600160a01b03168152602001600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b60405180606001604052806060815260200160008152602001600081525090565b604051806101a001604052806000815260200160006001600160a01b031681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b604080516060810182526000808252602082018190529181019190915290565b60006001600160401b0383111561306157fe5b613074601f8401601f191660200161423a565b905082815283838301111561308857600080fd5b6103eb83602083018461427a565b8051610b44816142aa565b600082601f8301126130b1578081fd5b815160206130c66130c18361425d565b61423a565b82815281810190858301838502870184018810156130e2578586fd5b855b858110156131095781516130f7816142aa565b845292840192908401906001016130e4565b5090979650505050505050565b600082601f830112613126578081fd5b815160206131366130c18361425d565b82815281810190858301855b85811015613109578151880189603f82011261315c578788fd5b61316d8a878301516040840161304e565b8552509284019290840190600101613142565b60008083601f840112613191578182fd5b5081356001600160401b038111156131a7578182fd5b60208301915083602080830285010111156131c157600080fd5b9250929050565b600082601f8301126131d8578081fd5b815160206131e86130c18361425d565b82815281810190858301855b85811015613109578151880189603f82011261320e578788fd5b61321f8a878301516040840161304e565b85525092840192908401906001016131f4565b600082601f830112613242578081fd5b813560206132526130c18361425d565b828152818101908583018385028701840188101561326e578586fd5b855b8581101561310957813584529284019290840190600101613270565b80518015158114610b4457600080fd5b805160ff81168114610b4457600080fd5b80516001600160601b0381168114610b4457600080fd5b6000602082840312156132d5578081fd5b81516103eb816142aa565b60008060008060008060c087890312156132f8578182fd5b8635613303816142aa565b95506020870135613313816142aa565b94506040870135613323816142aa565b93506060870135613333816142aa565b92506080870135915060a087013561334a816142aa565b809150509295509295509295565b6000806000806080858703121561336d578182fd5b8435613378816142aa565b93506020850135613388816142aa565b925060408501359150606085013561339f816142aa565b939692955090935050565b600080604083850312156133bc578182fd5b82356133c7816142aa565b915060208301356133d7816142aa565b809150509250929050565b6000602082840312156133f3578081fd5b81516001600160401b03811115613408578182fd5b61295b848285016130a1565b60008060008060808587031215613429578182fd5b84516001600160401b038082111561343f578384fd5b61344b888389016130a1565b9550602091508187015181811115613461578485fd5b8701601f81018913613471578485fd5b805161347f6130c18261425d565b81815284810190838601868402850187018d101561349b578889fd5b8894505b838510156134bd57805183526001949094019391860191860161349f565b5060408b01519098509450505050808211156134d7578384fd5b6134e3888389016131c8565b935060608701519150808211156134f8578283fd5b5061350587828801613116565b91505092959194509250565b60008060208385031215613523578182fd5b82356001600160401b03811115613538578283fd5b61354485828601613180565b90969095509350505050565b600080600060408486031215613564578081fd5b83356001600160401b03811115613579578182fd5b61358586828701613180565b9094509250506020840135613599816142aa565b809150509250925092565b6000602082840312156135b5578081fd5b6103eb8261328c565b6000806000606084860312156135d2578081fd5b6135db8461328c565b92506135e96020850161328c565b91506135f7604085016132ad565b90509250925092565b60008060408385031215613612578182fd5b61361b8361328c565b9150602083015190509250929050565b60006020828403121561363c578081fd5b81356103eb816142aa565b6000806000806060858703121561365c578182fd5b8435613667816142aa565b93506020850135613677816142aa565b925060408501356001600160401b03811115613691578283fd5b61369d87828801613180565b95989497509550505050565b6000806000606084860312156136bd578081fd5b83356136c8816142aa565b925060208401356136d8816142aa565b91506040840135613599816142aa565b6000806000606084860312156136fc578081fd5b8335613707816142aa565b92506020840135613717816142aa565b915060408401356001600160401b03811115613731578182fd5b61373d86828701613232565b9150509250925092565b60008060006040848603121561375b578081fd5b8335613766816142aa565b925060208401356001600160401b03811115613780578182fd5b61378c86828701613180565b9497909650939450505050565b60006101408083850312156137ac578182fd5b6137b58161423a565b9050825181526137c760208401613096565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e082015261010061381681850161328c565b9082015261012061382884820161328c565b908201529392505050565b600060608284031215613844578081fd5b604051606081018181106001600160401b038211171561386057fe5b60405261386c8361328c565b815261387a6020840161329c565b602082015261388b604084016132ad565b60408201529392505050565b6000602082840312156138a8578081fd5b5051919050565b60008060008060008060008060006101208a8c0312156138cd578687fd5b8951985060208a01516138df816142aa565b8098505060408a0151965060608a0151955060808a0151945060a08a0151935060c08a0151925061391260e08b0161328c565b91506139216101008b0161328c565b90509295985092959850929598565b600080600060608486031215613944578081fd5b8351925060208401519150604084015190509250925092565b60006020828403121561396e578081fd5b813563ffffffff811681146103eb578182fd5b600060208284031215613992578081fd5b6103eb8261329c565b6000602082840312156139ac578081fd5b6103eb826132ad565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156139fa5781516001600160a01b0316875295820195908201906001016139d5565b509495945050505050565b6000815180845260208085018081965082840281019150828601855b85811015613a4b578284038952613a39848351613a8d565b98850198935090840190600101613a21565b5091979650505050505050565b6000815180845260208085019450808401835b838110156139fa57815187529582019590820190600101613a6b565b15159052565b60008151808452613aa581602086016020860161427a565b601f01601f19169290920160200192915050565b80516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a090810151910152565b613b048282516139b5565b6020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015160a083015260c081015160c083015260e081015160e083015261010080820151818401525061012080820151613b6982850182613a87565b5050610140818101519083015261016080820151613b89828501826139b5565b505061018081810151908301526101a090810151910152565b80516001600160a01b03168252602090810151910152565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b0392909216825263ffffffff16602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015613c7257613c5f838551613ab9565b9284019260c09290920191600101613c4c565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015613c7257613cad838551613af9565b928401926101c09290920191600101613c9a565b602080825282518282018190526000919060409081850190868401855b82811015613a4b57613cf1848351613ba2565b9284019290850190600101613cde565b602080825282518282018190526000919060409081850190868401855b82811015613a4b57815180518552860151868501529284019290850190600101613d1e565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015613e7c57603f1989840301855281516101c08151855288820151613d918a8701826139b5565b5087820151888601526060808301518282880152613db1838801826139c2565b9250505060808083015186830382880152613dcc8382613a58565b9250505060a08083015186830382880152613de78382613a05565b9250505060c08083015186830382880152613e028382613a05565b60e0858101519089015261010080860151908901526101208086015190890152610140808601519089015261016080860151908901526101808086015191945092509050613e5282880182613a87565b50506101a09182015191613e6886820184613a87565b509588019593505090860190600101613d67565b509098975050505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613a4b57815180518552868101511515878601528581015160ff16868601526060908101516001600160601b03169085015260809093019290850190600101613ea7565b60208082528251828201819052600091906040908185019080840286018301878501865b83811015613e7c57603f1989840301855281516101a08151855288820151613f3d8a8701826139b5565b5087820151888601526060808301518282880152613f5d838801826139c2565b9250505060808083015186830382880152613f788382613a58565b9250505060a08083015186830382880152613f938382613a05565b9250505060c08083015186830382880152613fae8382613a05565b60e085810151908901526101008086015190890152610120808601519089015261014080860151908901526101608086015191945092509050613ff382880182613a87565b5050610180918201519161400986820184613a87565b509588019593505090860190600101613f13565b602080825282518282018190526000919060409081850190868401855b82811015613a4b5781518051855286810151151587860152858101511515868601526060908101516001600160601b0316908501526080909301929085019060010161403a565b901515815260200190565b6000602082526103eb6020830184613a8d565b6020808252600b908201526a282924a1a2afa2a92927a960a91b604082015260600190565b6020808252601690820152751a5b9cdd59999a58da595b9d081cda1bdc9d19985b1b60521b604082015260600190565b6020808252600e908201526d746f6f206d75636820726570617960901b604082015260600190565b60208082526011908201527013505492d15517d393d517d31254d51151607a1b604082015260600190565b60006020825282516060602084015261416360808401826139c2565b905060208401516040840152604084015160608401528091505092915050565b60c081016112a08284613ab9565b6101c081016112a08284613af9565b604081016112a08284613ba2565b81518152602080830151908201526040808301516001600160a01b0316908201526060918201519181019190915260800190565b81518152602080830151908201526040918201516001600160a01b03169181019190915260600190565b90815260200190565b9182526001600160a01b0316602082015260400190565b918252602082015260400190565b6040518181016001600160401b038111828210171561425557fe5b604052919050565b60006001600160401b0382111561427057fe5b5060209081020190565b60005b8381101561429557818101518382015260200161427d565b838111156142a4576000848401525b50505050565b6001600160a01b03811681146142bf57600080fd5b5056fea2646970667358221220252be1387085ef9c648dd84a0ea33c36dab8dcaa538acaf018bc9a844bbc669264736f6c63430007060033";

export class CompoundLens__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundLens> {
    return super.deploy(overrides || {}) as Promise<CompoundLens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompoundLens {
    return super.attach(address) as CompoundLens;
  }
  connect(signer: Signer): CompoundLens__factory {
    return super.connect(signer) as CompoundLens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundLensInterface {
    return new utils.Interface(_abi) as CompoundLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundLens {
    return new Contract(address, _abi, signerOrProvider) as CompoundLens;
  }
}
