/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CompoundLens, CompoundLensInterface } from "../CompoundLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalancesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "intraRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "discountRate",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenMetadataAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "intraRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "discountRate",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenUnderlyingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenUnderlyingPriceAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountLimits",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "markets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortfall",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.AccountLimits",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadataExt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocated",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadataExt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "blockNumbers",
        type: "uint32[]",
      },
    ],
    name: "getCompVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "abstainVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovBravoProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "support",
            type: "uint8",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovBravoReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "isDeprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateBorrowAllowed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "actualRepayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateCalculateSeizeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657613f9c908161001c8239f35b600080fdfe610240604052600436101561001357600080fd5b6000803560e01c80630972bf8b14612013578063158eca8b14611fe65780631bd886b014611c8f5780631ea637411461191e5780632b2d5ed6146118085780633394fba5146117d1578063416405d71461162457806343c811cc1461140e5780634b70d84b14611303578063595642191461111a5780636dabf94f14610dd057806375d80e901461096b5780637dd8f6d9146107da57806396994869146103b0578063995ed99f1461015a578063bdf950c91461011f5763c5ae5934146100d957600080fd5b3461011c57602036600319011261011c5760406100fc6100f76121a8565b6137ec565b815181516001600160a01b0316815260209182015191810191909152f35bf35b80fd5b503461011c57604036600319011261011c5761010061014d61013f6121a8565b61014761213b565b9061340c565b61011a6040518092612151565b503461011c576060908160031936011261011c576101766121a8565b61017e61213b565b906044356001600160401b0381116103ac5761019e903690600401612402565b908151916101ab836123eb565b936101b960405195866123ca565b838552601f196101c8856123eb565b01865b81811061038f5750506001600160a01b0390921691855b8481106102525787878760405191602080840190808552835180925280604086019401925b8281106102145785850386f35b835180518652808301511515868401526040808201511515908701528701516001600160601b03168786015260809094019392810192600101610207565b61029c9061025e6126a7565b898461026a84886133ba565b5160405163711d4d2960e11b815260048101919091526001600160a01b03909116602482015293849081906044820190565b0381895afa801561038457898a908b92610329575b61032495506020928385019160408601936001600160601b03809316855215158352151585526102e1868a6133ba565b51945115159151151592511692604051946102fb86612309565b855284015260408301528a82015261031382896133ba565b5261031e81886133ba565b5061335b565b6101e2565b50505090918981813d831161037d575b61034381836123ca565b8101031261037957908161035a6103249493612629565b610372604061036b60208501612629565b93016139fc565b91906102b1565b8880fd5b503d610339565b6040513d8b823e3d90fd5b60209061039d9695966139d7565b82828a010152019493946101cb565b8380fd5b503461011c57604036600319011261011c576103ca6121a8565b6024356001600160401b0381116107d6576103e990369060040161210b565b6103f5819392936123eb565b9261040360405194856123ca565b818452601f19610412836123eb565b01855b81811061076c575050845b82811061053c5760408051602080825287518183018190528993600582901b8401810192808b01929185015b8287106104595785850386f35b909192938280600192603f1989820301855287519081518152848060a01b03838301511683820152604082015160408201526104e76104d46104c16104ae606080870151906101a08091880152860190612460565b608080870151908683039087015261249d565b60a0808601519085830390860152612519565b60c0808501519084830390850152612519565b9160e081015160e083015261010080820151908301526101208082015190830152610140808201519083015261016080820151151590830152610180809101511515910152960192019601959291909261044c565b610547818484613380565b604051631946ecc160e11b81529035600482015286816024816001600160a01b0389165afa80156107615787918889918a9361073a575b506040519361058c85612376565b8a85528a60208601528a60408601526060850152608084015260a083015260c08201528660e082015286610100820152866101208201528661014082015286610160820152866101808201526105e282876133ba565b526105ed81866133ba565b506105f881866133ba565b5190610605818585613380565b60405163013cf08b60e01b8152903560048201819052929088610120826024816001600160a01b038c165afa91821561072d57818283849185938695879861069a575b5090610180979695949392916106959b8a5260018060a01b031660208a0152604089015260e08801526101008701526101208601526101408501521515610160840152151591015261335b565b610420565b975050505050505050610120813d61012011610725575b816106bf61012093836123ca565b810103126103795761069593816106db60206101809401612615565b9060408101516060820151608083015160a08401519160c08501519361071061010061070960e08901612629565b9701612629565b979b9798509496939592949193909290610648565b3d91506106b1565b50604051903d90823e3d90fd5b9250505061075a91503d8089833e61075281836123ca565b810190613a10565b913861057e565b6040513d89823e3d90fd5b60209060405161077b81612376565b888152828981830152896040830152606080808401528060808401528060a084015260c08301528960e08301528961010083015289610120830152896101408301528961016083015289610180830152828901015201610415565b8280fd5b503461011c57604036600319011261011c576107f46121a8565b906107fd61213b565b60405161080981612324565b826040606092838152826020820152015260018060a01b038094169360405192635ec88c7960e01b8452168060048401528183602481885afa90811561096057848594869361092b575b50610927578490602460405180988193632aff3bff60e21b835260048301525afa93841561091b5780946108d0575b506108c094506040519361089585612324565b8452602084019283526040840190815260405194859460208652518360208701526080860190612460565b9251604085015251908301520390f35b9093503d8082873e6108e281876123ca565b850194602081870312610917578051916001600160401b03831161011c575094610910916108c09601613971565b9238610882565b5080fd5b604051903d90823e3d90fd5b8480fd5b9194505061094f9150823d8411610959575b61094781836123ca565b810190613956565b9390939138610853565b503d61093d565b6040513d86823e3d90fd5b503461011c57604036600319011261011c576109856121a8565b6024356001600160401b0381116107d6576109a490369060040161210b565b6109b0819392936123eb565b926109be60405194856123ca565b818452601f196109cd836123eb565b01855b818110610d5f575050845b828110610ac95760408051602080825287518183018190528993600582901b8401810192808b01929185015b828710610a145785850386f35b909192938280600192603f1989820301855287519081518152848060a01b0383830151168382015260408201516040820152610a696104d46104c16104ae606080870151906101c08091880152860190612460565b9160e081015160e08301526101008082015190830152610120808201519083015261014080820151908301526101608082015190830152610180808201511515908301526101a08091015115159101529601920196019592919092610a07565b610ad4818484613380565b604051631946ecc160e11b81529035600482015286816024816001600160a01b0389165afa80156107615787918889918a93610d40575b5060405193610b198561235a565b8a85528a60208601528a60408601526060850152608084015260a083015260c08201528660e08201528661010082015286610120820152866101408201528661016082015286610180820152866101a0820152610b7682876133ba565b52610b8181866133ba565b50610b8c81866133ba565b5190610b99818585613380565b60405163013cf08b60e01b81529035600482018190529290610140816024816001600160a01b038b165afa908115610384578991610c4f575b506101206101a091610c4a95845260018060a01b03602082015116602085015260408101516040850152606081015160e0850152608081015161010085015260a08101518285015260c081015161014085015260e081015161016085015261010081015115156101808501520151151591015261335b565b6109db565b9050610140813d61014011610d38575b81610c6d61014093836123ca565b810103126103795760405190816101408101106001600160401b0361014084011117610d2257610c4a9482610d1561012080946101406101a0970160405280518452610cbb60208201612615565b602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610d096101008201612629565b61010085015201612629565b8382015292509450610bd2565b634e487b7160e01b600052604160045260246000fd5b3d9150610c5f565b92505050610d5891503d8089833e61075281836123ca565b9138610b0b565b602090604051610d6e8161235a565b888152828981830152896040830152606080808401528060808401528060a084015260c08301528960e08301528961010083015289610120830152896101408301528961016083015289610180830152896101a08301528289010152016109d0565b503461011c5760c036600319011261011c57610dea6121a8565b90610df361213b565b90610dfc6122c2565b50610e056122d8565b60a4359360843591906001600160a01b038087169190828803610f855760405197637bca031760e11b91828a52898185169384600483015260209a8b60249d8e818b5afa92831561110f579084918c946110d1575b5083611070575b50505015611038576040516395dd919360e01b81529516600486018190529288868b81865afa95861561102d578896610ffa575b5090610ea091613bfa565b15610ebe57505050610eb6929394501015613ddc565b604051908152f35b60405191634e79238f60e01b8352600483015287820152846044820152846064820152606081608481855afa908115610fef578591610fce575b5015610f915784955093600493946040519485809263743aaa2360e11b82525afa928315610960578493610f5b575b50610f4d670de0b6b3a764000091610f569460405190610f46826122ee565b8152613e7a565b51041015613ddc565b610eb6565b92508483813d8311610f8a575b610f7281836123ca565b81010312610f8557915191610f4d610f27565b600080fd5b503d610f68565b60405162461bcd60e51b815260048101869052601681880152751a5b9cdd59999a58da595b9d081cda1bdc9d19985b1b60521b6044820152606490fd5b610fe6915060603d81116109595761094781836123ca565b91505038610ef8565b6040513d87823e3d90fd5b919095508882813d8311611026575b61101381836123ca565b81010312610f8557905194610ea0610e95565b503d611009565b6040513d8a823e3d90fd5b60405162461bcd60e51b8152600481018a90526011818c01527013505492d15517d393d517d31254d51151607a1b6044820152606490fd5b604051928352166004820152905089818c81895afa90811561038457899161109c575b50388281610e61565b90508981813d83116110ca575b6110b381836123ca565b81010312610379576110c490612629565b38611093565b503d6110a9565b8d809295508193503d8311611108575b6110eb81836123ca565b81010312611104576110fd8491612629565b9238610e5a565b8a80fd5b503d6110e1565b6040513d8d823e3d90fd5b503461011c57606036600319011261011c576111346121a8565b9061113d61213b565b91604480356001600160401b0381116103ac5761115e90369060040161210b565b9091611169826123eb565b9561117760405197886123ca565b828752601f19611186846123eb565b01865b8181106112de5750506001600160a01b039081169416855b8381106111ee576040805160208082528a51818301819052818c01938301918b5b8281106111cf5784840385f35b85518051855282015184830152948101946040909301926001016111c2565b63ffffffff8061120761120284888a613380565b613bb9565b169061121761120284888a613380565b60405163782d6fe160e01b8152600481018a90529116602482015260209081818781885afa9081156112d3578a91611288575b50906001600160601b03611283949392604051936112678561233f565b84521690820152611278828b6133ba565b5261031e818a6133ba565b6111a1565b90508181813d83116112cc575b61129f81836123ca565b810103126112c857906001600160601b036112be6112839594936139fc565b919293945061124a565b8980fd5b503d611295565b6040513d8c823e3d90fd5b6020906040516112ed8161233f565b6000815282600081830152828c01015201611189565b503461011c57602080600319360112610917576004356001600160401b0381116107d65761133590369060040161210b565b9061133f826123eb565b9161134d60405193846123ca565b808352601f1961135c826123eb565b01855b8181106113f2575050845b8181106113be575050506040519180830190808452825180925280604085019301945b82811061139a5784840385f35b909192826102e0826113af6001948a516121be565b0196019101949291909461138d565b806113e06113db6113d66113ea9486889b999b613380565b6133a6565b6126c6565b61031382896133ba565b94929461136a565b85906113ff97959761256e565b82828a0101520195939561135f565b503461011c576060908160031936011261011c5761142a6121a8565b61143261213b565b906044356001600160401b0381116103ac57611455909291923690600401612402565b805191611461836123eb565b9361146f60405195866123ca565b838552601f1961147e856123eb565b01865b8181106116075750506001600160a01b0316855b8481106115065787878760405191602080840190808552835180925280604086019401925b8281106114c75785850386f35b8351805186528083015115158684015260408082015160ff16908701528701516001600160601b031687860152608090940193928101926001016114ba565b80888461151661154894886133ba565b5160405163711d4d2960e11b815260048101919091526001600160a01b03909116602482015292839081906044820190565b0381865afa801561102d57889061159b575b611596925061156982876133ba565b519080511515906020916001600160601b03604060ff85850151169301511692604051946102fb86612309565b611495565b50908881813d8311611600575b6115b281836123ca565b810103126115fc5790611596916115f260408051926115d084612324565b6115d981612629565b845260206115e8818301612636565b90850152016139fc565b604082015261155a565b8780fd5b503d6115a8565b6020906116159693966139d7565b82828a01015201949194611481565b503461011c57604036600319011261011c5761163e6121a8565b61164661213b565b9061164f6126a7565b506040516370a0823160e01b81526001600160a01b0392831660048201819052918316939092916020908185602481895afa9485156117c6578395611797575b5060405163b4b5ea5760e01b8152600481018290529082826024818a5afa91821561096057908391859361175f575b50602460405180998193632c3e6f0f60e11b835260048301525afa92831561091b578093611725575b506060955083604080516116fa81612324565b8781526001600160601b03858201941684520193168352604051948552519084015251166040820152f35b9092508186813d8311611758575b61173d81836123ca565b8101031261011c5750611751606095612615565b91386116e7565b503d611733565b8281939294503d8311611790575b61177781836123ca565b810103126103ac5761178983916139fc565b91386116be565b503d61176d565b9094508181813d83116117bf575b6117af81836123ca565b81010312610f855751933861168f565b503d6117a5565b6040513d85823e3d90fd5b503461011c57604036600319011261011c5760206117fe6117f06121a8565b6117f861213b565b90613bfa565b6040519015158152f35b503461011c57602080600319360112610917576004356001600160401b0381116107d65761183a90369060040161210b565b90611844826123eb565b9161185260405193846123ca565b808352601f19611861826123eb565b01855b8181106118f4575050845b8181106118d4575050506040519180830190808452825180925280604085019301945b82811061189f5784840385f35b909192826040826118c56001948a516020809160018060a01b0381511684520151910152565b01960191019492919094611892565b806113e06100f76113d66118ec9486889b999b613380565b94929461186f565b85906040979597516119058161233f565b6000815260008382015282828a01015201959395611864565b503461011c57606036600319011261011c576119386121a8565b61194061213b565b6119486122c2565b916119516139d7565b5060018060a01b038091169360405193826370a0823160e01b9182875216806004870152602091602495838888818c5afa978815610fef578598611c60575b508516803b15610927576040516374d7814960e11b8152600481018490528581898183865af18015611c5557611c27575b50604051918252826004830152838288818c5afa918215610fef578793929185918793611bf5575b506040519889809263331faf7160e21b82528660048301525afa968715610fef578597611bc6575b5060405190611a1f8261233f565b600e82526d1cdd5b4818dbdb5c081d1bdd185b60921b85830152870196878111611bb35790611a5091881015613bca565b611a81604051611a5f8161233f565b600d81526c1cdd5888185b1b1bd8d85d1959609a1b8582015287891115613bca565b868603958611611ba05760405163b4b5ea5760e01b81526004810182905291838382818c5afa928315610fef57908492918694611b66575b50604051809a8193632c3e6f0f60e11b835260048301525afa92831561091b578093611b2c575b50608096506060604051611af381612309565b8781526001600160601b038482019316835285604082019516855201948552604051958652519085015251166040830152516060820152f35b9092508187813d8311611b5f575b611b4481836123ca565b8101031261011c5750611b58608096612615565b9138611ae0565b503d611b3a565b838193949295503d8311611b99575b611b7f81836123ca565b810103126109275790611b9284926139fc565b9238611ab9565b503d611b75565b50634e487b7160e01b8352601160045282fd5b634e487b7160e01b865260116004528386fd5b9096508381813d8311611bee575b611bde81836123ca565b81010312610f8557519538611a11565b503d611bd4565b9450915083813d8311611c20575b611c0d81836123ca565b81010312610f85578387935191386119e9565b503d611c03565b6001600160401b038196929611611c425760405293386119c1565b634e487b7160e01b825260416004528782fd5b6040513d88823e3d90fd5b9097508381813d8311611c88575b611c7881836123ca565b8101031261092757519685611990565b503d611c6e565b503461011c57608036600319011261011c57611ca96121a8565b90611cb261213b565b6001600160a01b039283611cc46122d8565b16604051926307dc0d1d60e41b84526020938481600481865afa908115611c55579087918791611faa575b501690604051938763fc57d4df60e01b918287521660048601528585602481865afa94851561076157908692918896611f72575b50602490604051998a938492835216948560048301525afa958615610fef578596611f43575b5082151580611f3a575b15611f07579083600493926040519485809263182df0f560e01b82525afa928315610fef579084918694611ed5575b509060049186604051611d94816122ee565b5286604051611da2816122ee565b5286604051611db0816122ee565b52604051634ada90af60e01b815292839182905afa908115610fef578591611ea7575b50604095611e4b611e2e670de0b6b3a764000095611e13611e9a96611e83968c5190611dfe826122ee565b81528c5191611e0c836122ee565b8252613e39565b938a5190611e20826122ee565b81528a5191611e0c836122ee565b91878951611e3b816122ee565b5251611e45613ea5565b90613ede565b905190611e7e8851611e5c8161233f565b600e81526d646976696465206279207a65726f60901b88820152831515613bca565b613e19565b855190611e8f826122ee565b815260443590613e7a565b5104908351928352820152f35b90508381813d8311611ece575b611ebe81836123ca565b8101031261092757516040611dd3565b503d611eb4565b8281939295503d8311611f00575b611eed81836123ca565b8101031261092757519183906004611d82565b503d611ee3565b60405162461bcd60e51b815260048101859052600b60248201526a282924a1a2afa2a92927a960a91b6044820152606490fd5b50851515611d53565b9095508381813d8311611f6b575b611f5b81836123ca565b8101031261092757519438611d49565b503d611f51565b838193949297503d8311611fa3575b611f8b81836123ca565b81010312611f9f5751938591906024611d23565b8680fd5b503d611f81565b809250868092503d8311611fdf575b611fc381836123ca565b81010312611fdb57611fd58791612615565b38611cef565b8580fd5b503d611fb9565b503461011c57602036600319011261011c576102e06120066113db6121a8565b61011a60405180926121be565b503461011c57604036600319011261011c576004356001600160401b0381116109175761204490369060040161210b565b919061204e61213b565b612057846123eb565b9361206560405195866123ca565b808552601f19612074826123eb565b01845b8181106120f4575050835b8181106120d4576040805160208082528851818301819052818a0193830191895b8281106120b05784840385f35b90919282610100826120c56001948a51612151565b019601910194929190946120a3565b806113e0846120ea6113d66120ef95878a613380565b61340c565b612082565b6020906120ff6133ce565b82828a01015201612077565b9181601f84011215610f85578235916001600160401b038311610f85576020808501948460051b010111610f8557565b602435906001600160a01b0382168203610f8557565b60e0809160018060a01b038151168452602081015115156020850152604081015115156040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b600435906001600160a01b0382168203610f8557565b60018060a01b038082511683526020820151602084015260408201516040840152606082015160608401526080820151608084015260a082015160a084015260c082015160c084015260e082015160e084015261010080830151908401526101208083015115159084015261014090818301511690830152610160808201519083015261018080820151908301526101a0808201511515908301526101c0808201511515908301526101e080820151908301526102008082015190830152610220808201519083015261024060ff818301511690830152610260808201519083015261028080820151908301526102a080820151908301526102c080910151910152565b604435906001600160a01b0382168203610f8557565b606435906001600160a01b0382168203610f8557565b602081019081106001600160401b03821117610d2257604052565b608081019081106001600160401b03821117610d2257604052565b606081019081106001600160401b03821117610d2257604052565b604081019081106001600160401b03821117610d2257604052565b6101c081019081106001600160401b03821117610d2257604052565b6101a081019081106001600160401b03821117610d2257604052565b6102e081019081106001600160401b03821117610d2257604052565b61010081019081106001600160401b03821117610d2257604052565b90601f801991011681019081106001600160401b03821117610d2257604052565b6001600160401b038111610d225760051b60200190565b81601f82011215610f8557803591612419836123eb565b9261242760405194856123ca565b808452602092838086019260051b820101928311610f85578301905b828210612451575050505090565b81358152908301908301612443565b90815180825260208080930193019160005b828110612480575050505090565b83516001600160a01b031685529381019392810192600101612472565b90815180825260208080930193019160005b8281106124bd575050505090565b8351855293810193928101926001016124af565b60005b8381106124e45750506000910152565b81810151838201526020016124d4565b9060209161250d815180928185528580860191016124d1565b601f01601f1916010190565b90815180825260208092019182818360051b85019501936000915b8483106125445750505050505090565b909192939495848061255e83856001950387528a516124f4565b9801930193019194939290612534565b6040519061257b82612392565b816102c06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c0820152826101e08201528261020082015282610220820152826102408201528261026082015282610280820152826102a08201520152565b51906001600160a01b0382168203610f8557565b51908115158203610f8557565b519060ff82168203610f8557565b909291926001600160401b038111610d22576040519161266e601f8301601f1916602001846123ca565b829482845282820111610f855760206126889301906124d1565b565b9080601f83011215610f855781516126a492602001612644565b90565b604051906126b482612324565b60006040838281528260208201520152565b6126ce61256e565b50604051635fe3b56760e01b81526020816004816001600160a01b0386165afa908115612cbd57600091613321575b506040516302408d5f60e41b8152916020836004816001600160a01b0386165afa928315612cbd576000936132e5575b50604051632b1e137760e21b81526000906020816004816001600160a01b0387165afa9081156132da5782916132a0575b501561315257506000906012905b604051638e8f294b60e01b81526001600160a01b0382811660048301526060908290602490829089165afa908115612cbd5760009182610100526130fa575b5060405163243cdb5560e01b81526101005160ff1660048201526000816024816001600160a01b038b165afa908115612cbd57600091613036575b506127ef6126a7565b608052604051637f4e225760e11b81526020816004816001600160a01b0388165afa908115612cbd57600091612ffc575b5015612fd95780604060609201516080515260a0810151604060805101520151602060805101525b60405163bd6d894d60e01b815260208160048160006001600160a01b0388165af18015612cbd5760006101c052612f9e575b50604051630ae9d70b60e41b81526020816004816001600160a01b0387165afa8015612cbd5760006101e052612f63575b50604051631f1f3b4560e31b81526020816004816001600160a01b0387165afa8015612cbd5760006101a052612f28575b506040516305cee64160e21b8152936020856004816001600160a01b0387165afa948515612cbd57600095612ef4575b506040516308f7a6e360e31b8152916020836004816001600160a01b0388165afa928315612cbd57600093612ec0575b50604051638f840ddd60e01b81526020816004816001600160a01b0389165afa908115612cbd57600091612e8e575b506040516318160ddd60e01b81526020816004816001600160a01b038a165afa908115612cbd57600091612e5c575b50604051631d8e90d160e11b8152916020836004816001600160a01b038b165afa928315612cbd57600093612e28575b5060405163313ce56760e01b8152956020876004816001600160a01b038c165afa968715612cbd57600097612dec575b50604051637f4e225760e11b81529960208b6004816001600160a01b038d165afa9a8b15612cbd5760009b612db0575b50604051632b1e137760e21b81529b60208d6004816001600160a01b038e165afa9c8d15612cbd5760009d612d74575b5060405163a7e9613f60e01b81526001600160a01b038b81166004830152909e8f918291165a92602491602094fa9d8e15612cbd5760009e612d40575b50604051639cc7becf60e01b81526001600160a01b038b811660048301526020908290602490829086165afa8015612cbd57600061016052612d04575b50604051634ada90af60e01b815290602090829060049082906001600160a01b03165afa8015612cbd57600061018052612cc9575b50608051805160a05260408082015160c05260209182015160e0525161020081815263131d060f60e21b909152516004816001600160a01b038d165afa806102205215612cbd5760006101405261022051612c7a575b60ff98612b726040518061012052612392565b60018060a01b031661012051526101c05160206101205101526101e05160406101205101526101a0516060610120510152608061012051015260a061012051015260c061012051015260e061012051015261010061012051015215156101208051015260018060a01b03166101406101205101521661016061012051015261018061012051015215156101a061012051015215156101c06101205101526101e0610120510152610160516102006101205101526101805161022061012051015260ff610100511661024061012051015260a05161026061012051015260e05161028061012051015260c0516102a0610120510152610140516102c06101205101526101205190565b6020983d602011612cb5575b612c938a610200516123ca565b602061020051809b81010312612cae57985161014052612b5f565b6101405180fd5b3d9950612c86565b6040513d6000823e3d90fd5b6020813d602011612cfc575b81612ce2602093836123ca565b81010312612cf557516101805238612b09565b6101805180fd5b3d9150612cd5565b6020813d602011612d38575b81612d1d602093836123ca565b81010312612d315751610160526020612ad4565b6101605180fd5b3d9150612d10565b909d6020823d602011612d6c575b81612d5b602093836123ca565b8101031261011c5750519c38612a97565b3d9150612d4e565b909c6020823d602011612da8575b81612d8f602093836123ca565b8101031261011c5750612da190612629565b9b38612a5a565b3d9150612d82565b909a6020823d602011612de4575b81612dcb602093836123ca565b8101031261011c5750612ddd90612629565b9938612a2a565b3d9150612dbe565b90966020823d602011612e20575b81612e07602093836123ca565b8101031261011c5750612e1990612636565b95386129fa565b3d9150612dfa565b90926020823d602011612e54575b81612e43602093836123ca565b8101031261011c57505191386129ca565b3d9150612e36565b906020823d602011612e86575b81612e76602093836123ca565b8101031261011c5750513861299a565b3d9150612e69565b906020823d602011612eb8575b81612ea8602093836123ca565b8101031261011c5750513861296b565b3d9150612e9b565b90926020823d602011612eec575b81612edb602093836123ca565b8101031261011c575051913861293c565b3d9150612ece565b90946020823d602011612f20575b81612f0f602093836123ca565b8101031261011c575051933861290c565b3d9150612f02565b6020813d602011612f5b575b81612f41602093836123ca565b81010312612f5457516101a052386128dc565b6101a05180fd5b3d9150612f34565b6020813d602011612f96575b81612f7c602093836123ca565b81010312612f8f57516101e052386128ab565b6101e05180fd5b3d9150612f6f565b6020813d602011612fd1575b81612fb7602093836123ca565b81010312612fca57516101c0523861287a565b6101c05180fd5b3d9150612faa565b60c060808201918251608051520151604060805101525160206080510152612848565b906020823d60201161302e575b81613016602093836123ca565b8101031261011c575061302890612629565b38612820565b3d9150613009565b3d8083833e61304581836123ca565b81016020828203126107d65781516001600160401b039283821161092757019160e0838303126103ac576040519360e08501858110838211176130e65760405261308e84612636565b8552602084015191821161011c575082916130ac9160c0940161268a565b602084015260408101516040840152606081015160608401526080810151608084015260a081015160a0840152015160c0820152386127e6565b634e487b7160e01b82526041600452602482fd5b906060823d60601161314a575b81613114606093836123ca565b8101031261011c575061312681612629565b61313e604061313760208501612636565b9301612629565b509061010052386127ab565b3d9150613107565b604051636f307dc360e01b8082529291906020816004816001600160a01b0387165afa91821561091b578092613263575b5050604051928352916020816004816001600160a01b0386165afa908115612cbd57600091613224575b5060405163313ce56760e01b815290602090829060049082906001600160a01b03165afa8015612cbd576000906131ea575b60ff9150169061276c565b6020823d60201161321c575b81613203602093836123ca565b8101031261011c575061321760ff91612636565b6131df565b3d91506131f6565b906020823d60201161325b575b8161323e602093836123ca565b8101031261011c57506020613254600492612615565b91506131ad565b3d9150613231565b9091506020823d602011613298575b8161327f602093836123ca565b8101031261011c575061329190612615565b3880613183565b3d9150613272565b90506020813d6020116132d2575b816132bb602093836123ca565b81010312610917576132cc90612629565b3861275e565b3d91506132ae565b6040513d84823e3d90fd5b90926020823d602011613319575b81613300602093836123ca565b8101031261011c575061331290612615565b913861272d565b3d91506132f3565b906020823d602011613353575b8161333b602093836123ca565b8101031261011c575061334d90612615565b386126fd565b3d915061332e565b600019811461336a5760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156133905760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b0381168103610f855790565b80518210156133905760209160051b010190565b604051906133db826123ae565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b6134146133ce565b50604080516370a0823160e01b8082526001600160a01b0394851660048301819052938516946020949390929085826024818a5afa9182156137e1576000926137b2575b5080516305eff7ef60e21b81526004810186905292868460248160008c5af19384156137a757600094613778575b508151633af9e66960e01b81526004810187905294878660248160008d5af19586156136895790899291600097613744575b5060009084518a81600481632b1e137760e21b988982525afa90811561370557839161370f575b50156135dc5750505085319531965b8251637f4e225760e11b815281816004818d5afa90811561359c576000916135a7575b50835192835281836004818d5afa92831561359c57600093613565575b5083519961353b8b6123ae565b8a521515908901521515908701526060860152608085015260a084015260c083015260e082015290565b90928282813d8311613595575b61357c81836123ca565b8101031261011c575061358e90612629565b913861352e565b503d613572565b84513d6000823e3d90fd5b908282813d83116135d5575b6135bd81836123ca565b8101031261011c57506135cf90612629565b38613511565b503d6135b3565b8451636f307dc360e01b81528a816004818f5afa9081156137055783916136d0575b50169184519081528860048201528981602481865afa9182156136c55790818b93613694575b5050976044855180948193636eb1769f60e11b835260048301528d60248301525afa9081156136895760009161365c575b50966134ee565b908882813d8311613682575b61367281836123ca565b8101031261011c57505138613655565b503d613668565b83513d6000823e3d90fd5b91509182813d83116136be575b6136ab81836123ca565b8101031261011c57508890513880613624565b503d6136a1565b8551903d90823e3d90fd5b90508a81813d83116136fe575b6136e781836123ca565b810103126107d6576136f890612615565b386135fe565b503d6136dd565b86513d85823e3d90fd5b90508a81813d831161373d575b61372681836123ca565b810103126107d65761373790612629565b386134df565b503d61371c565b919250958882813d8311613771575b61375d81836123ca565b8101031261011c57509088915195386134b8565b503d613753565b90938782813d83116137a0575b61378f81836123ca565b8101031261011c5750519238613486565b503d613785565b82513d6000823e3d90fd5b90918682813d83116137da575b6137c981836123ca565b8101031261011c5750519038613458565b503d6137bf565b50513d6000823e3d90fd5b604080516137f98161233f565b600080825260209182018190528251635fe3b56760e01b81526001600160a01b0394851694919391908381600481895afa9081156139155782918591879161391f575b5060048551809481936307dc0d1d60e41b8352165afa9081156139155790849186916138df575b50602484518094819363fc57d4df60e01b83528a6004840152165afa9384156138d45780946138a2575b5050519261389a8461233f565b835282015290565b909193508282813d83116138cd575b6138bb81836123ca565b8101031261011c57505191388061388d565b503d6138b1565b8251903d90823e3d90fd5b82819392503d831161390e575b6138f681836123ca565b81010312610927576139088491612615565b38613863565b503d6138ec565b83513d87823e3d90fd5b92505081813d831161394f575b61393681836123ca565b8101031261092757836139498392612615565b3861383c565b503d61392c565b90816060910312610f85578051916040602083015192015190565b81601f82011215610f8557805191613988836123eb565b9261399660405194856123ca565b808452602092838086019260051b820101928311610f85578301905b8282106139c0575050505090565b8380916139cc84612615565b8152019101906139b2565b604051906139e482612309565b60006060838281528260208201528260408201520152565b51906001600160601b0382168203610f8557565b608081830312610f85578051926001600160401b0393848111610f855783613a39918401613971565b93602080840151828111610f8557840185601f82011215610f8557805190613a60826123eb565b90604092613a70845193846123ca565b808352848084019160051b83010191898311610f855785809101915b838310613ba957505050509581860151848111610f8557860181601f82011215610f85578051613abb816123eb565b91613ac8855193846123ca565b818352858084019260051b82010191848311610f8557868201905b838210613b84575050505095606081015190858211610f8557019181601f84011215610f8557825190613b15826123eb565b95613b22825197886123ca565b828752858088019360051b86010194848611610f8557868101935b868510613b4f57505050505050505090565b8451838111610f8557820186603f82011215610f85578891613b7988838886809601519101612644565b815201940193613b3d565b8151898111610f85578891613b9e8884809488010161268a565b815201910190613ae3565b8251815291810191869101613a8c565b3563ffffffff81168103610f855790565b15613bd25750565b60405162461bcd60e51b815260206004820152908190613bf69060248301906124f4565b0390fd5b604080516302a9bed760e61b81526001600160a01b0392831660048201819052938316939192602092918381602481895afa8015613dd157600090613d9c575b60ff915016159485613cd2575b505083613c55575b50505090565b82516305cee64160e21b815293508190849060049082905afa918215613cc85750600091613c93575b50670de0b6b3a7640000915014388080613c4f565b82813d8311613cc1575b613ca781836123ca565b8101031261011c5750670de0b6b3a7640000905138613c7e565b503d613c9d565b513d6000823e3d90fd5b60049192955083908551928380926302408d5f60e41b82525afa90811561359c57908391600091613d67575b50602485518094819363715cfdd960e01b8352896004840152165afa90811561368957600091613d32575b50923880613c47565b908282813d8311613d60575b613d4881836123ca565b8101031261011c5750613d5a90612629565b38613d29565b503d613d3e565b9182813d8311613d95575b613d7c81836123ca565b8101031261011c5750613d8f8391612615565b38613cfe565b503d613d72565b8482813d8311613dca575b613db181836123ca565b8101031261011c5750613dc560ff91612636565b613c3a565b503d613da7565b85513d6000823e3d90fd5b15613de357565b60405162461bcd60e51b815260206004820152600e60248201526d746f6f206d75636820726570617960901b6044820152606490fd5b8115613e23570490565b634e487b7160e01b600052601260045260246000fd5b670de0b6b3a764000091613e67916000604051613e55816122ee565b52519051613e61613ea5565b91613f28565b0460405190613e75826122ee565b815290565b90613e98916000604051613e8d816122ee565b525190613e61613ea5565b60405190613e75826122ee565b60405190613eb28261233f565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b801591828015613f20575b613f1857670de0b6b3a7640000808302938385048214171561336a57613f126126a49385613e19565b14613bca565b505050600090565b506000613ee9565b9091811592838015613f5e575b613f5557808302938385048214171561336a57613f126126a49385613e19565b50505050600090565b508015613f3556fea264697066735822122083c8a09957f5d71759482da7d4dc1103812bd4b099ff009da23624ce2722610864736f6c63430008130033";

export class CompoundLens__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundLens> {
    return super.deploy(overrides || {}) as Promise<CompoundLens>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompoundLens {
    return super.attach(address) as CompoundLens;
  }
  connect(signer: Signer): CompoundLens__factory {
    return super.connect(signer) as CompoundLens__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundLensInterface {
    return new utils.Interface(_abi) as CompoundLensInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundLens {
    return new Contract(address, _abi, signerOrProvider) as CompoundLens;
  }
}
