/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WhitePaperInterestRateModel,
  WhitePaperInterestRateModelInterface,
} from "../WhitePaperInterestRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blocksPerYearOnChain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blocksPerYear",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161073a38038061073a83398101604081905261002f9161014c565b600083905561004982846100bd602090811b6101fc17901c565b600281905550610068600054826100bd60201b6101fc1790919060201c565b60018190556000546002546040805192835260208301919091528101919091527f865bfff1eb39dc370f97b2eb5990d963c50228429828ad935a4470166c711fc19060600160405180910390a15050506101f1565b600061010583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061010c60201b60201c565b9392505050565b600081836101365760405162461bcd60e51b815260040161012d919061017a565b60405180910390fd5b50600061014384866101cf565b95945050505050565b60008060006060848603121561016157600080fd5b8351925060208401519150604084015190509250925092565b600060208083528351808285015260005b818110156101a75785810183015185820160400152820161018b565b818111156101b9576000604083870101525b50601f01601f1916929092016040019392505050565b6000826101ec57634e487b7160e01b600052601260045260246000fd5b500490565b61053a806102006000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638726bb891161005b5780638726bb89146100d3578063a385fb96146100dc578063b8168816146100e5578063f14039de146100f857600080fd5b806315f24053146100825780632191f92a146100a85780636e71e2d8146100c0575b600080fd5b6100956100903660046103cb565b610101565b6040519081526020015b60405180910390f35b6100b0600181565b604051901515815260200161009f565b6100956100ce3660046103cb565b61014f565b61009560015481565b61009560005481565b6100956100f33660046103f7565b61018f565b61009560025481565b60008061010f85858561014f565b905061014460025461013e670de0b6b3a76400006101386001548661024790919063ffffffff16565b906101fc565b906102cb565b9150505b9392505050565b60008261015e57506000610148565b6101876101758361016f87876102cb565b9061032a565b61013885670de0b6b3a7640000610247565b949350505050565b6000806101a4670de0b6b3a76400008461032a565b905060006101b3878787610101565b905060006101cd670de0b6b3a76400006101388486610247565b90506101f0670de0b6b3a7640000610138836101ea8c8c8c61014f565b90610247565b98975050505050505050565b600061023e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061036c565b90505b92915050565b60008261025657506000610241565b6000610262838561043f565b90508261026f858361045e565b1461023e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084015b60405180910390fd5b6000806102d88385610480565b90508381101561023e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016102c2565b600061023e83836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f770081525061039a565b6000818361038d5760405162461bcd60e51b81526004016102c29190610498565b506000610144848661045e565b600081848411156103be5760405162461bcd60e51b81526004016102c29190610498565b50600061014484866104ed565b6000806000606084860312156103e057600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561040d57600080fd5b5050823594602084013594506040840135936060013592509050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561045957610459610429565b500290565b60008261047b57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561049357610493610429565b500190565b600060208083528351808285015260005b818110156104c5578581018301518582016040015282016104a9565b818111156104d7576000604083870101525b50601f01601f1916929092016040019392505050565b6000828210156104ff576104ff610429565b50039056fea2646970667358221220843be6690fbcc442b90e5f9be3c5244bfaf2d06ebc15f433615e48f86a6870f964736f6c634300080b0033";

export class WhitePaperInterestRateModel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    blocksPerYearOnChain: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WhitePaperInterestRateModel> {
    return super.deploy(
      blocksPerYearOnChain,
      baseRatePerYear,
      multiplierPerYear,
      overrides || {}
    ) as Promise<WhitePaperInterestRateModel>;
  }
  getDeployTransaction(
    blocksPerYearOnChain: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      blocksPerYearOnChain,
      baseRatePerYear,
      multiplierPerYear,
      overrides || {}
    );
  }
  attach(address: string): WhitePaperInterestRateModel {
    return super.attach(address) as WhitePaperInterestRateModel;
  }
  connect(signer: Signer): WhitePaperInterestRateModel__factory {
    return super.connect(signer) as WhitePaperInterestRateModel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhitePaperInterestRateModelInterface {
    return new utils.Interface(_abi) as WhitePaperInterestRateModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhitePaperInterestRateModel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WhitePaperInterestRateModel;
  }
}
