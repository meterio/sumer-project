/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052346200039b5762000d31803803806200001d81620003a0565b9283398101906040818303126200039b5780516001600160401b0391908281116200039b578362000050918301620003dc565b90602093848201518481116200039b576200006c9201620003dc565b60009283600255825191818311620002a5576001928354948486811c9616801562000390575b888710146200037c578190601f9687811162000329575b508890878311600114620002c5578892620002b9575b5050600019600383901b1c191690841b1783555b8051918211620002a55784548381811c911680156200029a575b8782101462000286578481116200023e575b508590848311600114620001da579282939183928794620001ce575b50501b916000199060031b1c19161782555b600580546001600160a01b03191633908117909155156200018b5750338152600382527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef604051928284523393a36040516108e290816200044f8239f35b826064916040519162461bcd60e51b8352600483015260248201527f45524332303a204d696e7420746f20746865207a65726f2061646472657373006044820152fd5b0151925038806200011b565b858052868620919083601f198116885b8a888383106200022657505050106200020c575b505050811b0182556200012d565b015160001960f88460031b161c19169055388080620001fe565b868601518855909601959485019487935001620001ea565b8580528686208580850160051c8201928986106200027c575b0160051c019084905b82811062000270575050620000ff565b87815501849062000260565b9250819262000257565b634e487b7160e01b86526022600452602486fd5b90607f1690620000ed565b634e487b7160e01b85526041600452602485fd5b015190503880620000bf565b8689528989208794509190601f1984168a5b8c828210620003125750508411620002f8575b505050811b018355620000d3565b015160001960f88460031b161c19169055388080620002ea565b8385015186558a97909501949384019301620002d7565b9091508588528888208780850160051c8201928b861062000372575b918891869594930160051c01915b82811062000363575050620000a9565b8a815585945088910162000353565b9250819262000345565b634e487b7160e01b87526022600452602487fd5b95607f169562000092565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620003c657604052565b634e487b7160e01b600052604160045260246000fd5b919080601f840112156200039b5782516001600160401b038111620003c65760209062000412601f8201601f19168301620003a0565b928184528282870101116200039b5760005b8181106200043a57508260009394955001015290565b85810183015184820184015282016200042456fe60806040908082526004918236101561001757600080fd5b600092833560e01c92836306fdde03146105d55750826307546172146105ac578263095ea7b3146104ea57826318160ddd146104cb57826323b872dd146103d0578263313ce567146103b457826340c10f19146102d757826370a082311461029f57826395d89b4114610180578263a9059cbb14610149578263dd62ed3e146100fb57505063fca3b5aa146100ab57600080fd5b346100f85760203660031901126100f8576100c46106f5565b600554906001600160a01b03906100de3383851614610726565b16906bffffffffffffffffffffffff60a01b161760055580f35b80fd5b90915034610145578160031936011261014557602092829161011b6106f5565b610123610710565b6001600160a01b03918216845291865283832091168252845220549051908152f35b8280fd5b83823461017c578060031936011261017c576020906101736101696106f5565b6024359033610789565b90519015158152f35b5080fd5b83823461017c578160031936011261017c57805190828354600181811c90808316928315610295575b6020938484108114610282578388529081156102665750600114610211575b505050829003601f01601f191682019267ffffffffffffffff8411838510176101fe57508291826101fa9252826106ac565b0390f35b634e487b7160e01b815260418552602490fd5b8680529192508591837f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b83851061025257505050508301018580806101c8565b80548886018301529301928490820161023c565b60ff1916878501525050151560051b84010190508580806101c8565b634e487b7160e01b895260228a52602489fd5b91607f16916101a9565b83823461017c57602036600319011261017c5760209181906001600160a01b036102c76106f5565b1681526003845220549051908152f35b9083346100f857816003193601126100f8576102f16106f5565b60055460243592916001600160a01b039161030f9083163314610726565b169182156103715760208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9184845260038252858420610353828254610766565b905561036181600254610766565b6002558551908152a35160018152f35b835162461bcd60e51b8152602081870152601f60248201527f45524332303a204d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b83823461017c578160031936011261017c576020905160128152f35b83823461017c57606036600319011261017c576103eb6106f5565b6103f3610710565b6001600160a01b038216808552602086815284862033875281528486205490956044359492909160018101610431575b505050906101739291610789565b8581106104885797868661017398999a039384928482528b528181203382528b52205586519182527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925883393a38594938780610423565b865162461bcd60e51b8152808a01899052601d60248201527f45524332303a20496e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b83823461017c578160031936011261017c576020906002549051908152f35b9083346100f857816003193601126100f8576105046106f5565b6001600160a01b03169060243590821561055e5783829160209633825287528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b835162461bcd60e51b8152602081870152602260248201527f45524332303a20417070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b83823461017c578160031936011261017c5760055490516001600160a01b039091168152602090f35b8491923461014557826003193601126101455782600180549081811c908083169283156106a2575b602093848410811461028257838852908115610266575060011461064d57505050829003601f01601f191682019267ffffffffffffffff8411838510176101fe57508291826101fa9252826106ac565b8087529192508591837fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b83851061068e57505050508301018580806101c8565b805488860183015293019284908201610678565b91607f16916105fd565b6020808252825181830181905290939260005b8281106106e157505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016106bf565b600435906001600160a01b038216820361070b57565b600080fd5b602435906001600160a01b038216820361070b57565b1561072d57565b60405162461bcd60e51b815260206004820152601160248201527022a92199181d102737ba1036b4b73a32b960791b6044820152606490fd5b9190820180921161077357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03918216929190831561085b5716906000828152600360205260408120549180831061080757604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652600386520382822055868152206107f9828254610766565b9055604051908152a3600190565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a205472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a205472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fdfea2646970667358221220cf52e6ba1b891214e1bf2cfbd871b7f3c29530082c13017ecf64f8ba81f8d2f064736f6c63430008130033";

export class Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Token>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
