/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CompoundLens,
  CompoundLensInterface,
} from "../../../contracts/Comptroller/CompoundLens";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalances",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "cTokenBalancesAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "balanceOf",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowBalanceCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balanceOfUnderlying",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenAllowance",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenBalances[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "heteroLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "homoLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sutokenLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "intraRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "discountRate",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenMetadataAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "exchangeRateCurrent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "supplyRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRatePerBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFactorMantissa",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalBorrows",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalReserves",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalCash",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "underlyingAssetAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "cTokenDecimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "underlyingDecimals",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isCToken",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isCEther",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "borrowCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositCap",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "heteroLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "homoLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sutokenLiquidationIncentive",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "groupId",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "intraRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "mintRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "discountRate",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "cTokenUnderlyingPrice",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "cTokenUnderlyingPriceAll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "underlyingPrice",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CTokenUnderlyingPrice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getAccountLimits",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "markets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "liquidity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortfall",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.AccountLimits",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCompBalanceMetadataExt",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocated",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompBalanceMetadataExt",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ICToken",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "blockNumbers",
        type: "uint32[]",
      },
    ],
    name: "getCompVotes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "votes",
            type: "uint256",
          },
        ],
        internalType: "struct CompoundLens.CompVotes[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "abstainVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovBravoProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorBravo",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovBravoReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "support",
            type: "uint8",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovBravoReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovProposals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "eta",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "targets",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
          {
            internalType: "string[]",
            name: "signatures",
            type: "string[]",
          },
          {
            internalType: "bytes[]",
            name: "calldatas",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "startBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "forVotes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "againstVotes",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "canceled",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "executed",
            type: "bool",
          },
        ],
        internalType: "struct CompoundLens.GovProposal[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGovernorAlpha",
        name: "governor",
        type: "address",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "proposalIds",
        type: "uint256[]",
      },
    ],
    name: "getGovReceipts",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasVoted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            internalType: "uint96",
            name: "votes",
            type: "uint96",
          },
        ],
        internalType: "struct CompoundLens.GovReceipt[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "isDeprecated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateBorrowAllowed",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cTokenBorrowed",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenCollateral",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "actualRepayAmount",
        type: "uint256",
      },
      {
        internalType: "contract IComptroller",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "liquidateCalculateSeizeTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761408f908161001c8239f35b600080fdfe610280604052600436101561001357600080fd5b6000803560e01c80630972bf8b146121fd578063158eca8b146121d05780631bd886b014611d005780631ea637411461198f5780632b2d5ed6146118795780633394fba514611842578063416405d71461169557806343c811cc146114745780634b70d84b14611369578063595642191461118b5780636dabf94f14610dd057806375d80e901461096b5780637dd8f6d9146107da57806396994869146103b0578063995ed99f1461015a578063bdf950c91461011f5763c5ae5934146100d957600080fd5b3461011c57602036600319011261011c5760406100fc6100f7612392565b6139a2565b815181516001600160a01b0316815260209182015191810191909152f35bf35b80fd5b503461011c57604036600319011261011c5761010061014d61013f612392565b610147612325565b906135c2565b61011a604051809261233b565b503461011c576060908160031936011261011c57610176612392565b61017e612325565b906044356001600160401b0381116103ac5761019e903690600401612602565b908151916101ab836125eb565b936101b960405195866125ca565b838552601f196101c8856125eb565b01865b81811061038f5750506001600160a01b0390921691855b8481106102525787878760405191602080840190808552835180925280604086019401925b8281106102145785850386f35b835180518652808301511515868401526040808201511515908701528701516001600160601b03168786015260809094019392810192600101610207565b61029c9061025e6128e2565b898461026a8488613570565b5160405163711d4d2960e11b815260048101919091526001600160a01b03909116602482015293849081906044820190565b0381895afa801561038457898a908b92610329575b61032495506020928385019160408601936001600160601b03809316855215158352151585526102e1868a613570565b51945115159151151592511692604051946102fb86612509565b855284015260408301528a8201526103138289613570565b5261031e8188613570565b50613511565b6101e2565b50505090918981813d831161037d575b61034381836125ca565b8101031261037957908161035a6103249493612837565b610372604061036b60208501612837565b9301613b97565b91906102b1565b8880fd5b503d610339565b6040513d8b823e3d90fd5b60209061039d969596613b72565b82828a010152019493946101cb565b8380fd5b503461011c57604036600319011261011c576103ca612392565b6024356001600160401b0381116107d6576103e99036906004016122f5565b6103f5819392936125eb565b9261040360405194856125ca565b818452601f19610412836125eb565b01855b81811061076c575050845b82811061053c5760408051602080825287518183018190528993600582901b8401810192808b01929185015b8287106104595785850386f35b909192938280600192603f1989820301855287519081518152848060a01b03838301511683820152604082015160408201526104e76104d46104c16104ae606080870151906101a08091880152860190612660565b608080870151908683039087015261269d565b60a0808601519085830390860152612719565b60c0808501519084830390850152612719565b9160e081015160e083015261010080820151908301526101208082015190830152610140808201519083015261016080820151151590830152610180809101511515910152960192019601959291909261044c565b610547818484613536565b604051631946ecc160e11b81529035600482015286816024816001600160a01b0389165afa80156107615787918889918a9361073a575b506040519361058c85612576565b8a85528a60208601528a60408601526060850152608084015260a083015260c08201528660e082015286610100820152866101208201528661014082015286610160820152866101808201526105e28287613570565b526105ed8186613570565b506105f88186613570565b5190610605818585613536565b60405163013cf08b60e01b8152903560048201819052929088610120826024816001600160a01b038c165afa91821561072d57818283849185938695879861069a575b5090610180979695949392916106959b8a5260018060a01b031660208a0152604089015260e088015261010087015261012086015261014085015215156101608401521515910152613511565b610420565b975050505050505050610120813d61012011610725575b816106bf61012093836125ca565b810103126103795761069593816106db60206101809401612823565b9060408101516060820151608083015160a08401519160c08501519361071061010061070960e08901612837565b9701612837565b979b9798509496939592949193909290610648565b3d91506106b1565b50604051903d90823e3d90fd5b9250505061075a91503d8089833e61075281836125ca565b810190613bab565b913861057e565b6040513d89823e3d90fd5b60209060405161077b81612576565b888152828981830152896040830152606080808401528060808401528060a084015260c08301528960e08301528961010083015289610120830152896101408301528961016083015289610180830152828901015201610415565b8280fd5b503461011c57604036600319011261011c576107f4612392565b906107fd612325565b60405161080981612524565b826040606092838152826020820152015260018060a01b038094169360405192635ec88c7960e01b8452168060048401528183602481885afa90811561096057848594869361092b575b50610927578490602460405180988193632aff3bff60e21b835260048301525afa93841561091b5780946108d0575b506108c094506040519361089585612524565b8452602084019283526040840190815260405194859460208652518360208701526080860190612660565b9251604085015251908301520390f35b9093503d8082873e6108e281876125ca565b850194602081870312610917578051916001600160401b03831161011c575094610910916108c09601613b0c565b9238610882565b5080fd5b604051903d90823e3d90fd5b8480fd5b9194505061094f9150823d8411610959575b61094781836125ca565b810190612901565b9390939138610853565b503d61093d565b6040513d86823e3d90fd5b503461011c57604036600319011261011c57610985612392565b6024356001600160401b0381116107d6576109a49036906004016122f5565b6109b0819392936125eb565b926109be60405194856125ca565b818452601f196109cd836125eb565b01855b818110610d5f575050845b828110610ac95760408051602080825287518183018190528993600582901b8401810192808b01929185015b828710610a145785850386f35b909192938280600192603f1989820301855287519081518152848060a01b0383830151168382015260408201516040820152610a696104d46104c16104ae606080870151906101c08091880152860190612660565b9160e081015160e08301526101008082015190830152610120808201519083015261014080820151908301526101608082015190830152610180808201511515908301526101a08091015115159101529601920196019592919092610a07565b610ad4818484613536565b604051631946ecc160e11b81529035600482015286816024816001600160a01b0389165afa80156107615787918889918a93610d40575b5060405193610b198561255a565b8a85528a60208601528a60408601526060850152608084015260a083015260c08201528660e08201528661010082015286610120820152866101408201528661016082015286610180820152866101a0820152610b768287613570565b52610b818186613570565b50610b8c8186613570565b5190610b99818585613536565b60405163013cf08b60e01b81529035600482018190529290610140816024816001600160a01b038b165afa908115610384578991610c4f575b506101206101a091610c4a95845260018060a01b03602082015116602085015260408101516040850152606081015160e0850152608081015161010085015260a08101518285015260c081015161014085015260e0810151610160850152610100810151151561018085015201511515910152613511565b6109db565b9050610140813d61014011610d38575b81610c6d61014093836125ca565b810103126103795760405190816101408101106001600160401b0361014084011117610d2257610c4a9482610d1561012080946101406101a0970160405280518452610cbb60208201612823565b602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015260e081015160e0850152610d096101008201612837565b61010085015201612837565b8382015292509450610bd2565b634e487b7160e01b600052604160045260246000fd5b3d9150610c5f565b92505050610d5891503d8089833e61075281836125ca565b9138610b0b565b602090604051610d6e8161255a565b888152828981830152896040830152606080808401528060808401528060a084015260c08301528960e08301528961010083015289610120830152896101408301528961016083015289610180830152896101a08301528289010152016109d0565b503461011c5760c036600319011261011c57610dea612392565b610df2612325565b610dfa6124c2565b50610e036124d8565b6001600160a01b0392608435919060a4358581169190828103610fe75760405190637bca031760e11b97888352808416928360048201526020998b60249a8c848d818c5afa93841561118057859294611142575b50836110d2575b5050501561109a576040516395dd919360e01b81529516600486018190529288868981865afa95861561108f578a9661105c575b5090610e9d91613d95565b15610ee25750505010610eaf57505080f35b90600d6064926040519262461bcd60e51b845260048401528201526c696e76616c696420726570617960981b6044820152fd5b60405191634e79238f60e01b8352600483015285820152866044820152866064820152606081608481855afa90811561076157879161103b575b5015610ffe57846004916040519283809263743aaa2360e11b82525afa908115610ff3578691610fb9575b50670de0b6b3a764000091610f6a9160405190610f63826124ee565b8152613f6d565b510410610f7657505080f35b9060176064926040519262461bcd60e51b845260048401528201527f7265706179206f76657220636c6f736520666163746f720000000000000000006044820152fd5b90508481813d8311610fec575b610fd081836125ca565b81010312610fe75751670de0b6b3a7640000610f47565b600080fd5b503d610fc6565b6040513d88823e3d90fd5b60405162461bcd60e51b815260048101869052601681860152751a5b9cdd59999a58da595b9d081cda1bdc9d19985b1b60521b6044820152606490fd5b611053915060603d81116109595761094781836125ca565b91505038610f1c565b919095508882813d8311611088575b61107581836125ca565b81010312610fe757905194610e9d610e92565b503d61106b565b6040513d8c823e3d90fd5b60405162461bcd60e51b8152600481018a90526011818a0152701b585c9ad95d081b9bdd081b1a5cdd1959607a1b6044820152606490fd5b604051928352166004820152905089818a81895afa908115611137578b916110fe575b50388281610e5e565b90508981813d8311611130575b61111581836125ca565b8101031261112c5761112690612837565b386110f5565b8a80fd5b503d61110b565b6040513d8d823e3d90fd5b8d809295508193503d8311611179575b61115c81836125ca565b810103126111755761116e8491612837565b9238610e57565b8c80fd5b503d611152565b6040513d84823e3d90fd5b503461011c57606036600319011261011c576111a5612392565b906111ae612325565b91604480356001600160401b0381116103ac576111cf9036906004016122f5565b90916111da826125eb565b956111e860405197886125ca565b828752601f196111f7846125eb565b01865b8181106113445750506001600160a01b039081169416855b83811061125f576040805160208082528a51818301819052818c01938301918b5b8281106112405784840385f35b8551805185528201518483015294810194604090930192600101611233565b63ffffffff8061127861127384888a613536565b613d54565b169061128861127384888a613536565b60405163782d6fe160e01b8152600481018a90529116602482015260209081818781885afa90811561108f578a916112f9575b50906001600160601b036112f4949392604051936112d88561253f565b845216908201526112e9828b613570565b5261031e818a613570565b611212565b90508181813d831161133d575b61131081836125ca565b8101031261133957906001600160601b0361132f6112f4959493613b97565b91929394506112bb565b8980fd5b503d611306565b6020906040516113538161253f565b6000815282600081830152828c010152016111fa565b503461011c57602080600319360112610917576004356001600160401b0381116107d65761139b9036906004016122f5565b906113a5826125eb565b916113b360405193846125ca565b808352601f196113c2826125eb565b01855b818110611458575050845b818110611424575050506040519180830190808452825180925280604085019301945b8281106114005784840385f35b90919282610320826114156001948a516123a8565b019601910194929190946113f3565b8061144661144161143c6114509486889b999b613536565b61355c565b61291c565b6103138289613570565b9492946113d0565b859061146597959761276e565b82828a010152019593956113c5565b503461011c576060908160031936011261011c57611490612392565b611498612325565b906044356001600160401b0381116103ac576114bb909291923690600401612602565b8051916114c7836125eb565b936114d560405195866125ca565b838552601f196114e4856125eb565b01865b8181106116785750506001600160a01b0316855b84811061156c5787878760405191602080840190808552835180925280604086019401925b82811061152d5785850386f35b8351805186528083015115158684015260408082015160ff16908701528701516001600160601b03168786015260809094019392810192600101611520565b80888461157c6115ae9488613570565b5160405163711d4d2960e11b815260048101919091526001600160a01b03909116602482015292839081906044820190565b0381865afa801561166d578890611601575b6115fc92506115cf8287613570565b519080511515906020916001600160601b03604060ff85850151169301511692604051946102fb86612509565b6114fb565b50908881813d8311611666575b61161881836125ca565b8101031261166257906115fc91611658604080519261163684612524565b61163f81612837565b8452602061164e818301612844565b9085015201613b97565b60408201526115c0565b8780fd5b503d61160e565b6040513d8a823e3d90fd5b602090611686969396613b72565b82828a010152019491946114e7565b503461011c57604036600319011261011c576116af612392565b6116b7612325565b906116c06128e2565b506040516370a0823160e01b81526001600160a01b0392831660048201819052918316939092916020908185602481895afa948515611837578395611808575b5060405163b4b5ea5760e01b8152600481018290529082826024818a5afa9182156109605790839185936117d0575b50602460405180998193632c3e6f0f60e11b835260048301525afa92831561091b578093611796575b5060609550836040805161176b81612524565b8781526001600160601b03858201941684520193168352604051948552519084015251166040820152f35b9092508186813d83116117c9575b6117ae81836125ca565b8101031261011c57506117c2606095612823565b9138611758565b503d6117a4565b8281939294503d8311611801575b6117e881836125ca565b810103126103ac576117fa8391613b97565b913861172f565b503d6117de565b9094508181813d8311611830575b61182081836125ca565b81010312610fe757519338611700565b503d611816565b6040513d85823e3d90fd5b503461011c57604036600319011261011c57602061186f611861612392565b611869612325565b90613d95565b6040519015158152f35b503461011c57602080600319360112610917576004356001600160401b0381116107d6576118ab9036906004016122f5565b906118b5826125eb565b916118c360405193846125ca565b808352601f196118d2826125eb565b01855b818110611965575050845b818110611945575050506040519180830190808452825180925280604085019301945b8281106119105784840385f35b909192826040826119366001948a516020809160018060a01b0381511684520151910152565b01960191019492919094611903565b806114466100f761143c61195d9486889b999b613536565b9492946118e0565b85906040979597516119768161253f565b6000815260008382015282828a010152019593956118d5565b503461011c57606036600319011261011c576119a9612392565b6119b1612325565b6119b96124c2565b916119c2613b72565b5060018060a01b038091169360405193826370a0823160e01b9182875216806004870152602091602495838888818c5afa978815611c11578598611cd1575b508516803b15610927576040516374d7814960e11b8152600481018490528581898183865af18015610ff357611ca3575b50604051918252826004830152838288818c5afa918215611c11578793929185918793611c71575b506040519889809263331faf7160e21b82528660048301525afa968715611c11578597611c42575b5060405190611a908261253f565b600e82526d1cdd5b4818dbdb5c081d1bdd185b60921b85830152870196878111611c2f5790611ac191881015613d65565b611af2604051611ad08161253f565b600d81526c1cdd5888185b1b1bd8d85d1959609a1b8582015287891115613d65565b868603958611611c1c5760405163b4b5ea5760e01b81526004810182905291838382818c5afa928315611c1157908492918694611bd7575b50604051809a8193632c3e6f0f60e11b835260048301525afa92831561091b578093611b9d575b50608096506060604051611b6481612509565b8781526001600160601b038482019316835285604082019516855201948552604051958652519085015251166040830152516060820152f35b9092508187813d8311611bd0575b611bb581836125ca565b8101031261011c5750611bc9608096612823565b9138611b51565b503d611bab565b838193949295503d8311611c0a575b611bf081836125ca565b810103126109275790611c038492613b97565b9238611b2a565b503d611be6565b6040513d87823e3d90fd5b50634e487b7160e01b8352601160045282fd5b634e487b7160e01b865260116004528386fd5b9096508381813d8311611c6a575b611c5a81836125ca565b81010312610fe757519538611a82565b503d611c50565b9450915083813d8311611c9c575b611c8981836125ca565b81010312610fe757838793519138611a5a565b503d611c7f565b6001600160401b038196929611611cbe576040529338611a32565b634e487b7160e01b825260416004528782fd5b9097508381813d8311611cf9575b611ce981836125ca565b8101031261092757519685611a01565b503d611cdf565b503461011c57608036600319011261011c57611d1a612392565b90611d23612325565b6001600160a01b039283611d356124d8565b1691604051926307dc0d1d60e41b84526020938481600481855afa908115610ff3579087918791612198575b501692604051928763fc57d4df60e01b9283865216918260048601528685602481895afa94851561166d57908792918996612164575b506024906040519a8b938492835216978860048301525afa968715610ff3578697612131575b5082151580612128575b156120f55760405163182df0f560e01b8152938585600481845afa9485156107615787956120c6575b5086604051611dfe816124ee565b5286604051611e0c816124ee565b5286604051611e1a816124ee565b5260405191638e8f294b60e01b928381528160048201526060928382602481895afa91821561108f578a926120a4575b5060405194855260048501528284602481885afa93841561038457899461206f575b50826004949560405195868092634ada90af60e01b82525afa9384156103845789908a948b9661204a575b505060ff80919616911614611f7d575b505050604095611f21611f04670de0b6b3a764000095611ee9611f7096611f59968c5190611ed4826124ee565b81528c5191611ee2836124ee565b8252613f2c565b938a5190611ef6826124ee565b81528a5191611ee2836124ee565b91878951611f11816124ee565b5251611f1b613f98565b90613fd1565b905190611f548851611f328161253f565b600e81526d646976696465206279207a65726f60901b88820152831515613d65565b613f0c565b855190611f65826124ee565b815260443590613f6d565b5104908351928352820152f35b600491929350869060405192838092637f4e225760e11b82525afa908115610761578791611fe7575b50611f04670de0b6b3a764000095611ee9611f7096611f599660409c96611f219615600014611fe057505b96509650509550829850611ea7565b9050611fd1565b90508581813d8311612043575b611ffe81836125ca565b8101031261203f57611f04670de0b6b3a764000095611ee9611f7096611f599660409c9661202e611f2197612837565b9650969c5096509650509550611fa6565b8680fd5b503d611ff4565b60ff96508695506120679250803d106109595761094781836125ca565b959094611e97565b600494506120938491823d841161209d575b61208b81836125ca565b810190612852565b5090509450611e6c565b503d612081565b6120bc919250843d861161209d5761208b81836125ca565b5090509038611e4a565b9094508581813d83116120ee575b6120de81836125ca565b8101031261203f57519338611df0565b503d6120d4565b60405162461bcd60e51b815260048101869052600b60248201526a383934b1b29032b93937b960a91b6044820152606490fd5b50861515611dc7565b9096508481813d831161215d575b61214981836125ca565b8101031261215957519538611dbd565b8580fd5b503d61213f565b838193949297503d8311612191575b61217d81836125ca565b810103126116625751938691906024611d97565b503d612173565b809250868092503d83116121c9575b6121b181836125ca565b81010312612159576121c38791612823565b38611d61565b503d6121a7565b503461011c57602036600319011261011c576103206121f0611441612392565b61011a60405180926123a8565b503461011c57604036600319011261011c576004356001600160401b0381116109175761222e9036906004016122f5565b9190612238612325565b612241846125eb565b9361224f60405195866125ca565b808552601f1961225e826125eb565b01845b8181106122de575050835b8181106122be576040805160208082528851818301819052818a0193830191895b82811061229a5784840385f35b90919282610100826122af6001948a5161233b565b0196019101949291909461228d565b80611446846122d461143c6122d995878a613536565b6135c2565b61226c565b6020906122e9613584565b82828a01015201612261565b9181601f84011215610fe7578235916001600160401b038311610fe7576020808501948460051b010111610fe757565b602435906001600160a01b0382168203610fe757565b60e0809160018060a01b038151168452602081015115156020850152604081015115156040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b600435906001600160a01b0382168203610fe757565b60018060a01b038082511683526020820151602084015260408201516040840152606082015160608401526080820151608084015260a082015160a084015260c082015160c084015260e082015160e084015261010080830151908401526101208083015115159084015261014090818301511690830152610160808201519083015261018080820151908301526101a0808201511515908301526101c0808201511515908301526101e08082015190830152610200808201519083015261022080820151908301526102408082015190830152610260808201519083015261028060ff8183015116908301526102a080820151908301526102c080820151908301526102e0808201519083015261030080910151910152565b604435906001600160a01b0382168203610fe757565b606435906001600160a01b0382168203610fe757565b602081019081106001600160401b03821117610d2257604052565b608081019081106001600160401b03821117610d2257604052565b606081019081106001600160401b03821117610d2257604052565b604081019081106001600160401b03821117610d2257604052565b6101c081019081106001600160401b03821117610d2257604052565b6101a081019081106001600160401b03821117610d2257604052565b61032081019081106001600160401b03821117610d2257604052565b61010081019081106001600160401b03821117610d2257604052565b90601f801991011681019081106001600160401b03821117610d2257604052565b6001600160401b038111610d225760051b60200190565b81601f82011215610fe757803591612619836125eb565b9261262760405194856125ca565b808452602092838086019260051b820101928311610fe7578301905b828210612651575050505090565b81358152908301908301612643565b90815180825260208080930193019160005b828110612680575050505090565b83516001600160a01b031685529381019392810192600101612672565b90815180825260208080930193019160005b8281106126bd575050505090565b8351855293810193928101926001016126af565b60005b8381106126e45750506000910152565b81810151838201526020016126d4565b9060209161270d815180928185528580860191016126d1565b601f01601f1916010190565b90815180825260208092019182818360051b85019501936000915b8483106127445750505050505090565b909192939495848061275e83856001950387528a516126f4565b9801930193019194939290612734565b6040519061277b82612592565b816103006000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152826101a0820152826101c0820152826101e08201528261020082015282610220820152826102408201528261026082015282610280820152826102a0820152826102c0820152826102e08201520152565b51906001600160a01b0382168203610fe757565b51908115158203610fe757565b519060ff82168203610fe757565b90816060910312610fe75761286681612837565b9161287f604061287860208501612844565b9301612837565b90565b909291926001600160401b038111610d2257604051916128ac601f8301601f1916602001846125ca565b829482845282820111610fe75760206128c69301906126d1565b565b9080601f83011215610fe757815161287f92602001612882565b604051906128ef82612524565b60006040838281528260208201520152565b90816060910312610fe7578051916040602083015192015190565b9061292561276e565b50604051635fe3b56760e01b81526020816004816001600160a01b0387165afa908115612f0d576000916134d7575b50604051632b1e137760e21b81526000906020816004816001600160a01b0389165afa90811561118057829161349d575b5015613350575060009260125b604051638e8f294b60e01b81526001600160a01b0380841660048301529092906060908490602490829088165afa928315612f0d576000938460805261332b575b5060405163243cdb5560e01b815260805160ff1660048201526000816024816001600160a01b0389165afa908115612f0d57600091613272575b50612a166128e2565b61018052604051637f4e225760e11b81526020816004816001600160a01b0387165afa908115612f0d57600091613238575b5015613212578060406060920151610180515260a08101516040610180510152015160206101805101525b604051634ada90af60e01b81526060816004816001600160a01b0389165afa8015612f0d57600060a052600060c0526000610200526131e9575b5060405163bd6d894d60e01b815260208160048160006001600160a01b0387165af18015612f0d576000610140526131ae575b50604051630ae9d70b60e41b81526020816004816001600160a01b0386165afa8015612f0d57600061016052613173575b50604051631f1f3b4560e31b81526020816004816001600160a01b0386165afa8015612f0d57600061012052613138575b506040516305cee64160e21b8152926020846004816001600160a01b0386165afa938415612f0d57600094613104575b506040516308f7a6e360e31b8152966020886004816001600160a01b0387165afa978815612f0d576000986130d0575b50604051638f840ddd60e01b8152916020836004816001600160a01b0388165afa928315612f0d5760009361309c575b506040516318160ddd60e01b81526020816004816001600160a01b0389165afa908115612f0d5760009161306a575b50604051631d8e90d160e11b8152906020826004816001600160a01b038a165afa918215612f0d57600092613036575b5060405163313ce56760e01b8152946020866004816001600160a01b038b165afa958615612f0d57600096612ffa575b50604051637f4e225760e11b81529b60208d6004816001600160a01b038c165afa998a15612f0d5760009a612fc2575b604051632b1e137760e21b81529d5060208e6004816001600160a01b038d165afa9b8c15612f0d5760009c612f86575b60405163252c221960e11b81526001600160a01b038b811660048301529e9f509d6020908f90602490829085165afa9d8e15612f0d5760009e612f52575b50604051639cc7becf60e01b81526001600160a01b03808c166004830152909160209183916024918391165afa8015612f0d57600060e052612f19575b506101805180516101c0526040808201516101e0526020918201516101a0525161024081815263131d060f60e21b909152516004816001600160a01b038d165afa806102205215612f0d5760006101005261022051612eca575b60ff98612da96040518061026052612592565b60018060a01b03166102605152610140516020610260510152610160516040610260510152610120516060610260510152608061026051015260a061026051015260c061026051015260e0610260510152610100610260510152151561012061026051015260018060a01b03166101406102605101521661016061026051015261018061026051015215156101a061026051015215156101c06102605101526101e061026051015260e05161020061026051015260a05161022061026051015260c051610240610260510152610200516102608051015260ff608051166102806102605101526101c0516102a06102605101526101a0516102c06102605101526101e0516102e0610260510152610100516103006102605101526102605190565b6020983d602011612f05575b612ee38a610240516125ca565b602061024051809b81010312612efe57985161010052612d96565b6101005180fd5b3d9950612ed6565b6040513d6000823e3d90fd5b6020813d602011612f4a575b81612f32602093836125ca565b81010312612f44575160e05238612d3c565b60e05180fd5b3d9150612f25565b909d6020823d602011612f7e575b81612f6d602093836125ca565b8101031261011c5750519c38612cff565b3d9150612f60565b9b60208f813d8311612fbb575b612f9d81836125ca565b8101031261011c5750612fb260209d9e612837565b9b8e9d50612cc1565b503d612f93565b9960208e813d8311612ff3575b612fd981836125ca565b8101031261011c5750612fed60209d612837565b99612c91565b503d612fcf565b90956020823d60201161302e575b81613015602093836125ca565b8101031261011c575061302790612844565b9438612c61565b3d9150613008565b90916020823d602011613062575b81613051602093836125ca565b8101031261011c5750519038612c31565b3d9150613044565b906020823d602011613094575b81613084602093836125ca565b8101031261011c57505138612c01565b3d9150613077565b90926020823d6020116130c8575b816130b7602093836125ca565b8101031261011c5750519138612bd2565b3d91506130aa565b90976020823d6020116130fc575b816130eb602093836125ca565b8101031261011c5750519638612ba2565b3d91506130de565b90936020823d602011613130575b8161311f602093836125ca565b8101031261011c5750519238612b72565b3d9150613112565b6020813d60201161316b575b81613151602093836125ca565b8101031261316457516101205238612b42565b6101205180fd5b3d9150613144565b6020813d6020116131a6575b8161318c602093836125ca565b8101031261319f57516101605238612b11565b6101605180fd5b3d915061317f565b6020813d6020116131e1575b816131c7602093836125ca565b810103126131da57516101405238612ae0565b6101405180fd5b3d91506131ba565b6132019060603d6060116109595761094781836125ca565b9160a05260c0526102005238612aad565b60c060808201918251610180515201516040610180510152516020610180510152612a73565b906020823d60201161326a575b81613252602093836125ca565b8101031261011c575061326490612837565b38612a48565b3d9150613245565b3d8083833e61328181836125ca565b81016020828203126107d65781516001600160401b0392838211610927570191610100838303126103ac57604051936132b9856125ae565b6132c284612844565b8552602084015191821161011c5750916132e360e0926133209483016128c8565b602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015260c081015160c085015201612837565b60e082015238612a0d565b61334591935060603d60601161209d5761208b81836125ca565b5060805291386129d3565b604051636f307dc360e01b8082529491906020816004816001600160a01b0387165afa91821561091b578092613460575b5050604051948552936020816004816001600160a01b0386165afa908115612f0d57600091613421575b5060405163313ce56760e01b815290602090829060049082906001600160a01b03165afa8015612f0d576000906133e7575b60ff915016612992565b6020823d602011613419575b81613400602093836125ca565b8101031261011c575061341460ff91612844565b6133dd565b3d91506133f3565b906020823d602011613458575b8161343b602093836125ca565b8101031261011c57506020613451600492612823565b91506133ab565b3d915061342e565b9091506020823d602011613495575b8161347c602093836125ca565b8101031261011c575061348e90612823565b3880613381565b3d915061346f565b90506020813d6020116134cf575b816134b8602093836125ca565b81010312610917576134c990612837565b38612985565b3d91506134ab565b906020823d602011613509575b816134f1602093836125ca565b8101031261011c575061350390612823565b38612954565b3d91506134e4565b60001981146135205760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156135465760051b0190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b0381168103610fe75790565b80518210156135465760209160051b010190565b60405190613591826125ae565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b6135ca613584565b50604080516370a0823160e01b8082526001600160a01b0394851660048301819052938516946020949390929085826024818a5afa91821561399757600092613968575b5080516305eff7ef60e21b81526004810186905292868460248160008c5af193841561395d5760009461392e575b508151633af9e66960e01b81526004810187905294878660248160008d5af195861561383f57908992916000976138fa575b5060009084518a81600481632b1e137760e21b988982525afa9081156138bb5783916138c5575b50156137925750505085319531965b8251637f4e225760e11b815281816004818d5afa9081156137525760009161375d575b50835192835281836004818d5afa9283156137525760009361371b575b508351996136f18b6125ae565b8a521515908901521515908701526060860152608085015260a084015260c083015260e082015290565b90928282813d831161374b575b61373281836125ca565b8101031261011c575061374490612837565b91386136e4565b503d613728565b84513d6000823e3d90fd5b908282813d831161378b575b61377381836125ca565b8101031261011c575061378590612837565b386136c7565b503d613769565b8451636f307dc360e01b81528a816004818f5afa9081156138bb578391613886575b50169184519081528860048201528981602481865afa91821561387b5790818b9361384a575b5050976044855180948193636eb1769f60e11b835260048301528d60248301525afa90811561383f57600091613812575b50966136a4565b908882813d8311613838575b61382881836125ca565b8101031261011c5750513861380b565b503d61381e565b83513d6000823e3d90fd5b91509182813d8311613874575b61386181836125ca565b8101031261011c575088905138806137da565b503d613857565b8551903d90823e3d90fd5b90508a81813d83116138b4575b61389d81836125ca565b810103126107d6576138ae90612823565b386137b4565b503d613893565b86513d85823e3d90fd5b90508a81813d83116138f3575b6138dc81836125ca565b810103126107d6576138ed90612837565b38613695565b503d6138d2565b919250958882813d8311613927575b61391381836125ca565b8101031261011c575090889151953861366e565b503d613909565b90938782813d8311613956575b61394581836125ca565b8101031261011c575051923861363c565b503d61393b565b82513d6000823e3d90fd5b90918682813d8311613990575b61397f81836125ca565b8101031261011c575051903861360e565b503d613975565b50513d6000823e3d90fd5b604080516139af8161253f565b600080825260209182018190528251635fe3b56760e01b81526001600160a01b0394851694919391908381600481895afa908115613acb57829185918791613ad5575b5060048551809481936307dc0d1d60e41b8352165afa908115613acb579084918691613a95575b50602484518094819363fc57d4df60e01b83528a6004840152165afa938415613a8a578094613a58575b50505192613a508461253f565b835282015290565b909193508282813d8311613a83575b613a7181836125ca565b8101031261011c575051913880613a43565b503d613a67565b8251903d90823e3d90fd5b82819392503d8311613ac4575b613aac81836125ca565b8101031261092757613abe8491612823565b38613a19565b503d613aa2565b83513d87823e3d90fd5b92505081813d8311613b05575b613aec81836125ca565b810103126109275783613aff8392612823565b386139f2565b503d613ae2565b81601f82011215610fe757805191613b23836125eb565b92613b3160405194856125ca565b808452602092838086019260051b820101928311610fe7578301905b828210613b5b575050505090565b838091613b6784612823565b815201910190613b4d565b60405190613b7f82612509565b60006060838281528260208201528260408201520152565b51906001600160601b0382168203610fe757565b608081830312610fe7578051926001600160401b0393848111610fe75783613bd4918401613b0c565b93602080840151828111610fe757840185601f82011215610fe757805190613bfb826125eb565b90604092613c0b845193846125ca565b808352848084019160051b83010191898311610fe75785809101915b838310613d4457505050509581860151848111610fe757860181601f82011215610fe7578051613c56816125eb565b91613c63855193846125ca565b818352858084019260051b82010191848311610fe757868201905b838210613d1f575050505095606081015190858211610fe757019181601f84011215610fe757825190613cb0826125eb565b95613cbd825197886125ca565b828752858088019360051b86010194848611610fe757868101935b868510613cea57505050505050505090565b8451838111610fe757820186603f82011215610fe7578891613d1488838886809601519101612882565b815201940193613cd8565b8151898111610fe7578891613d39888480948801016128c8565b815201910190613c7e565b8251815291810191869101613c27565b3563ffffffff81168103610fe75790565b15613d6d5750565b60405162461bcd60e51b815260206004820152908190613d919060248301906126f4565b0390fd5b604080516302a9bed760e61b81526001600160a01b0392831660048201819052929093169290916020918281602481885afa801561375257600090613ed7575b60ff915016159384613e6c575b5083613def575b50505090565b82516305cee64160e21b815293508190849060049082905afa918215613e625750600091613e2d575b50670de0b6b3a7640000915014388080613de9565b82813d8311613e5b575b613e4181836125ca565b8101031261011c5750670de0b6b3a7640000905138613e18565b503d613e37565b513d6000823e3d90fd5b6024919450829084519283809263715cfdd960e01b82528860048301525afa90811561383f57600091613ea2575b509238613de2565b908282813d8311613ed0575b613eb881836125ca565b8101031261011c5750613eca90612837565b38613e9a565b503d613eae565b8382813d8311613f05575b613eec81836125ca565b8101031261011c5750613f0060ff91612844565b613dd5565b503d613ee2565b8115613f16570490565b634e487b7160e01b600052601260045260246000fd5b670de0b6b3a764000091613f5a916000604051613f48816124ee565b52519051613f54613f98565b9161401b565b0460405190613f68826124ee565b815290565b90613f8b916000604051613f80816124ee565b525190613f54613f98565b60405190613f68826124ee565b60405190613fa58261253f565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b801591828015614013575b61400b57670de0b6b3a764000080830293838504821417156135205761400561287f9385613f0c565b14613d65565b505050600090565b506000613fdc565b9091811592838015614051575b6140485780830293838504821417156135205761400561287f9385613f0c565b50505050600090565b50801561402856fea2646970667358221220af17f5433dce504e5d7fde68f44ab957caa67a2a986e0152d8bf9b2cf3c7093a64736f6c63430008130033";

type CompoundLensConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundLensConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundLens__factory extends ContractFactory {
  constructor(...args: CompoundLensConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CompoundLens & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CompoundLens__factory {
    return super.connect(runner) as CompoundLens__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundLensInterface {
    return new Interface(_abi) as CompoundLensInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CompoundLens {
    return new Contract(address, _abi, runner) as unknown as CompoundLens;
  }
}
