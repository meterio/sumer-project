/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CompLogic,
  CompLogicInterface,
} from "../../../contracts/Comptroller/CompLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompBorrowSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CompGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompSupplySpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "ContributorCompSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compBorrowIndex",
        type: "uint256",
      },
    ],
    name: "DistributedBorrowerComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "supplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compSupplyIndex",
        type: "uint256",
      },
    ],
    name: "DistributedSupplierComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "SetComptroller",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_grantComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "supplySpeeds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "borrowSpeeds",
        type: "uint256[]",
      },
    ],
    name: "_setCompSpeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "compSpeed",
        type: "uint256",
      },
    ],
    name: "_setContributorCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "calculateComp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "borrowers",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "suppliers",
        type: "bool",
      },
    ],
    name: "claimSumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "claimSumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "claimSumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "comp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compContributorSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compInitialIndex",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplySpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplyState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "distributeBorrowerComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "distributeSupplierComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comp",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "initializeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastContributorBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supplySpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowSpeed",
        type: "uint256",
      },
    ],
    name: "setCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "_comptroller",
        type: "address",
      },
    ],
    name: "setComptroller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "updateCompBorrowIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "updateCompSupplyIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "updateContributorRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576132fb908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a7146118a45750806306fb2592146115ec578063082bc0ab146115b6578063109d0af81461158d578063248a9ca31461155e57806327efe3cb146114a85780632f2ff15d146113e157806336568abe1461134f578063485cc955146111695780634f54b3c01461112a578063598ee1cb146110795780635a2e013314610a155780635f87769b146109d75780635fe3b567146109ae57806365658c3e1461095a57806369063a56146108d15780636aa875b5146108975780636b79c38d14610845578063741b252514610824578063759c082a146107185780638bad38dd146106ab5780638c57804e146106595780639010d07c1461061257806391d14854146105c5578063986ab8381461058b578063a217fddf1461056f578063a7f0e23114610546578063a8b4394814610419578063b21be7fd146103c8578063bea6b8b81461038e578063ca0af0431461033d578063ca15c87314610311578063cc7ebdc4146102d7578063d29424f214610294578063d547741f14610255578063f47dbe02146101f55763f4a433c0146101b657600080fd5b346101f05760203660031901126101f0576001600160a01b036101d76119b5565b1660005260d16020526020604060002054604051908152f35b600080fd5b346101f05760603660031901126101f05761020e6119b5565b6102166119cb565b9060203660431901126101f057610253916040519161023483611911565b604435835261024e60018060a01b0360ca5416331461216e565b6128ea565b005b346101f05760403660031901126101f0576102536004356102746119cb565b9080600052606560205261028f600160406000200154611ca1565b611dfa565b346101f05760403660031901126101f0576102ad6119b5565b6024359067ffffffffffffffff82116101f0576102d16102539236906004016119e1565b90612b9c565b346101f05760203660031901126101f0576001600160a01b036102f86119b5565b1660005260cb6020526020604060002054604051908152f35b346101f05760203660031901126101f05760043560005260976020526020604060002054604051908152f35b346101f05760403660031901126101f0576103566119b5565b61035e6119cb565b9060018060a01b0380911660005260cf602052604060002091166000526020526020604060002054604051908152f35b346101f05760203660031901126101f0576001600160a01b036103af6119b5565b1660005260cd6020526020604060002054604051908152f35b346101f05760403660031901126101f0576103e16119b5565b6103e96119cb565b9060018060a01b0380911660005260ce602052604060002091166000526020526020604060002054604051908152f35b346101f05760603660031901126101f05767ffffffffffffffff6004358181116101f05761044b9036906004016119e1565b906024358181116101f057610464903690600401611a4f565b906044359081116101f05761047d903690600401611a4f565b91610486611aad565b805191805183148061053c575b156104e55760005b8381106104a457005b6104e0906104db6001600160a01b036104bd8387612b88565b51166104c98386612b88565b516104d4848a612b88565b51916121e8565b612e37565b61049b565b60405162461bcd60e51b815260206004820152602960248201527f436f6d7074726f6c6c65723a3a5f736574436f6d7053706565647320696e76616044820152681b1a59081a5b9c1d5d60ba1b6064820152608490fd5b5083518314610493565b346101f05760003660031901126101f05760206040516a0c097ce7bc90715b34b9f160241b8152f35b346101f05760003660031901126101f057602060405160008152f35b346101f05760203660031901126101f0576001600160a01b036105ac6119b5565b1660005260cc6020526020604060002054604051908152f35b346101f05760403660031901126101f0576105de6119cb565b600435600052606560205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101f05760403660031901126101f057600435600052609760205260206106406024356040600020611fb9565b905460405160039290921b1c6001600160a01b03168152f35b346101f05760203660031901126101f0576001600160a01b0361067a6119b5565b16600090815260d360209081526040918290205482516001600160e01b038216815260e09190911c91810191909152f35b346101f05760203660031901126101f0576004356001600160a01b038116908190036101f05760207f51e0228fe901c430722ddefd46e1d63fd4127597ef3ae7c79ae73d2de14fbf38916106fd611aad565b60ca80546001600160a01b03191682179055604051908152a1005b346101f05760403660031901126101f0576107316119b5565b60243563ffffffff811681036101f05760ca54610253926001600160a01b039161075e908316331461216e565b1660005260d2602052604060002060d36020526107bd826040600020835460018060e01b039081811615610802575b508154908116156107e0575b5080546001600160e01b031660e09290921b6001600160e01b031916919091179055565b80546001600160e01b031660e09290921b6001600160e01b031916919091179055565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b17815586610799565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b1785558761078d565b346101f05760203660031901126101f0576102536108406119b5565b612a5e565b346101f05760203660031901126101f0576001600160a01b036108666119b5565b16600090815260d260209081526040918290205482516001600160e01b038216815260e09190911c91810191909152f35b346101f05760203660031901126101f0576001600160a01b036108b86119b5565b1660005260d06020526020604060002054604051908152f35b346101f05760203660031901126101f05760046108ec6119b5565b60ca5460405163b0772d0b60e01b81529260009184919082906001600160a01b03165afa90811561094e5761025392600092610929575b50612b9c565b6109479192503d806000833e61093f818361197b565b810190612afe565b9083610923565b6040513d6000823e3d90fd5b346101f05760403660031901126101f0576109736119b5565b60203660231901126101f0576040516102539161098f82611911565b60243582526109a960018060a01b0360ca5416331461216e565b612669565b346101f05760003660031901126101f05760ca546040516001600160a01b039091168152602090f35b346101f05760603660031901126101f0576102536109f36119b5565b610a0860018060a01b0360ca5416331461216e565b60443590602435906121e8565b346101f05760203660031901126101f057610a2e6119b5565b60ca5460405163b0772d0b60e01b815290600090829060049082906001600160a01b03165afa90811561094e5760009161105e575b506001600160a01b038216600090815260cb60205260408120545b8251821015611053576001600160a01b03610a998385612b88565b5160405163aa5af0fd60e01b8152911691602082600481865afa91821561094e5760009261101f575b5060405191610ad083611911565b82528260005260d3602052604060002060405190610aed82611943565b5460018060e01b038116825260e01c60208201528360005260d160205260406000205490610b29610b1c61245d565b6401000000004310613077565b610b5d63ffffffff602083015116610b51610b4261310b565b63ffffffff4316831115613077565b63ffffffff431661205b565b918215158080611016575b15610ff957506040516308f7a6e360e31b81526020816004818a5afa90811561094e57600091610fc5575b50610c7d93610bb8610bb0610bc793610baa61315c565b90613195565b88519061325f565b92610bc161315c565b91613221565b8115610fb457610bf991610bda9161329b565b8251604051906001600160e01b0316610bf282611911565b815261309b565b51610c11610c05612496565b600160e01b8310613077565b6001600160e01b031681524363ffffffff1660208201525b51600085815260cf602090815260408083206001600160a01b038c168452909152902054906001600160e01b0316811580610eea575b610ed4575b610c78610c6f61310b565b82841115613077565b61205b565b9160405192610c8b84611911565b83526040516395dd919360e01b81526001600160a01b0388166004820152602081602481885afa90811561094e57600091610f7e575b50610d0193610cf06a0c097ce7bc90715b34b9f160241b93610ce8610cfa94610baa61315c565b90519061325f565b9051610bc161315c565b04906130ca565b908060005260d260205260406000209060405191610d1e83611943565b5460018060e01b038116835260e01c60208301528060005260d0602052604060002054610d5a63ffffffff602085015116610b51610b4261310b565b8015158080610f75575b15610f5357506040516318160ddd60e01b815291602083600481875afa92831561094e57600093610f1c575b5093602092610da7610e1d93602497610bc161315c565b8115610f0257610dba91610bda9161329b565b51610dc6610c05612496565b6001600160e01b031681524363ffffffff16838201525b51600084815260ce845260408082206001600160a01b038c1683528552902054906001600160e01b0316811580610eea57610ed457610c78610c6f61310b565b9160405192610e2b84611911565b83526040516370a0823160e01b81526001600160a01b038916600482015293849182905afa91821561094e57600092610e90575b50916a0c097ce7bc90715b34b9f160241b610cfa610e8493610e8a9551610bc161315c565b91612e37565b90610a7e565b9150916020823d602011610ecc575b81610eac6020938361197b565b810103126101f057905190916a0c097ce7bc90715b34b9f160241b610e5f565b3d9150610e9f565b6a0c097ce7bc90715b34b9f160241b9150610c64565b506a0c097ce7bc90715b34b9f160241b811015610c5f565b5050610dba604051610f1381611911565b60008152610bda565b9250936020833d602011610f4b575b81610f386020938361197b565b810103126101f057915191936024610d90565b3d9150610f2b565b60209250610e1d91509360249415610ddd5763ffffffff431683820152610ddd565b50821515610d64565b9190506020823d602011610fac575b81610f9a6020938361197b565b810103126101f0579051610d01610cc1565b3d9150610f8d565b5050610bf9604051610f1381611911565b90506020813d602011610ff1575b81610fe06020938361197b565b810103126101f05751610c7d610b93565b3d9150610fd3565b9050610c7d925015610c295763ffffffff43166020820152610c29565b50811515610b68565b9091506020813d60201161104b575b8161103b6020938361197b565b810103126101f057519086610ac2565b3d915061102e565b602090604051908152f35b61107391503d806000833e61093f818361197b565b82610a63565b346101f05760403660031901126101f0576110926119b5565b7f386537fa92edc3319af95f1f904dcf1900021e4f3f4e08169a577a09076e66b36020602435926110c1611aad565b6110ca81612a5e565b8361110b576001600160a01b038116600090815260cd835260408120555b6001600160a01b0316600081815260cc83526040908190208590555193845292a2005b6001600160a01b038116600090815260cd8352604090204390556110e8565b346101f05760403660031901126101f0576102536111466119b5565b61114e6119cb565b9061116460018060a01b0360ca5416331461216e565b612773565b346101f05760403660031901126101f0576111826119b5565b61118a6119cb565b9060005460ff8160081c161591828093611342575b801561132b575b156112cf5760ff1980831660011760005561123092846112bd575b5060c980546001600160a01b0319166001600160a01b03968716179055931660008181527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260409091205490949060ff161561126e575b5060008052609784526040600020611fd1565b5061123757005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196000541660005560405160018152a1005b600080526065855260406000208260005285526001604060002091825416179055338160007f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a48461121d565b61ffff191661010117600055856111c1565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156111a65750600160ff8316146111a6565b50600160ff83161061119f565b346101f05760403660031901126101f0576113686119cb565b336001600160a01b038216036113845761025390600435611dfa565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b346101f05760403660031901126101f05761025360043560976114026119cb565b91806000526020906065825261141f600160406000200154611ca1565b60008181526065835260408082206001600160a01b0390961680835295845290205460ff1615611458575b600052526040600020611fd1565b806000526065825260406000208460005282526040600020600160ff198254161790553384827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a461144a565b346101f05760403660031901126101f0576114c16119b5565b6024356114cc611aad565b6114d68183612e46565b61151957604080516001600160a01b0393909316835260208301919091527f98b2f82a3a07f223a0be64b3d0f47711c64dccd1feafb94aa28156b38cd9695c91a1005b60405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e7420636f6d7020666f72206772616e7400000000006044820152606490fd5b346101f05760203660031901126101f05760043560005260656020526020600160406000200154604051908152f35b346101f05760003660031901126101f05760c9546040516001600160a01b039091168152602090f35b346101f05760203660031901126101f0576102536115d26119b5565b6115e760018060a01b0360ca5416331461216e565b6124cf565b346101f05760803660031901126101f05767ffffffffffffffff6004358181116101f05761161e9036906004016119e1565b906024359081116101f0576116379036906004016119e1565b906044359081151582036101f0576064359081151582036101f05760005b8451811015611835576001600160a01b03806116718388612b88565b5116908060ca54166040518091638e8f294b60e01b825284600483015281602460609485935afa91821561094e57600092611806575b5050156117c95785611714575b846116ca575b50506116c590612e37565b611655565b9391946116d88297926124cf565b60005b845181101561170357806104db876116f66116fe9489612b88565b51168a612773565b6116db565b50909550939092506116c5866116ba565b9291909593946040519463aa5af0fd60e01b865260209586816004818c5afa96871561094e57600097611799575b50506040519561175187611911565b865261175d8689612669565b60005b845181101561178957806104db888861177c611784958a612b88565b51168c6128ea565b611760565b50969192939095809550506116b4565b9080929750813d83116117c2575b6117b1818361197b565b810103126101f05751948880611742565b503d6117a7565b60405162461bcd60e51b81526020600482015260156024820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b6118259250803d1061182e575b61181d818361197b565b8101906121b4565b505088806116a7565b503d611813565b5060005b81518110156102535761189f906001600160a01b03806118598386612b88565b5116816118668487612b88565b511660005260cb9061188360209183835260406000205490612e46565b9261188e8588612b88565b511660005252604060002055612e37565b611839565b346101f05760203660031901126101f0576004359063ffffffff60e01b82168092036101f057602091635a05180f60e01b81149081156118e6575b5015158152f35b637965db0b60e01b811491508115611900575b50836118df565b6301ffc9a760e01b149050836118f9565b6020810190811067ffffffffffffffff82111761192d57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761192d57604052565b6080810190811067ffffffffffffffff82111761192d57604052565b90601f8019910116810190811067ffffffffffffffff82111761192d57604052565b67ffffffffffffffff811161192d5760051b60200190565b600435906001600160a01b03821682036101f057565b602435906001600160a01b03821682036101f057565b81601f820112156101f0578035916119f88361199d565b92611a06604051948561197b565b808452602092838086019260051b8201019283116101f0578301905b828210611a30575050505090565b81356001600160a01b03811681036101f0578152908301908301611a22565b81601f820112156101f057803591611a668361199d565b92611a74604051948561197b565b808452602092838086019260051b8201019283116101f0578301905b828210611a9e575050505090565b81358152908301908301611a90565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260408083205490929060ff1615611aef57505050565b611af833611eaa565b83519082611b058361195f565b60428352848301936060368637835115611c8d5760308553835190600191821015611c8d5790607860218601536041915b818311611c1f57505050611bdd57611b8b938593611bc393611bb4604894611bd99951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611dab565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190611dab565b0103602881018552018361197b565b5162461bcd60e51b815291829160048301611dce565b0390fd5b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611c79576f181899199a1a9b1b9c1cb0b131b232b360811b901a611c4f8588611e83565b5360041c928015611c6557600019019190611b36565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b600081815260209060658252604092838220338352835260ff848320541615611cca5750505050565b611cd333611eaa565b845191611cdf8361195f565b60428352848301936060368637835115611c8d5760308553835190600191821015611c8d5790607860218601536041915b818311611d6557505050611bdd57611b8b938593611bc393611bb4604894611bd99951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611dab565b909192600f81166010811015611c79576f181899199a1a9b1b9c1cb0b131b232b360811b901a611d958588611e83565b5360041c928015611c6557600019019190611d10565b60005b838110611dbe5750506000910152565b8181015183820152602001611dae565b60409160208252611dee8151809281602086015260208686019101611dab565b601f01601f1916010190565b906040611e389260009080825260656020528282209360018060a01b03169384835260205260ff8383205416611e3b575b815260976020522061207e565b50565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4611e2b565b908151811015611e94570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff82111761192d57604052602a8252602082016040368237825115611e9457603090538151600190811015611e9457607860218401536029905b808211611f4b575050611f075790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611fa4576f181899199a1a9b1b9c1cb0b131b232b360811b901a611f7a8486611e83565b5360041c918015611f8f576000190190611ef7565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b8054821015611e945760005260206000200190600090565b919060018301600090828252806020526040822054156000146120555784549468010000000000000000861015612041578361203161201a886001604098999a01855584611fb9565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9190820391821161206857565b634e487b7160e01b600052601160045260246000fd5b9060018201906000928184528260205260408420549081151560001461216757600019918083018181116121535782549084820191821161213f5780820361210a575b505050805480156120f6578201916120d98383611fb9565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b61212a61211a61201a9386611fb9565b90549060031b1c92839286611fb9565b905586528460205260408620553880806120c1565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b1561217557565b60405162461bcd60e51b815260206004820152600a602482015269666f7262696464656e2160b01b6044820152606490fd5b519081151582036101f057565b908160609103126101f0576121c8816121a7565b91602082015160ff811681036101f05760406121e59193016121a7565b90565b60ca5460408051638e8f294b60e01b81526001600160a01b03808516600483018190529497969495949360609183916024918391165afa9081156123425760009161243d575b50156123fa5782156123c757811561239457836000528360209360d08552848184600020540361234d575b505060005260d1835281816000205403612276575b505050509050565b805163aa5af0fd60e01b81528381600481885afa908115612342576000916122f2575b506122d5907f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e5379596978351916122ce83611911565b8252612669565b8460005260d1835281816000205551908152a2803880808061226e565b908482813d831161233b575b612308818361197b565b810103126123385750517f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e537612299565b80fd5b503d6122fe565b82513d6000823e3d90fd5b7fdeafccd0c0b768b2529f7dcbbe58e155d6023059150b7490ed4535cc3744b92d916123788a6124cf565b8360005260d082528085600020558451908152a2833884612259565b5162461bcd60e51b815260206004820152600d60248201526c0626f72726f7753706565643d3609c1b6044820152606490fd5b5162461bcd60e51b815260206004820152600d60248201526c0737570706c7953706565643d3609c1b6044820152606490fd5b5162461bcd60e51b815260206004820152601960248201527f636f6d70206d61726b6574206973206e6f74206c6973746564000000000000006044820152606490fd5b612455915060603d811161182e5761181d818361197b565b50503861222e565b6040519061246a82611943565b601c82527f626c6f636b206e756d62657220657863656564732033322062697473000000006020830152565b604051906124a382611943565b601a82527f6e657720696e64657820657863656564732032323420626974730000000000006020830152565b6001600160a01b0316600081815260d26020908152604080832060d0835281842054949594939092612502610b1c61245d565b63ffffffff43169461252c855460e01c61252661251d61310b565b89831115613077565b8761205b565b978815158080612660575b1561262f5750826004918651928380926318160ddd60e01b82525afa9283156126255784936125ef575b50506125d8969761257491610bc161315c565b81156125da57612584925061329b565b6125a8835492519161259583611911565b6001600160e01b0384811684529261309b565b516125b4610c05612496565b6001600160e01b0391161660e09390931b6001600160e01b03191692909217905550565b565b50508151906125e882611911565b8152612584565b9080929350813d831161261e575b612607818361197b565b8101031261261a57519087612574612561565b8280fd5b503d6125fd565b85513d86823e3d90fd5b959798505050505050612640575050565b81546001600160e01b031660e09190911b6001600160e01b031916179055565b50821515612537565b6001600160a01b0316600081815260d36020908152604080832060d183528184205494969592949093919261269f610b1c61245d565b63ffffffff4316956126c9865460e01c6126c36126ba61310b565b8a831115613077565b8861205b565b98891515808061276a575b156127585750816004918751928380926308f7a6e360e31b82525afa91821561274e578592612718575b505097610bb861257492610ce86125d89a9b610baa61315c565b90809250813d8311612747575b61272f818361197b565b810103126127435751610bb86125746126fe565b8380fd5b503d612725565b86513d87823e3d90fd5b96989950505050505050612640575050565b508415156126d4565b6001600160a01b03908116600081815260d2602090815260408083205460ce83528184209690951680845295825280832080546001600160e01b039096169081905591969594909291908015806128d2575b6128bd575b6127e8906127e26127d961310b565b84831115613077565b8261205b565b968351976127f589611911565b885283516370a0823160e01b8152600481018790528181602481895afa90811561262557849161288e575b506128626a0c097ce7bc90715b34b9f160241b917f2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a9798999a51610bc161315c565b049287815260cb82528461287985828420546130ca565b9189815260cb845220558351928352820152a3565b90508181813d83116128b6575b6128a5818361197b565b810103126127435751612862612820565b503d61289b565b506a0c097ce7bc90715b34b9f160241b6127ca565b506a0c097ce7bc90715b34b9f160241b8210156127c5565b6001600160a01b03908116600081815260d3602090815260408083205460cf83528184209690951680845295825280832080546001600160e01b0390961690819055969796939490939190801580612a46575b612a31575b6129609061295a61295161310b565b85831115613077565b8361205b565b9784519861296d8a611911565b895284516395dd919360e01b81526004810188905282816024818a5afa90811561274e5785916129e0575b507f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a696979899610cf06a0c097ce7bc90715b34b9f160241b93610ce861286294610baa61315c565b90508281813d8311612a2a575b6129f7818361197b565b81010312612a2657517f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6612998565b8480fd5b503d6129ed565b506a0c097ce7bc90715b34b9f160241b612942565b506a0c097ce7bc90715b34b9f160241b83101561293d565b60018060a01b031660009080825260cc602052604082205460cd602052612a9d6040842054612a97612a8e61310b565b43831115613077565b4361205b565b9081151580612af5575b612ab2575b50505050565b612ad491612ac291610bc161315c565b82845260cb60205260408420546130ca565b90825260cb602052604082205560cd60205260404391205538808080612aac565b50801515612aa7565b60209081818403126101f05780519067ffffffffffffffff82116101f057019180601f840112156101f0578251612b348161199d565b93612b42604051958661197b565b818552838086019260051b8201019283116101f0578301905b828210612b69575050505090565b81516001600160a01b03811681036101f0578152908301908301612b5b565b8051821015611e945760209160051b010190565b6040805191612baa83611943565b6001938484526020908185019082368337855115611e94576001600160a01b039384169091526000865b612c53575b5050846000905b612bed575b505050505050565b8451811015612c4e578083612c05612c489388612b88565b511684612c128389612b88565b5116600052612c2b60cb91828652876000205490612e46565b9085612c37848a612b88565b511660005284528560002055612e37565b85612be0565b612be5565b8151811015612e325783612c678284612b88565b51168460ca54168651638e8f294b60e01b815280806004938585830152606092839160249586915afa918215612e2757600092612e08575b505015612dce5750848751809263aa5af0fd60e01b825281855afa908115612dc357600091612d96575b5086518994939291612cda82611911565b8152612ce68183612669565b886000865b612d53575b505050612cfc816124cf565b6000845b612d17575b5050612d1090612e37565b9091612bd4565b88949192939451811015612d4957806104db88612d37612d3f948d612b88565b511685612773565b8194939291612d00565b8194939250612d05565b888297939495969751821015612d8a57846104db91612d7584612d7d96612b88565b5116876128ea565b8990829695949392612ceb565b50829695949350612cf0565b908582813d8311612dbc575b612dac818361197b565b8101031261233857505138612cc9565b503d612da2565b87513d6000823e3d90fd5b875162461bcd60e51b8152918201869052601590820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b6044820152606490fd5b612e1e9250803d1061182e5761181d818361197b565b50503880612c9f565b8a513d6000823e3d90fd5b612bd9565b60001981146120685760010190565b9060018060a01b038060ca5416906040805191632aff3bff60e21b8352828187169485600483015281602460009687935afa90811561306a578491613050575b50835b8151811015612f215782612e9d8284612b88565b511680865260209060d18252858720541591829182612f08575b82612eec575b50508115612ee4575b50612ed957612ed490612e37565b612e89565b505050505050905090565b905038612ec6565b885260cf81528688208989529052508486205415153880612ebd565b60ce82528789208a8a5282528789205415159350612eb7565b5050909194925060c954168151926370a0823160e01b84523060048501526020938481602481865afa908115613046578791613015575b50851515908161300a575b50612f715750505050905090565b825163a9059cbb60e01b8582019081526001600160a01b03929092166024820152604480820196909652948552601f19948692839290918390612fb560648261197b565b51925af1503d15613004573d9067ffffffffffffffff8211612ff05790612fe7838694935195601f840116018561197b565b83523d92013e90565b634e487b7160e01b85526041600452602485fd5b50505090565b905085111538612f63565b90508481813d831161303f575b61302c818361197b565b8101031261303b575138612f58565b8680fd5b503d613022565b84513d89823e3d90fd5b61306491503d8086833e61093f818361197b565b38612e86565b50505051903d90823e3d90fd5b1561307f5750565b60405162461bcd60e51b8152908190611bd99060048301611dce565b906130b89160006040516130ae81611911565b52519051906130ca565b604051906130c582611911565b815290565b604051916130d783611943565b60118352706164646974696f6e206f766572666c6f7760781b6020840152810191828211612068576121e591831015613077565b6040519061311882611943565b60158252747375627472616374696f6e20756e646572666c6f7760581b6020830152565b8115613146570490565b634e487b7160e01b600052601260045260246000fd5b6040519061316982611943565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b8015918280156131d7575b6131cf57670de0b6b3a76400008083029383850482141715612068576131c96121e5938561313c565b14613077565b505050600090565b5060006131a0565b801591828015613219575b6131cf576a0c097ce7bc90715b34b9f160241b8083029383850482141715612068576131c96121e5938561313c565b5060006131ea565b9091811592838015613257575b61324e578083029383850482141715612068576131c96121e5938561313c565b50505050600090565b50801561322e565b906121e59161329660405161327381611943565b600e81526d646976696465206279207a65726f60901b6020820152831515613077565b61313c565b906132c06130b89260006040516132b181611911565b526132ba61315c565b906131df565b61325f56fea26469706673582212200daaecd85c9f39d8243088709ce82ad6899b3fc72e88bdd95d6c0f0221a4f22a64736f6c63430008130033";

type CompLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompLogic__factory extends ContractFactory {
  constructor(...args: CompLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CompLogic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CompLogic__factory {
    return super.connect(runner) as CompLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompLogicInterface {
    return new Interface(_abi) as CompLogicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CompLogic {
    return new Contract(address, _abi, runner) as unknown as CompLogic;
  }
}
