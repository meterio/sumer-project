/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CompLogic,
  CompLogicInterface,
} from "../../../contracts/Comptroller/CompLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompBorrowSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "CompGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "CompSupplySpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSpeed",
        type: "uint256",
      },
    ],
    name: "ContributorCompSpeedUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compBorrowIndex",
        type: "uint256",
      },
    ],
    name: "DistributedBorrowerComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "supplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compDelta",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compSupplyIndex",
        type: "uint256",
      },
    ],
    name: "DistributedSupplierComp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "comptroller",
        type: "address",
      },
    ],
    name: "SetComptroller",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_grantComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "supplySpeeds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "borrowSpeeds",
        type: "uint256[]",
      },
    ],
    name: "_setCompSpeeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "compSpeed",
        type: "uint256",
      },
    ],
    name: "_setContributorCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "calculateComp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "holders",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "borrowers",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "suppliers",
        type: "bool",
      },
    ],
    name: "claimSumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
    ],
    name: "claimSumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "holder",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "claimSumer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "comp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compAccrued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compBorrowerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compContributorSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "compInitialIndex",
    outputs: [
      {
        internalType: "uint224",
        name: "",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplierIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplySpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "compSupplyState",
    outputs: [
      {
        internalType: "uint224",
        name: "index",
        type: "uint224",
      },
      {
        internalType: "uint32",
        name: "block",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "distributeBorrowerComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "distributeSupplierComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comp",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "initializeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastContributorBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supplySpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowSpeed",
        type: "uint256",
      },
    ],
    name: "setCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IComptroller",
        name: "_comptroller",
        type: "address",
      },
    ],
    name: "setComptroller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "updateCompBorrowIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "updateCompSupplyIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contributor",
        type: "address",
      },
    ],
    name: "updateContributorRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576132da908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a71461186b5750806306fb2592146115ec578063082bc0ab146115b6578063109d0af81461158d578063248a9ca31461155e57806327efe3cb146114a85780632f2ff15d146113e157806336568abe1461134f578063485cc955146111695780634f54b3c01461112a578063598ee1cb146110795780635a2e013314610a155780635f87769b146109d75780635fe3b567146109ae57806365658c3e1461095a57806369063a56146108d15780636aa875b5146108975780636b79c38d14610845578063741b252514610824578063759c082a146107185780638bad38dd146106ab5780638c57804e146106595780639010d07c1461061257806391d14854146105c5578063986ab8381461058b578063a217fddf1461056f578063a7f0e23114610546578063a8b4394814610419578063b21be7fd146103c8578063bea6b8b81461038e578063ca0af0431461033d578063ca15c87314610311578063cc7ebdc4146102d7578063d29424f214610294578063d547741f14610255578063f47dbe02146101f55763f4a433c0146101b657600080fd5b346101f05760203660031901126101f0576001600160a01b036101d761197c565b1660005260d16020526020604060002054604051908152f35b600080fd5b346101f05760603660031901126101f05761020e61197c565b610216611992565b9060203660431901126101f0576102539160405191610234836118d8565b604435835261024e60018060a01b0360ca54163314612135565b6128c5565b005b346101f05760403660031901126101f057610253600435610274611992565b9080600052606560205261028f600160406000200154611c68565b611dc1565b346101f05760403660031901126101f0576102ad61197c565b6024359067ffffffffffffffff82116101f0576102d16102539236906004016119a8565b90612b77565b346101f05760203660031901126101f0576001600160a01b036102f861197c565b1660005260cb6020526020604060002054604051908152f35b346101f05760203660031901126101f05760043560005260976020526020604060002054604051908152f35b346101f05760403660031901126101f05761035661197c565b61035e611992565b9060018060a01b0380911660005260cf602052604060002091166000526020526020604060002054604051908152f35b346101f05760203660031901126101f0576001600160a01b036103af61197c565b1660005260cd6020526020604060002054604051908152f35b346101f05760403660031901126101f0576103e161197c565b6103e9611992565b9060018060a01b0380911660005260ce602052604060002091166000526020526020604060002054604051908152f35b346101f05760603660031901126101f05767ffffffffffffffff6004358181116101f05761044b9036906004016119a8565b906024358181116101f057610464903690600401611a16565b906044359081116101f05761047d903690600401611a16565b91610486611a74565b805191805183148061053c575b156104e55760005b8381106104a457005b6104e0906104db6001600160a01b036104bd8387612b63565b51166104c98386612b63565b516104d4848a612b63565b51916121f5565b612dd9565b61049b565b60405162461bcd60e51b815260206004820152602960248201527f436f6d7074726f6c6c65723a3a5f736574436f6d7053706565647320696e76616044820152681b1a59081a5b9c1d5d60ba1b6064820152608490fd5b5083518314610493565b346101f05760003660031901126101f05760206040516a0c097ce7bc90715b34b9f160241b8152f35b346101f05760003660031901126101f057602060405160008152f35b346101f05760203660031901126101f0576001600160a01b036105ac61197c565b1660005260cc6020526020604060002054604051908152f35b346101f05760403660031901126101f0576105de611992565b600435600052606560205260406000209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b346101f05760403660031901126101f057600435600052609760205260206106406024356040600020611f80565b905460405160039290921b1c6001600160a01b03168152f35b346101f05760203660031901126101f0576001600160a01b0361067a61197c565b16600090815260d360209081526040918290205482516001600160e01b038216815260e09190911c91810191909152f35b346101f05760203660031901126101f0576004356001600160a01b038116908190036101f05760207f51e0228fe901c430722ddefd46e1d63fd4127597ef3ae7c79ae73d2de14fbf38916106fd611a74565b60ca80546001600160a01b03191682179055604051908152a1005b346101f05760403660031901126101f05761073161197c565b60243563ffffffff811681036101f05760ca54610253926001600160a01b039161075e9083163314612135565b1660005260d2602052604060002060d36020526107bd826040600020835460018060e01b039081811615610802575b508154908116156107e0575b5080546001600160e01b031660e09290921b6001600160e01b031916919091179055565b80546001600160e01b031660e09290921b6001600160e01b031916919091179055565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b17815586610799565b6001600160e01b0319166a0c097ce7bc90715b34b9f160241b1785558761078d565b346101f05760203660031901126101f05761025361084061197c565b612a39565b346101f05760203660031901126101f0576001600160a01b0361086661197c565b16600090815260d260209081526040918290205482516001600160e01b038216815260e09190911c91810191909152f35b346101f05760203660031901126101f0576001600160a01b036108b861197c565b1660005260d06020526020604060002054604051908152f35b346101f05760203660031901126101f05760046108ec61197c565b60ca5460405163b0772d0b60e01b81529260009184919082906001600160a01b03165afa90811561094e5761025392600092610929575b50612b77565b6109479192503d806000833e61093f8183611942565b810190612ad9565b9083610923565b6040513d6000823e3d90fd5b346101f05760403660031901126101f05761097361197c565b60203660231901126101f0576040516102539161098f826118d8565b60243582526109a960018060a01b0360ca54163314612135565b612644565b346101f05760003660031901126101f05760ca546040516001600160a01b039091168152602090f35b346101f05760603660031901126101f0576102536109f361197c565b610a0860018060a01b0360ca54163314612135565b60443590602435906121f5565b346101f05760203660031901126101f057610a2e61197c565b60ca5460405163b0772d0b60e01b815290600090829060049082906001600160a01b03165afa90811561094e5760009161105e575b506001600160a01b038216600090815260cb60205260408120545b8251821015611053576001600160a01b03610a998385612b63565b5160405163aa5af0fd60e01b8152911691602082600481865afa91821561094e5760009261101f575b5060405191610ad0836118d8565b82528260005260d3602052604060002060405190610aed8261190a565b5460018060e01b038116825260e01c60208201528360005260d160205260406000205490610b29610b1c612438565b6401000000004310613056565b610b5d63ffffffff602083015116610b51610b426130ea565b63ffffffff4316831115613056565b63ffffffff4316612022565b918215158080611016575b15610ff957506040516308f7a6e360e31b81526020816004818a5afa90811561094e57600091610fc5575b50610c7d93610bb8610bb0610bc793610baa61313b565b90613174565b88519061323e565b92610bc161313b565b91613200565b8115610fb457610bf991610bda9161327a565b8251604051906001600160e01b0316610bf2826118d8565b815261307a565b51610c11610c05612471565b600160e01b8310613056565b6001600160e01b031681524363ffffffff1660208201525b51600085815260cf602090815260408083206001600160a01b038c168452909152902054906001600160e01b0316811580610eea575b610ed4575b610c78610c6f6130ea565b82841115613056565b612022565b9160405192610c8b846118d8565b83526040516395dd919360e01b81526001600160a01b0388166004820152602081602481885afa90811561094e57600091610f7e575b50610d0193610cf06a0c097ce7bc90715b34b9f160241b93610ce8610cfa94610baa61313b565b90519061323e565b9051610bc161313b565b04906130a9565b908060005260d260205260406000209060405191610d1e8361190a565b5460018060e01b038116835260e01c60208301528060005260d0602052604060002054610d5a63ffffffff602085015116610b51610b426130ea565b8015158080610f75575b15610f5357506040516318160ddd60e01b815291602083600481875afa92831561094e57600093610f1c575b5093602092610da7610e1d93602497610bc161313b565b8115610f0257610dba91610bda9161327a565b51610dc6610c05612471565b6001600160e01b031681524363ffffffff16838201525b51600084815260ce845260408082206001600160a01b038c1683528552902054906001600160e01b0316811580610eea57610ed457610c78610c6f6130ea565b9160405192610e2b846118d8565b83526040516370a0823160e01b81526001600160a01b038916600482015293849182905afa91821561094e57600092610e90575b50916a0c097ce7bc90715b34b9f160241b610cfa610e8493610e8a9551610bc161313b565b91612dd9565b90610a7e565b9150916020823d602011610ecc575b81610eac60209383611942565b810103126101f057905190916a0c097ce7bc90715b34b9f160241b610e5f565b3d9150610e9f565b6a0c097ce7bc90715b34b9f160241b9150610c64565b506a0c097ce7bc90715b34b9f160241b811015610c5f565b5050610dba604051610f13816118d8565b60008152610bda565b9250936020833d602011610f4b575b81610f3860209383611942565b810103126101f057915191936024610d90565b3d9150610f2b565b60209250610e1d91509360249415610ddd5763ffffffff431683820152610ddd565b50821515610d64565b9190506020823d602011610fac575b81610f9a60209383611942565b810103126101f0579051610d01610cc1565b3d9150610f8d565b5050610bf9604051610f13816118d8565b90506020813d602011610ff1575b81610fe060209383611942565b810103126101f05751610c7d610b93565b3d9150610fd3565b9050610c7d925015610c295763ffffffff43166020820152610c29565b50811515610b68565b9091506020813d60201161104b575b8161103b60209383611942565b810103126101f057519086610ac2565b3d915061102e565b602090604051908152f35b61107391503d806000833e61093f8183611942565b82610a63565b346101f05760403660031901126101f05761109261197c565b7f386537fa92edc3319af95f1f904dcf1900021e4f3f4e08169a577a09076e66b36020602435926110c1611a74565b6110ca81612a39565b8361110b576001600160a01b038116600090815260cd835260408120555b6001600160a01b0316600081815260cc83526040908190208590555193845292a2005b6001600160a01b038116600090815260cd8352604090204390556110e8565b346101f05760403660031901126101f05761025361114661197c565b61114e611992565b9061116460018060a01b0360ca54163314612135565b61274e565b346101f05760403660031901126101f05761118261197c565b61118a611992565b9060005460ff8160081c161591828093611342575b801561132b575b156112cf5760ff1980831660011760005561123092846112bd575b5060c980546001600160a01b0319166001600160a01b03968716179055931660008181527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260409091205490949060ff161561126e575b5060008052609784526040600020611f98565b5061123757005b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989061ff00196000541660005560405160018152a1005b600080526065855260406000208260005285526001604060002091825416179055338160007f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a48461121d565b61ffff191661010117600055856111c1565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156111a65750600160ff8316146111a6565b50600160ff83161061119f565b346101f05760403660031901126101f057611368611992565b336001600160a01b038216036113845761025390600435611dc1565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b346101f05760403660031901126101f0576102536004356097611402611992565b91806000526020906065825261141f600160406000200154611c68565b60008181526065835260408082206001600160a01b0390961680835295845290205460ff1615611458575b600052526040600020611f98565b806000526065825260406000208460005282526040600020600160ff198254161790553384827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d600080a461144a565b346101f05760403660031901126101f0576114c161197c565b6024356114cc611a74565b6114d68183612de8565b61151957604080516001600160a01b0393909316835260208301919091527f98b2f82a3a07f223a0be64b3d0f47711c64dccd1feafb94aa28156b38cd9695c91a1005b60405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e7420636f6d7020666f72206772616e7400000000006044820152606490fd5b346101f05760203660031901126101f05760043560005260656020526020600160406000200154604051908152f35b346101f05760003660031901126101f05760c9546040516001600160a01b039091168152602090f35b346101f05760203660031901126101f0576102536115d261197c565b6115e760018060a01b0360ca54163314612135565b6124aa565b346101f05760803660031901126101f05767ffffffffffffffff6004358181116101f05761161e9036906004016119a8565b9060249081359081116101f0576116399036906004016119a8565b916044359081151582036101f05760643580151581036101f05760005b85518110156117fc576001600160a01b03806116728389612b63565b5116908060ca54166040518091638e8f294b60e01b8252846004830152818a60609384935afa801561094e5788926116b3926000926117cd575b50506121b5565b611718575b836116ce575b50506116c990612dd9565b611656565b946116dc82989397926124aa565b60005b855181101561170757806104db886116fa611702948a612b63565b51168b61274e565b6116df565b509450946116c991965090876116be565b9392959490966040519563aa5af0fd60e01b875260209687816004818d5afa97881561094e5760009861179d575b505060405196611755886118d8565b8752611761878a612644565b60005b855181101561178d57806104db8989611780611788958b612b63565b51168d6128c5565b611764565b50968094959198929650506116b8565b9080929850813d83116117c6575b6117b58183611942565b810103126101f05751958980611746565b503d6117ab565b6117ec9250803d106117f5575b6117e48183611942565b810190612181565b50508b806116ac565b503d6117da565b8260005b815181101561025357611866906001600160a01b03806118208386612b63565b51168161182d8487612b63565b511660005260cb9061184a60209183835260406000205490612de8565b926118558588612b63565b511660005252604060002055612dd9565b611800565b346101f05760203660031901126101f0576004359063ffffffff60e01b82168092036101f057602091635a05180f60e01b81149081156118ad575b5015158152f35b637965db0b60e01b8114915081156118c7575b50836118a6565b6301ffc9a760e01b149050836118c0565b6020810190811067ffffffffffffffff8211176118f457604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176118f457604052565b6080810190811067ffffffffffffffff8211176118f457604052565b90601f8019910116810190811067ffffffffffffffff8211176118f457604052565b67ffffffffffffffff81116118f45760051b60200190565b600435906001600160a01b03821682036101f057565b602435906001600160a01b03821682036101f057565b81601f820112156101f0578035916119bf83611964565b926119cd6040519485611942565b808452602092838086019260051b8201019283116101f0578301905b8282106119f7575050505090565b81356001600160a01b03811681036101f05781529083019083016119e9565b81601f820112156101f057803591611a2d83611964565b92611a3b6040519485611942565b808452602092838086019260051b8201019283116101f0578301905b828210611a65575050505090565b81358152908301908301611a57565b3360009081527fffdfc1249c027f9191656349feb0761381bb32c9f557e01f419fd08754bf5a1b602090815260408083205490929060ff1615611ab657505050565b611abf33611e71565b83519082611acc83611926565b60428352848301936060368637835115611c545760308553835190600191821015611c545790607860218601536041915b818311611be657505050611ba457611b52938593611b8a93611b7b604894611ba09951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611d72565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190611d72565b01036028810185520183611942565b5162461bcd60e51b815291829160048301611d95565b0390fd5b60648486519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611c40576f181899199a1a9b1b9c1cb0b131b232b360811b901a611c168588611e4a565b5360041c928015611c2c57600019019190611afd565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b600081815260209060658252604092838220338352835260ff848320541615611c915750505050565b611c9a33611e71565b845191611ca683611926565b60428352848301936060368637835115611c545760308553835190600191821015611c545790607860218601536041915b818311611d2c57505050611ba457611b52938593611b8a93611b7b604894611ba09951988576020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8b978801528251928391603789019101611d72565b909192600f81166010811015611c40576f181899199a1a9b1b9c1cb0b131b232b360811b901a611d5c8588611e4a565b5360041c928015611c2c57600019019190611cd7565b60005b838110611d855750506000910152565b8181015183820152602001611d75565b60409160208252611db58151809281602086015260208686019101611d72565b601f01601f1916010190565b906040611dff9260009080825260656020528282209360018060a01b03169384835260205260ff8383205416611e02575b8152609760205220612045565b50565b808252606560205282822084835260205282822060ff1981541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4611df2565b908151811015611e5b570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff8211176118f457604052602a8252602082016040368237825115611e5b57603090538151600190811015611e5b57607860218401536029905b808211611f12575050611ece5790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611f6b576f181899199a1a9b1b9c1cb0b131b232b360811b901a611f418486611e4a565b5360041c918015611f56576000190190611ebe565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b8054821015611e5b5760005260206000200190600090565b9190600183016000908282528060205260408220541560001461201c57845494680100000000000000008610156120085783611ff8611fe1886001604098999a01855584611f80565b819391549060031b91821b91600019901b19161790565b9055549382526020522055600190565b634e487b7160e01b83526041600452602483fd5b50925050565b9190820391821161202f57565b634e487b7160e01b600052601160045260246000fd5b9060018201906000928184528260205260408420549081151560001461212e576000199180830181811161211a57825490848201918211612106578082036120d1575b505050805480156120bd578201916120a08383611f80565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b6120f16120e1611fe19386611f80565b90549060031b1c92839286611f80565b90558652846020526040862055388080612088565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b1561213c57565b60405162461bcd60e51b815260206004820152601060248201526f37b7363c9031b7b6b83a3937b63632b960811b6044820152606490fd5b519081151582036101f057565b908160609103126101f05761219581612174565b91602082015160ff811681036101f05760406121b2919301612174565b90565b156121bc57565b60405162461bcd60e51b81526020600482015260116024820152701b585c9ad95d081b9bdd081b1a5cdd1959607a1b6044820152606490fd5b60ca5460408051638e8f294b60e01b81526001600160a01b03808516600483018190529497969495949360609183916024918391165afa908115612354579061224691600091612418575b506121b5565b82156123df5781156123a657836000528360209360d08552848184600020540361235f575b505060005260d1835281816000205403612288575b505050509050565b805163aa5af0fd60e01b81528381600481885afa90811561235457600091612304575b506122e7907f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e5379596978351916122e0836118d8565b8252612644565b8460005260d1835281816000205551908152a28038808080612280565b908482813d831161234d575b61231a8183611942565b8101031261234a5750517f20af8e791cc98f74b2d7a391c80980ca8e5aebf3d4060bf581997b6acae2e5376122ab565b80fd5b503d612310565b82513d6000823e3d90fd5b7fdeafccd0c0b768b2529f7dcbbe58e155d6023059150b7490ed4535cc3744b92d9161238a8a6124aa565b8360005260d082528085600020558451908152a283388461226b565b5162461bcd60e51b81526020600482015260136024820152721a5b9d9b185a5908189bdc9c9bddd4dc195959606a1b6044820152606490fd5b5162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081cdd5c1c1b1e54dc195959606a1b6044820152606490fd5b612430915060603d81116117f5576117e48183611942565b505038612240565b604051906124458261190a565b601c82527f626c6f636b206e756d62657220657863656564732033322062697473000000006020830152565b6040519061247e8261190a565b601a82527f6e657720696e64657820657863656564732032323420626974730000000000006020830152565b6001600160a01b0316600081815260d26020908152604080832060d08352818420549495949390926124dd610b1c612438565b63ffffffff431694612507855460e01c6125016124f86130ea565b89831115613056565b87612022565b97881515808061263b575b1561260a5750826004918651928380926318160ddd60e01b82525afa9283156126005784936125ca575b50506125b3969761254f91610bc161313b565b81156125b55761255f925061327a565b6125838354925191612570836118d8565b6001600160e01b0384811684529261307a565b5161258f610c05612471565b6001600160e01b0391161660e09390931b6001600160e01b03191692909217905550565b565b50508151906125c3826118d8565b815261255f565b9080929350813d83116125f9575b6125e28183611942565b810103126125f55751908761254f61253c565b8280fd5b503d6125d8565b85513d86823e3d90fd5b95979850505050505061261b575050565b81546001600160e01b031660e09190911b6001600160e01b031916179055565b50821515612512565b6001600160a01b0316600081815260d36020908152604080832060d183528184205494969592949093919261267a610b1c612438565b63ffffffff4316956126a4865460e01c61269e6126956130ea565b8a831115613056565b88612022565b988915158080612745575b156127335750816004918751928380926308f7a6e360e31b82525afa9182156127295785926126f3575b505097610bb861254f92610ce86125b39a9b610baa61313b565b90809250813d8311612722575b61270a8183611942565b8101031261271e5751610bb861254f6126d9565b8380fd5b503d612700565b86513d87823e3d90fd5b9698995050505050505061261b575050565b508415156126af565b6001600160a01b03908116600081815260d2602090815260408083205460ce83528184209690951680845295825280832080546001600160e01b039096169081905591969594909291908015806128ad575b612898575b6127c3906127bd6127b46130ea565b84831115613056565b82612022565b968351976127d0896118d8565b885283516370a0823160e01b8152600481018790528181602481895afa908115612600578491612869575b5061283d6a0c097ce7bc90715b34b9f160241b917f2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a9798999a51610bc161313b565b049287815260cb82528461285485828420546130a9565b9189815260cb845220558351928352820152a3565b90508181813d8311612891575b6128808183611942565b8101031261271e575161283d6127fb565b503d612876565b506a0c097ce7bc90715b34b9f160241b6127a5565b506a0c097ce7bc90715b34b9f160241b8210156127a0565b6001600160a01b03908116600081815260d3602090815260408083205460cf83528184209690951680845295825280832080546001600160e01b0390961690819055969796939490939190801580612a21575b612a0c575b61293b9061293561292c6130ea565b85831115613056565b83612022565b978451986129488a6118d8565b895284516395dd919360e01b81526004810188905282816024818a5afa9081156127295785916129bb575b507f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a696979899610cf06a0c097ce7bc90715b34b9f160241b93610ce861283d94610baa61313b565b90508281813d8311612a05575b6129d28183611942565b81010312612a0157517f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6612973565b8480fd5b503d6129c8565b506a0c097ce7bc90715b34b9f160241b61291d565b506a0c097ce7bc90715b34b9f160241b831015612918565b60018060a01b031660009080825260cc602052604082205460cd602052612a786040842054612a72612a696130ea565b43831115613056565b43612022565b9081151580612ad0575b612a8d575b50505050565b612aaf91612a9d91610bc161313b565b82845260cb60205260408420546130a9565b90825260cb602052604082205560cd60205260404391205538808080612a87565b50801515612a82565b60209081818403126101f05780519067ffffffffffffffff82116101f057019180601f840112156101f0578251612b0f81611964565b93612b1d6040519586611942565b818552838086019260051b8201019283116101f0578301905b828210612b44575050505090565b81516001600160a01b03811681036101f0578152908301908301612b36565b8051821015611e5b5760209160051b010190565b6040805191612b858361190a565b6001938484526020908185019082368337855115611e5b576001600160a01b039384169091526000865b612c2e575b5050846000905b612bc8575b505050505050565b8451811015612c29578083612be0612c239388612b63565b511684612bed8389612b63565b5116600052612c0660cb91828652876000205490612de8565b9085612c12848a612b63565b511660005284528560002055612dd9565b85612bbb565b612bc0565b8151811015612dd45783612c428284612b63565b51168460ca54168651638e8f294b60e01b815280600492848483015281602460609485935afa918215612dc95790612c839291600092612daa5750506121b5565b848751809263aa5af0fd60e01b825281855afa908115612d9f57600091612d72575b5086518994939291612cb6826118d8565b8152612cc28183612644565b886000865b612d2f575b505050612cd8816124aa565b6000845b612cf3575b5050612cec90612dd9565b9091612baf565b88949192939451811015612d2557806104db88612d13612d1b948d612b63565b51168561274e565b8194939291612cdc565b8194939250612ce1565b888297939495969751821015612d6657846104db91612d5184612d5996612b63565b5116876128c5565b8990829695949392612cc7565b50829695949350612ccc565b908582813d8311612d98575b612d888183611942565b8101031261234a57505138612ca5565b503d612d7e565b87513d6000823e3d90fd5b612dc09250803d106117f5576117e48183611942565b505038806116ac565b89513d6000823e3d90fd5b612bb4565b600019811461202f5760010190565b9060018060a01b038060ca5416906040805191632aff3bff60e21b8352828187169485600483015281602460009687935afa90811561304957849161302f575b50835b8151811015612ec35782612e3f8284612b63565b511680865260209060d18252858720541591829182612eaa575b82612e8e575b50508115612e86575b50612e7b57612e7690612dd9565b612e2b565b505050505050905090565b905038612e68565b885260cf81528688208989529052508486205415153880612e5f565b60ce82528789208a8a5282528789205415159350612e59565b5050909194925060c954168151926370a0823160e01b84523060048501526020938481602481865afa908115613025578791612ff4575b508515159081612fe9575b50612f135750505050905090565b825163a9059cbb60e01b8582019081526001600160a01b0392909216602482015260448082019690965294855292939192601f19928692839290918390612f5b606482611942565b51925af1903d15612fe3573d67ffffffffffffffff8111612fcf57612f8985855193601f8401160183611942565b815284843d92013e5b15612f9c57505090565b60649250519062461bcd60e51b82526004820152600d60248201526c31b0b73a103a3930b739b332b960991b6044820152fd5b634e487b7160e01b86526041600452602486fd5b50612f92565b905085111538612f05565b90508481813d831161301e575b61300b8183611942565b8101031261301a575138612efa565b8680fd5b503d613001565b84513d89823e3d90fd5b61304391503d8086833e61093f8183611942565b38612e28565b50505051903d90823e3d90fd5b1561305e5750565b60405162461bcd60e51b8152908190611ba09060048301611d95565b9061309791600060405161308d816118d8565b52519051906130a9565b604051906130a4826118d8565b815290565b604051916130b68361190a565b60118352706164646974696f6e206f766572666c6f7760781b602084015281019182821161202f576121b291831015613056565b604051906130f78261190a565b60158252747375627472616374696f6e20756e646572666c6f7760581b6020830152565b8115613125570490565b634e487b7160e01b600052601260045260246000fd5b604051906131488261190a565b601782527f6d756c7469706c69636174696f6e206f766572666c6f770000000000000000006020830152565b8015918280156131b6575b6131ae57670de0b6b3a7640000808302938385048214171561202f576131a86121b2938561311b565b14613056565b505050600090565b50600061317f565b8015918280156131f8575b6131ae576a0c097ce7bc90715b34b9f160241b808302938385048214171561202f576131a86121b2938561311b565b5060006131c9565b9091811592838015613236575b61322d57808302938385048214171561202f576131a86121b2938561311b565b50505050600090565b50801561320d565b906121b2916132756040516132528161190a565b600e81526d646976696465206279207a65726f60901b6020820152831515613056565b61311b565b9061329f613097926000604051613290816118d8565b5261329961313b565b906131be565b61323e56fea26469706673582212203514f8f7d9c90ac02a6e4376237a54eefcdb8f5aa077e4b711176183b575c41d64736f6c63430008130033";

type CompLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompLogic__factory extends ContractFactory {
  constructor(...args: CompLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CompLogic & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CompLogic__factory {
    return super.connect(runner) as CompLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompLogicInterface {
    return new Interface(_abi) as CompLogicInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CompLogic {
    return new Contract(address, _abi, runner) as unknown as CompLogic;
  }
}
