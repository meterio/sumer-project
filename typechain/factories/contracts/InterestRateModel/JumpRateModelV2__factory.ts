/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  JumpRateModelV2,
  JumpRateModelV2Interface,
} from "../../../contracts/InterestRateModel/JumpRateModelV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blocksPerYearOnChain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
    ],
    name: "updateJumpRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a03461010757601f61062538819003918201601f19168301916001600160401b0383118484101761010c5780849260c09460405283398101031261010757805190602081015190604081015190606081015160a0608083015192015160018060a01b03811680910361010757856100bf816100b57f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d996080996100c99660018060a01b03196000541617600055818b52610122565b9687600255610122565b9283600155610122565b908160035582600455604051938452602084015260408301526060820152a16040516104e29081610143823960805181818161017801526102740152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b811561012c570490565b634e487b7160e01b600052601260045260246000fdfe604060808152600436101561001357600080fd5b600090813560e01c806315f24053146103005780632037f3e71461021d5780632191f92a146102025780636e71e2d8146101e05780638726bb89146101c25780638da5cb5b1461019b578063a385fb9614610161578063b8168816146100f5578063b9f9850a146100d7578063f14039de146100b95763fd2da3391461009857600080fd5b346100b557816003193601126100b5576020906004549051908152f35b5080fd5b50346100b557816003193601126100b5576020906002549051908152f35b50346100b557816003193601126100b5576020906003549051908152f35b50346100b5576101043661033a565b9294670de0b6b3a76400009291929384039084821161014d575082828561013e61013994610139610145988c9860209d610439565b610406565b0493610388565b049051908152f35b634e487b7160e01b81526011600452602490fd5b50346100b557816003193601126100b557602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346100b557816003193601126100b557905490516001600160a01b039091168152602090f35b50346100b557816003193601126100b5576020906001549051908152f35b50346100b5576020906101fb6101f53661031b565b91610388565b9051908152f35b50346100b557816003193601126100b5576020905160018152f35b50346100b55761022c3661033a565b9260018060a0969394961b0386541633036102cf5791608093916102b061029c6102a67f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d98967f000000000000000000000000000000000000000000000000000000000000000092838092610419565b9788600255610419565b9384600155610419565b918260035583600455815194855260208501528301526060820152a180f35b815162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606490fd5b50346100b5576020906101fb6103153661031b565b91610439565b606090600319011261033557600435906024359060443590565b600080fd5b60809060031901126103355760043590602435906044359060643590565b9190820180921161036557565b634e487b7160e01b600052601160045260246000fd5b9190820391821161036557565b919080156103fe57828211806103e8575b6103d957670de0b6b3a7640000810291670de0b6b3a763ffff1982840401610365576103cb6103d0926103d695610358565b61037b565b90610419565b90565b505050670de0b6b3a764000090565b506103f7826103cb8584610358565b1515610399565b505050600090565b8181029291811591840414171561036557565b8115610423570490565b634e487b7160e01b600052601260045260246000fd5b906104449291610388565b6004548082116104725750670de0b6b3a76400006104686103d69260015490610406565b0460025490610358565b906103d6916104a661049d670de0b6b3a7640000926104978461046860015484610406565b9461037b565b60035490610406565b0461035856fea2646970667358221220ead321a5b2f52970d3531f0003593bfee4694ab7142ec165b7ab29c17bf1587764736f6c63430008130033";

type JumpRateModelV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JumpRateModelV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JumpRateModelV2__factory extends ContractFactory {
  constructor(...args: JumpRateModelV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    blocksPerYearOnChain: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      blocksPerYearOnChain,
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    );
  }
  override deploy(
    blocksPerYearOnChain: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      blocksPerYearOnChain,
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    ) as Promise<
      JumpRateModelV2 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JumpRateModelV2__factory {
    return super.connect(runner) as JumpRateModelV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JumpRateModelV2Interface {
    return new Interface(_abi) as JumpRateModelV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): JumpRateModelV2 {
    return new Contract(address, _abi, runner) as unknown as JumpRateModelV2;
  }
}
