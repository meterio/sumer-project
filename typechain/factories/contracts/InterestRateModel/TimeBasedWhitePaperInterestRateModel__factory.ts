/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TimeBasedWhitePaperInterestRateModel,
  TimeBasedWhitePaperInterestRateModelInterface,
} from "../../../contracts/InterestRateModel/TimeBasedWhitePaperInterestRateModel";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerTimestamp",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    inputs: [],
    name: "baseRatePerTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierPerTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "timestampsPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100d957601f6103aa38819003918201601f19168301916001600160401b038311848410176100de5780849260409485528339810103126100d95760208151910151670de0b6b3a7640000808302928084048214901517156100c357806301e13380809404049081600155808302928084048214901517156100c3577ff35fa19c15e9ba782633a5df62a98b20217151addc68e3ff2cd623a48d37ec279360409304048060005582519182526020820152a16040516102b590816100f58239f35b634e487b7160e01b600052601160045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c9081630c5748611461017c5750806315f24053146101615780632191f92a1461014657806340bc0af4146101285780636c2df6a71461010c5780636e71e2d8146100ea5763b81688161461006f57600080fd5b346100e65760803660031901126100e6576004359160243560443590670de0b6b3a7640000926064358403908482116100d257508282856100c36100be946100be6100ca988c9860209d61024f565b61023c565b04936101b9565b049051908152f35b634e487b7160e01b81526011600452602490fd5b5080fd5b50346100e6576020906101056100ff3661019a565b916101b9565b9051908152f35b50346100e657816003193601126100e657602091549051908152f35b50346100e657816003193601126100e6576020906001549051908152f35b50346100e657816003193601126100e6576020905160018152f35b50346100e6576020906101056101763661019a565b9161024f565b8390346100e657816003193601126100e657806301e1338060209252f35b60609060031901126101b457600435906024359060443590565b600080fd5b811561022757670de0b6b3a7640000820291670de0b6b3a763ffff1981840401610211576101e69161022f565b918083039280841161021157146101fb570490565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b505050600090565b9190820180921161021157565b8181029291811591840414171561021157565b61026961027c93670de0b6b3a764000093610272936101b9565b6000549061023c565b046001549061022f565b9056fea26469706673582212200f77c6c9eab176138434c5269c890c84f4defb51440893366b0812864dfec35464736f6c63430008130033";

type TimeBasedWhitePaperInterestRateModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimeBasedWhitePaperInterestRateModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimeBasedWhitePaperInterestRateModel__factory extends ContractFactory {
  constructor(...args: TimeBasedWhitePaperInterestRateModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      baseRatePerYear,
      multiplierPerYear,
      overrides || {}
    );
  }
  override deploy(
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      baseRatePerYear,
      multiplierPerYear,
      overrides || {}
    ) as Promise<
      TimeBasedWhitePaperInterestRateModel & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TimeBasedWhitePaperInterestRateModel__factory {
    return super.connect(
      runner
    ) as TimeBasedWhitePaperInterestRateModel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeBasedWhitePaperInterestRateModelInterface {
    return new Interface(_abi) as TimeBasedWhitePaperInterestRateModelInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TimeBasedWhitePaperInterestRateModel {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TimeBasedWhitePaperInterestRateModel;
  }
}
