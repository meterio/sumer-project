/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../../../contracts/Oracle/FeedPriceOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "feedId",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "setLpFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setPythFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461006357600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361217f90816100698239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182630c1502eb146114325750816316b8e731146113585781631badc89a1461131c578382631e922ea6146112e3575081632601c6b1146110665781632fba4aa914610fe457816348a1371b14610e67578382634b90fd6914610dd85750816366331bba14610dbc578163688202c514610b3e57816369ef32d2146108c7578163715018a61461086257816379ba5097146107a15781638da5cb5b14610779578163b1b06949146104a0578163cad75c681461020357508063e30c3978146101db578063e983fe25146101a4578063f2fde38b146101345763fc57d4df1461010557600080fd5b3461013057602036600319011261013057602090610129610124611466565b611981565b9051908152f35b5080fd5b82346101a15760203660031901126101a15761014e611466565b610156611666565b600180546001600160a01b0319166001600160a01b0392831690811790915582549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b80fd5b50346101305760203660031901126101305760209181906001600160a01b036101cb611466565b1681526003845220549051908152f35b503461013057816003193601126101305760015490516001600160a01b039091168152602090f35b90503461049c57606036600319011261049c5761021e611466565b602435906044356001600160a01b038181169182900361049857610240611666565b85519261024c84611542565b87845282156104635716948587526020946002865283600160ff81858c20015416610455575b6002845161027f81611511565b8881528b8a8c888285019389855286828701948d8652606088019460128652608089019b8c52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055019151908151916001600160401b038311610442578b61030585546114d7565b8b601f8211610409575b50505089908c601f851160011461038e579360008051602061212a8339815191529b9a999795938193829361037d9b999794610383575b50501b916000199060031b1c19161790555b815196879687528601528401526012606084015260a0608084015260a0830190611497565b0390a280f35b015192503880610346565b9190601f9493941984168684528c8420935b8181106103f457509161037d99979593918560008051602061212a8339815191529e9d9c9a989694106103db575b505050811b019055610358565b015160001960f88460031b161c191690553880806103ce565b82840151855593860193928d01928d016103a0565b8287610430945220601f860160051c8101918d8710610438575b601f0160051c01906116be565b8b388b61030f565b9091508190610423565b634e487b7160e01b8c526041855260248cfd5b600388528984812055610272565b865162461bcd60e51b8152602081880152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b8680fd5b8280fd5b9190503461049c57608036600319011261049c576104bc611466565b906104c5611481565b916104ce61163b565b90606435926001600160401b038085116107755736602386011215610775578487013595886104fc8861164b565b966105098551988961155d565b8888523660248a83010111610130578860249960209a8b9301838b013788010152610532611666565b6001600160a01b039081169384156107405716808952600287528289206001908101549198899688949360ff16610732575b8b8a87519261057284611511565b828452888285019360038552818601938c8552606087019360ff169d8e8552608088019b8c528252600290522093518455858401925160ff16835492600160a81b6101009003905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055600201935190815193841161071f57506105f684546114d7565b601f81116106f1575b5088908b601f851160011461067557938060039a979460008051602061212a8339815191529c9a9794829461037d9b989461066a575b50501b91600019908b1b1c19161790555b80519687968b8852870152850152606084015260a0608084015260a0830190611497565b015192503880610635565b50848c52898c209293929190601f1984168d5b8181106106dc57509261037d989592859260039c999660008051602061212a8339815191529e9c9996106106c4575b505050811b019055610646565b0151600019838d1b60f8161c191690553880806106b7565b82840151855593860193928c01928c01610688565b61071990858d528a8d20601f860160051c8101918c871061043857601f0160051c01906116be565b386105ff565b634e487b7160e01b8c526041905260248bfd5b60038a528b86812055610564565b835162461bcd60e51b8152808a01899052600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b8780fd5b505034610130578160031936011261013057905490516001600160a01b039091168152602090f35b9190503461049c578260031936011261049c57600154916001600160a01b0391338385160361080d5750506001600160a01b031991821660015582543392811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b83346101a157806003193601126101a15761087b611666565b600180546001600160a01b03199081169091558154908116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b839150346101305782600319360112610130576108e2611466565b906108eb611481565b6108f3611666565b8451906108ff82611542565b8482526001600160a01b03908116938415610b09571692838552602095600287528560019460ff86848420015416610afb575b6002835161093f81611511565b8381528a81018881528582018781528c846060850191600883528d60808701998d8b525252878d209351845560ff8b8501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550191518051916001600160401b038311610ae857506109c283546114d7565b601f8111610aba575b508990601f8311600114610a4257918061037d9694928b9c98969460008051602061212a8339815191529b9c92610a37575b5050600019600383901b1c191690881b1790555b80519586958a87528601528401526008606084015260a0608084015260a0830190611497565b015190508c806109fd565b838a528a8a209190601f1984168b5b818110610aa55750928992859260008051602061212a8339815191529c9d9e9a989661037d9a989610610a8c575b505050811b019055610a11565b015160001960f88460031b161c191690558c8080610a7f565b828401518555938a0193928d01928d01610a51565b610ae290848b528b8b20601f850160051c8101918d861061043857601f0160051c01906116be565b8a6109cb565b634e487b7160e01b8a5260419052602489fd5b600389528183812055610932565b865162461bcd60e51b8152602081860152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b9190503461049c57606036600319011261049c57610b5a611466565b91610b63611481565b92610b6c61163b565b92610b75611666565b805194610b8186611542565b8686526001600160a01b03908116928315610d875790869493929116958693848952826002602098818a5260ff8c600194859120015416610d79575b8b8a875192610bcb84611511565b828452888285019386855286828701948d865260ff6060890195169e8f8652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b03841161071f5750610c5084546114d7565b601f8111610d4b575b5088908b601f8511600114610ccf57938060029a979460008051602061212a8339815191529c9a9794829461037d9b9894610cc4575b50501b916000199060031b1c191617905580519687968b8852870152850152606084015260a0608084015260a0830190611497565b015192503880610c8f565b50848c52898c209293929190601f1984168d5b818110610d3657509261037d989592859260029c999660008051602061212a8339815191529e9c999610610d1d57505050811b019055610646565b015160001960f88460031b161c191690553880806106b7565b82840151855593860193928c01928c01610ce2565b610d7390858d528a8d20601f860160051c8101918c871061043857601f0160051c01906116be565b38610c59565b60038a528b86812055610bbd565b825162461bcd60e51b8152602081870152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b5050346101305781600319360112610130576020905160018152f35b808434610e64576020366003190112610e6457600290610df6611466565b610dfe611666565b6001600160a01b031683526020829052822082815560018101839055018054610e26906114d7565b80610e2f575050f35b82601f8211600114610e415750505580f35b9091808252610e5f601f60208420940160051c8401600185016116be565b555580f35b50fd5b839150346101305760208060031936011261049c578135926001600160401b0384116101a157366023850112156101a15783830135610ea581611624565b94610eb28751968761155d565b8186528386016024809360051b83010191368311610fe0579497969593948301905b828210610faf575050508351610ee981611624565b92610ef68751948561155d565b818452610f0282611624565b8489019690601f1901368837855b838110610f5757505050505083519485948186019282875251809352850193925b828110610f4057505050500390f35b835185528695509381019392810192600101610f31565b9798969794969594610f7b6001600160a01b03610f7483856120ff565b5116611981565b610f85828a6120ff565b526000198114610f9d57600101989796949598610f10565b634e487b7160e01b8652601183528486fd5b969795969395949381356001600160a01b0381168103610fdc578152949796959394908801908801610ed4565b8580fd5b8480fd5b505034610130576020366003190112610130576001600160a01b03916110629082908461100f611466565b1681526002602052209160ff83549361102f60026001830154920161157e565b928051968796875283831660208801528260081c169086015260a81c16606084015260a0608084015260a0830190611497565b0390f35b90503461049c578160031936011261049c57611080611466565b611088611481565b90611091611666565b83519161109d83611542565b8583526001600160a01b039081169182156112ae5716938486528260209460028652600160ff81858b200154166112a0575b600284516110dc81611511565b8a81528a898b88828501936005855286828701948d8652606088019460128652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b03841161128d575061116284546114d7565b601f811161125f575b5087908a601f85116001146111e357938061037d979460059a9794829460008051602061212a8339815191529d9b98946111d8575b50501b916000199060031b1c19161790555b80519586958a87528601528401526012606084015260a0608084015260a0830190611497565b0151925038806111a0565b50848b52888b209293929190601f1984168c5b81811061124a57509260008051602061212a8339815191529a989592859261037d999660059c999610611231575b505050811b0190556111b2565b015160001960f88460031b161c19169055388080611224565b82840151855593860193928b01928b016111f6565b61128790858c52898c20601f860160051c8101918b871061043857601f0160051c01906116be565b3861116b565b634e487b7160e01b8b526041905260248afd5b6003875288848120556110cf565b855162461bcd60e51b8152602081870152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b808434610e64576020366003190112610e64576112fe611466565b611306611666565b6001600160a01b03168252600360205281205580f35b505034610130578060031936011261013057611336611466565b61133e611666565b6001600160a01b0316825260036020528120602435905580f35b8284346101a15760209182600319360112610130578060ff6110629261137c611466565b9460606080835161138c81611511565b83815289810184905284810184905282810184905201526001600160a01b03958616815260028752208251946113c186611511565b81548652600182015491878701948484168652846113f86002838b0194868860081c1686528360608d019860a81c1688520161157e565b9660808a0197885282519a8b9a818c5251908b015251169088015251166060860152511660808401525160a08084015260c0830190611497565b8490843461049c57602036600319011261049c576020926001600160a01b03611459611466565b1681526003845220548152f35b600435906001600160a01b038216820361147c57565b600080fd5b602435906001600160a01b038216820361147c57565b919082519283825260005b8481106114c3575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016114a2565b90600182811c92168015611507575b60208310146114f157565b634e487b7160e01b600052602260045260246000fd5b91607f16916114e6565b60a081019081106001600160401b0382111761152c57604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761152c57604052565b90601f801991011681019081106001600160401b0382111761152c57604052565b9060405191826000825492611592846114d7565b90818452600194858116908160001461160157506001146115be575b50506115bc9250038361155d565b565b9093915060005260209081600020936000915b8183106115e95750506115bc935082010138806115ae565b855488840185015294850194879450918301916115d1565b9150506115bc94506020925060ff191682840152151560051b82010138806115ae565b6001600160401b03811161152c5760051b60200190565b6044359060ff8216820361147c57565b6001600160401b03811161152c57601f01601f191660200190565b6000546001600160a01b0316330361167a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8181106116c9575050565b600081556001016116be565b90670de0b6b3a7640000918281029281840414901517156116f257565b634e487b7160e01b600052601160045260246000fd5b818102929181159184041417156116f257565b9060405161172881611511565b6080611764600283958054855260ff6001820154818116602088015260018060a01b038160081c16604088015260a81c1660608601520161157e565b910152565b9081602091031261147c575160ff8116810361147c5790565b6040513d6000823e3d90fd5b60ff166012039060ff82116116f257565b156117a657565b60405162461bcd60e51b8152602060048201526011602482015270646563696d616c20756e646572666c6f7760781b6044820152606490fd5b51906001600160501b038216820361147c57565b908160a091031261147c57611807816117df565b916020820151916040810151916118256080606084015193016117df565b90565b1561182f57565b60405162461bcd60e51b815260206004820152600b60248201526a7374616c6520707269636560a81b6044820152606490fd5b1561186957565b60405162461bcd60e51b815260206004820152600e60248201526d6e6567617469766520707269636560901b6044820152606490fd5b906201518082018092116116f257565b919082018092116116f257565b156118c357565b60405162461bcd60e51b81526020600482015260076024820152661d1a5b595bdd5d60ca1b6044820152606490fd5b604d81116116f257600a0a90565b9081602091031261147c575190565b9081606091031261147c576040519060608201908282106001600160401b0383111761152c57604091825280518352602081015160208401520151604082015290565b61196460409283835283830190611497565b90602081830391015260038152621554d160ea1b60208201520190565b6001600160a01b03811660009081526002602052604090206119a29061171b565b6040810180519092916001600160a01b0390911690816119dc575b50506001600160a01b0316600090815260036020526040902090505490565b602080820192600160ff6119f1865160ff1690565b1614611be55750600260ff611a07855160ff1690565b1614611b4b5750600360ff611a1d845160ff1690565b1614611a7657600460ff611a32845160ff1690565b1614611a69575060ff611a486005925160ff1690565b1614611a555781806119bd565b5051611825906001600160a01b0316611d40565b9150506118259150611f98565b611aef939250606091506080611ad0611ac4611ac4611aa9611aa3611a9e8888015160ff1690565b61178e565b60ff1690565b96611ab7601289111561179f565b516001600160a01b031690565b6001600160a01b031690565b91015190604051808096819463195556f360e21b835260048301611952565b03915afa918215611b465761182592611b1291600091611b18575b5051916118f2565b90611708565b611b39915060603d8111611b3f575b611b31818361155d565b81019061190f565b38611b0a565b503d611b27565b611782565b93915060049250611b7e611ac4611ac4611b70611aa3611a9e60608a97015160ff1690565b94611ab7601287111561179f565b60405163029f8a6d60e11b815293849182905afa918215611b465761182593600093611bb0575b5050611b12906118f2565b611b129293509081611bd692903d10611bde575b611bce818361155d565b810190611900565b919038611ba5565b503d611bc4565b909350600492508391506040519283809263313ce56760e01b82525afa908115611b4657611ac4611ac4611c2e611aa360a095611c3c95600498600092611cf4575b505061178e565b95611ab7601288111561179f565b604051633fabe5a360e21b815292839182905afa8015611b46576118259260008092818091611caa575b611b1294955091611c8c611c9d92611ca5946001600160501b0380911691161015611828565b611c9860008713611862565b61189f565b4211156118bc565b6118f2565b505050611b129150611ca5611c9d611cdb611c8c9560a03d8111611ced575b611cd3818361155d565b8101906117f3565b9298508897509450909250611c669050565b503d611cc9565b611d139250803d10611d1a575b611d0b818361155d565b810190611769565b3880611c27565b503d611d01565b9081602091031261147c57516001600160a01b038116810361147c5790565b604051630dfe168160e01b81526020906001600160a01b038316908281600481855afa908115611b46578390600092611df1575b5060405163d21220a760e01b81529192829060049082905afa928315611b4657600093611dbc575b5050611da89083611e42565b90611db39192611e42565b611825916118af565b611da89293509081611de292903d10611dea575b611dda818361155d565b810190611d21565b919038611d9c565b503d611dd0565b60049250611e0b90823d8411611dea57611dda818361155d565b91611d74565b8115611e1b570490565b634e487b7160e01b600052601260045260246000fd5b60ff16604d81116116f257600a0a90565b6040516370a0823160e01b81526001600160a01b038281166004830152838116939290916020918282602481895afa918215611b46576004968491600094611f79575b5060405163313ce56760e01b815297889182905afa958615611b4657600096611f58575b5082906004604051809681936318160ddd60e01b8352165afa908115611b4657611eef93611ee993600093611f33575b5050611ee4906116d5565b611e11565b91611981565b61182592611f0a9290601260ff821610611f18575b50611708565b670de0b6b3a7640000900490565b90611b12611f28611f2d9361178e565b611e31565b38611f04565b611ee49293509081611f5092903d10611bde57611bce818361155d565b919038611ed9565b83919650611f7290823d8411611d1a57611d0b818361155d565b9590611ea9565b611f91919450823d8411611bde57611bce818361155d565b9238611e85565b90604060018060a01b038184015116925192815190602082016396834ad360e01b81526024958684015285835260608301926001600160401b0393818110858211176120ea5785526000928392839251915afa3d156120e2573d90611ffc8261164b565b916120098651938461155d565b82523d83602084013e5b156120b257608081805181010312610130576020810151938460070b850361049c578101518381160361013057606001518060030b80910361013057810394858060030b036120a05763ffffffff8096166012039186831161208f57505061182593946120889116611ca5601282111561179f565b9116611708565b634e487b7160e01b81526011600452fd5b634e487b7160e01b8252601160045290fd5b835162461bcd60e51b815260206004820152600a8188015269383cba341032b93937b960b11b6044820152606490fd5b606090612013565b87634e487b7160e01b60005260416004526000fd5b80518210156121135760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe3d8adf1be139385d82a5f0d83d5ac348b4bc37e1e1613ccde2a9de0376090c28a264697066735822122051cac0adbdf8449b32e357f783150ac6c3cde633987535ef8b47f10fd82c315c64736f6c63430008130033";

type FeedPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeedPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(...args: FeedPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeedPriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeedPriceOracle__factory {
    return super.connect(runner) as FeedPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeedPriceOracle {
    return new Contract(address, _abi, runner) as unknown as FeedPriceOracle;
  }
}
