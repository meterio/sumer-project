/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeedPriceOracle,
  FeedPriceOracleInterface,
} from "../../../contracts/Oracle/FeedPriceOracle";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "feedId",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "setLpFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setPythFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461006357600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361218590816100698239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182630c1502eb146114375750816316b8e7311461135d5781631badc89a14611321578382631e922ea6146112e8575081632601c6b11461106a5781632fba4aa914610fe857816348a1371b14610e6b578382634b90fd6914610ddc5750816366331bba14610dc0578163688202c514610b4157816369ef32d2146108c9578163715018a61461086457816379ba5097146107a35781638da5cb5b1461077b578163b1b06949146104a1578163cad75c681461020357508063e30c3978146101db578063e983fe25146101a4578063f2fde38b146101345763fc57d4df1461010557600080fd5b346101305760203660031901126101305760209061012961012461146b565b611986565b9051908152f35b5080fd5b82346101a15760203660031901126101a15761014e61146b565b61015661166b565b600180546001600160a01b0319166001600160a01b0392831690811790915582549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b80fd5b50346101305760203660031901126101305760209181906001600160a01b036101cb61146b565b1681526003845220549051908152f35b503461013057816003193601126101305760015490516001600160a01b039091168152602090f35b90503461049d57606036600319011261049d5761021e61146b565b602435906044356001600160a01b03818116918290036104995761024061166b565b85519261024c84611547565b87845282156104635716948587526020946002865283600160ff81858c20015416610455575b6002845161027f81611516565b8881528b8a8c888285019389855286828701948d8652606088019460128652608089019b8c52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055019151908151916001600160401b038311610442578b61030585546114dc565b8b601f8211610409575b50505089908c601f851160011461038e57936000805160206121308339815191529b9a999795938193829361037d9b999794610383575b50501b916000199060031b1c19161790555b815196879687528601528401526012606084015260a0608084015260a083019061149c565b0390a280f35b015192503880610346565b9190601f9493941984168684528c8420935b8181106103f457509161037d9997959391856000805160206121308339815191529e9d9c9a989694106103db575b505050811b019055610358565b015160001960f88460031b161c191690553880806103ce565b82840151855593860193928d01928d016103a0565b8287610430945220601f860160051c8101918d8710610438575b601f0160051c01906116c3565b8b388b61030f565b9091508190610423565b634e487b7160e01b8c526041855260248cfd5b600388528984812055610272565b865162461bcd60e51b8152602081880152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b8680fd5b8280fd5b9190503461049d57608036600319011261049d576104bd61146b565b906104c6611486565b916104cf611640565b90606435926001600160401b038085116107775736602386011215610777578487013595886104fd88611650565b9661050a85519889611562565b8888523660248a83010111610130578860249960209a8b9301838b01378801015261053361166b565b6001600160a01b039081169384156107415716808952600287528289206001908101549198899688949360ff16610733575b8b8a87519261057384611516565b828452888285019360038552818601938c8552606087019360ff169d8e8552608088019b8c528252600290522093518455858401925160ff16835492600160a81b6101009003905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055600201935190815193841161072057506105f784546114dc565b601f81116106f2575b5088908b601f851160011461067657938060039a97946000805160206121308339815191529c9a9794829461037d9b989461066b575b50501b91600019908b1b1c19161790555b80519687968b8852870152850152606084015260a0608084015260a083019061149c565b015192503880610636565b50848c52898c209293929190601f1984168d5b8181106106dd57509261037d989592859260039c99966000805160206121308339815191529e9c9996106106c5575b505050811b019055610647565b0151600019838d1b60f8161c191690553880806106b8565b82840151855593860193928c01928c01610689565b61071a90858d528a8d20601f860160051c8101918c871061043857601f0160051c01906116c3565b38610600565b634e487b7160e01b8c526041905260248bfd5b60038a528b86812055610565565b835162461bcd60e51b8152808a01899052601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b8780fd5b505034610130578160031936011261013057905490516001600160a01b039091168152602090f35b9190503461049d578260031936011261049d57600154916001600160a01b0391338385160361080f5750506001600160a01b031991821660015582543392811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b83346101a157806003193601126101a15761087d61166b565b600180546001600160a01b03199081169091558154908116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b839150346101305782600319360112610130576108e461146b565b906108ed611486565b6108f561166b565b84519061090182611547565b8482526001600160a01b03908116938415610b0b571692838552602095600287528560019460ff86848420015416610afd575b6002835161094181611516565b8381528a81018881528582018781528c846060850191600883528d60808701998d8b525252878d209351845560ff8b8501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550191518051916001600160401b038311610aea57506109c483546114dc565b601f8111610abc575b508990601f8311600114610a4457918061037d9694928b9c9896946000805160206121308339815191529b9c92610a39575b5050600019600383901b1c191690881b1790555b80519586958a87528601528401526008606084015260a0608084015260a083019061149c565b015190508c806109ff565b838a528a8a209190601f1984168b5b818110610aa7575092899285926000805160206121308339815191529c9d9e9a989661037d9a989610610a8e575b505050811b019055610a13565b015160001960f88460031b161c191690558c8080610a81565b828401518555938a0193928d01928d01610a53565b610ae490848b528b8b20601f850160051c8101918d861061043857601f0160051c01906116c3565b8a6109cd565b634e487b7160e01b8a5260419052602489fd5b600389528183812055610934565b865162461bcd60e51b8152602081860152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b9190503461049d57606036600319011261049d57610b5d61146b565b91610b66611486565b92610b6f611640565b92610b7861166b565b805194610b8486611547565b8686526001600160a01b03908116928315610d8a5790869493929116958693848952826002602098818a5260ff8c600194859120015416610d7c575b8b8a875192610bce84611516565b828452888285019386855286828701948d865260ff6060890195169e8f8652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b0384116107205750610c5384546114dc565b601f8111610d4e575b5088908b601f8511600114610cd257938060029a97946000805160206121308339815191529c9a9794829461037d9b9894610cc7575b50501b916000199060031b1c191617905580519687968b8852870152850152606084015260a0608084015260a083019061149c565b015192503880610c92565b50848c52898c209293929190601f1984168d5b818110610d3957509261037d989592859260029c99966000805160206121308339815191529e9c999610610d2057505050811b019055610647565b015160001960f88460031b161c191690553880806106b8565b82840151855593860193928c01928c01610ce5565b610d7690858d528a8d20601f860160051c8101918c871061043857601f0160051c01906116c3565b38610c5c565b60038a528b86812055610bc0565b825162461bcd60e51b8152602081870152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b5050346101305781600319360112610130576020905160018152f35b808434610e68576020366003190112610e6857600290610dfa61146b565b610e0261166b565b6001600160a01b031683526020829052822082815560018101839055018054610e2a906114dc565b80610e33575050f35b82601f8211600114610e455750505580f35b9091808252610e63601f60208420940160051c8401600185016116c3565b555580f35b50fd5b839150346101305760208060031936011261049d578135926001600160401b0384116101a157366023850112156101a15783830135610ea981611629565b94610eb687519687611562565b8186528386016024809360051b83010191368311610fe4579497969593948301905b828210610fb3575050508351610eed81611629565b92610efa87519485611562565b818452610f0682611629565b8489019690601f1901368837855b838110610f5b57505050505083519485948186019282875251809352850193925b828110610f4457505050500390f35b835185528695509381019392810192600101610f35565b9798969794969594610f7f6001600160a01b03610f788385612105565b5116611986565b610f89828a612105565b526000198114610fa157600101989796949598610f14565b634e487b7160e01b8652601183528486fd5b969795969395949381356001600160a01b0381168103610fe0578152949796959394908801908801610ed8565b8580fd5b8480fd5b505034610130576020366003190112610130576001600160a01b03916110669082908461101361146b565b1681526002602052209160ff835493611033600260018301549201611583565b928051968796875283831660208801528260081c169086015260a81c16606084015260a0608084015260a083019061149c565b0390f35b90503461049d578160031936011261049d5761108461146b565b61108c611486565b9061109561166b565b8351916110a183611547565b8583526001600160a01b039081169182156112b25716938486528260209460028652600160ff81858b200154166112a4575b600284516110e081611516565b8a81528a898b88828501936005855286828701948d8652606088019460128652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b038411611291575061116684546114dc565b601f8111611263575b5087908a601f85116001146111e757938061037d979460059a979482946000805160206121308339815191529d9b98946111dc575b50501b916000199060031b1c19161790555b80519586958a87528601528401526012606084015260a0608084015260a083019061149c565b0151925038806111a4565b50848b52888b209293929190601f1984168c5b81811061124e5750926000805160206121308339815191529a989592859261037d999660059c999610611235575b505050811b0190556111b6565b015160001960f88460031b161c19169055388080611228565b82840151855593860193928b01928b016111fa565b61128b90858c52898c20601f860160051c8101918b871061043857601f0160051c01906116c3565b3861116f565b634e487b7160e01b8b526041905260248afd5b6003875288848120556110d3565b855162461bcd60e51b8152602081870152601060248201526f41646472657373206973205a65726f2160801b6044820152606490fd5b808434610e68576020366003190112610e685761130361146b565b61130b61166b565b6001600160a01b03168252600360205281205580f35b50503461013057806003193601126101305761133b61146b565b61134361166b565b6001600160a01b0316825260036020528120602435905580f35b8284346101a15760209182600319360112610130578060ff6110669261138161146b565b9460606080835161139181611516565b83815289810184905284810184905282810184905201526001600160a01b03958616815260028752208251946113c686611516565b81548652600182015491878701948484168652846113fd6002838b0194868860081c1686528360608d019860a81c16885201611583565b9660808a0197885282519a8b9a818c5251908b015251169088015251166060860152511660808401525160a08084015260c083019061149c565b8490843461049d57602036600319011261049d576020926001600160a01b0361145e61146b565b1681526003845220548152f35b600435906001600160a01b038216820361148157565b600080fd5b602435906001600160a01b038216820361148157565b919082519283825260005b8481106114c8575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016114a7565b90600182811c9216801561150c575b60208310146114f657565b634e487b7160e01b600052602260045260246000fd5b91607f16916114eb565b60a081019081106001600160401b0382111761153157604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761153157604052565b90601f801991011681019081106001600160401b0382111761153157604052565b9060405191826000825492611597846114dc565b90818452600194858116908160001461160657506001146115c3575b50506115c192500383611562565b565b9093915060005260209081600020936000915b8183106115ee5750506115c1935082010138806115b3565b855488840185015294850194879450918301916115d6565b9150506115c194506020925060ff191682840152151560051b82010138806115b3565b6001600160401b0381116115315760051b60200190565b6044359060ff8216820361148157565b6001600160401b03811161153157601f01601f191660200190565b6000546001600160a01b0316330361167f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8181106116ce575050565b600081556001016116c3565b90670de0b6b3a7640000918281029281840414901517156116f757565b634e487b7160e01b600052601160045260246000fd5b818102929181159184041417156116f757565b9060405161172d81611516565b6080611769600283958054855260ff6001820154818116602088015260018060a01b038160081c16604088015260a81c16606086015201611583565b910152565b90816020910312611481575160ff811681036114815790565b6040513d6000823e3d90fd5b60ff166012039060ff82116116f757565b156117ab57565b60405162461bcd60e51b8152602060048201526011602482015270444543494d414c20554e444552464c4f5760781b6044820152606490fd5b51906001600160501b038216820361148157565b908160a09103126114815761180c816117e4565b9160208201519160408101519161182a6080606084015193016117e4565b90565b1561183457565b60405162461bcd60e51b815260206004820152600b60248201526a5374616c6520707269636560a81b6044820152606490fd5b1561186e57565b60405162461bcd60e51b815260206004820152600e60248201526d6e6567617469766520707269636560901b6044820152606490fd5b906201518082018092116116f757565b919082018092116116f757565b156118c857565b60405162461bcd60e51b81526020600482015260076024820152661d1a5b595bdd5d60ca1b6044820152606490fd5b604d81116116f757600a0a90565b90816020910312611481575190565b90816060910312611481576040519060608201908282106001600160401b0383111761153157604091825280518352602081015160208401520151604082015290565b6119696040928383528383019061149c565b90602081830391015260038152621554d160ea1b60208201520190565b6001600160a01b03811660009081526002602052604090206119a790611720565b6040810180519092916001600160a01b0390911690816119e1575b50506001600160a01b0316600090815260036020526040902090505490565b602080820192600160ff6119f6865160ff1690565b1614611bea5750600260ff611a0c855160ff1690565b1614611b505750600360ff611a22845160ff1690565b1614611a7b57600460ff611a37845160ff1690565b1614611a6e575060ff611a4d6005925160ff1690565b1614611a5a5781806119c2565b505161182a906001600160a01b0316611d45565b91505061182a9150611f9d565b611af4939250606091506080611ad5611ac9611ac9611aae611aa8611aa38888015160ff1690565b611793565b60ff1690565b96611abc60128911156117a4565b516001600160a01b031690565b6001600160a01b031690565b91015190604051808096819463195556f360e21b835260048301611957565b03915afa918215611b4b5761182a92611b1791600091611b1d575b5051916118f7565b9061170d565b611b3e915060603d8111611b44575b611b368183611562565b810190611914565b38611b0f565b503d611b2c565b611787565b93915060049250611b83611ac9611ac9611b75611aa8611aa360608a97015160ff1690565b94611abc60128711156117a4565b60405163029f8a6d60e11b815293849182905afa918215611b4b5761182a93600093611bb5575b5050611b17906118f7565b611b179293509081611bdb92903d10611be3575b611bd38183611562565b810190611905565b919038611baa565b503d611bc9565b909350600492508391506040519283809263313ce56760e01b82525afa908115611b4b57611ac9611ac9611c33611aa860a095611c4195600498600092611cf9575b5050611793565b95611abc60128811156117a4565b604051633fabe5a360e21b815292839182905afa8015611b4b5761182a9260008092818091611caf575b611b1794955091611c91611ca292611caa946001600160501b038091169116101561182d565b611c9d60008713611867565b6118a4565b4211156118c1565b6118f7565b505050611b179150611caa611ca2611ce0611c919560a03d8111611cf2575b611cd88183611562565b8101906117f8565b9298508897509450909250611c6b9050565b503d611cce565b611d189250803d10611d1f575b611d108183611562565b81019061176e565b3880611c2c565b503d611d06565b9081602091031261148157516001600160a01b03811681036114815790565b604051630dfe168160e01b81526020906001600160a01b038316908281600481855afa908115611b4b578390600092611df6575b5060405163d21220a760e01b81529192829060049082905afa928315611b4b57600093611dc1575b5050611dad9083611e47565b90611db89192611e47565b61182a916118b4565b611dad9293509081611de792903d10611def575b611ddf8183611562565b810190611d26565b919038611da1565b503d611dd5565b60049250611e1090823d8411611def57611ddf8183611562565b91611d79565b8115611e20570490565b634e487b7160e01b600052601260045260246000fd5b60ff16604d81116116f757600a0a90565b6040516370a0823160e01b81526001600160a01b038281166004830152838116939290916020918282602481895afa918215611b4b576004968491600094611f7e575b5060405163313ce56760e01b815297889182905afa958615611b4b57600096611f5d575b5082906004604051809681936318160ddd60e01b8352165afa908115611b4b57611ef493611eee93600093611f38575b5050611ee9906116da565b611e16565b91611986565b61182a92611f0f9290601260ff821610611f1d575b5061170d565b670de0b6b3a7640000900490565b90611b17611f2d611f3293611793565b611e36565b38611f09565b611ee99293509081611f5592903d10611be357611bd38183611562565b919038611ede565b83919650611f7790823d8411611d1f57611d108183611562565b9590611eae565b611f96919450823d8411611be357611bd38183611562565b9238611e8a565b90604060018060a01b038184015116925192815190602082016396834ad360e01b81526024958684015285835260608301926001600160401b0393818110858211176120f05785526000928392839251915afa3d156120e8573d9061200182611650565b9161200e86519384611562565b82523d83602084013e5b156120b757608081805181010312610130576020810151938460070b850361049d578101518381160361013057606001518060030b80910361013057810394858060030b036120a55763ffffffff8096166012039186831161209457505061182a939461208d9116611caa60128211156117a4565b911661170d565b634e487b7160e01b81526011600452fd5b634e487b7160e01b8252601160045290fd5b835162461bcd60e51b815260206004820152600b818801526a70797468206572726f722160a81b6044820152606490fd5b606090612018565b87634e487b7160e01b60005260416004526000fd5b80518210156121195760209160051b010190565b634e487b7160e01b600052603260045260246000fdfe3d8adf1be139385d82a5f0d83d5ac348b4bc37e1e1613ccde2a9de0376090c28a2646970667358221220a16987de551c1511ae658b1b0a271e335b60c01260a85db9f896215bda6104af64736f6c63430008130033";

type FeedPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeedPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeedPriceOracle__factory extends ContractFactory {
  constructor(...args: FeedPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeedPriceOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FeedPriceOracle__factory {
    return super.connect(runner) as FeedPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleInterface {
    return new Interface(_abi) as FeedPriceOracleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeedPriceOracle {
    return new Contract(address, _abi, runner) as unknown as FeedPriceOracle;
  }
}
