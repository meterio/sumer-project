/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  FeedPriceOracleSafe,
  FeedPriceOracleSafeInterface,
} from "../../../contracts/Oracle/FeedPriceOracleSafe";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "source",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "feedId",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "source",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "feedDecimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct FeedPriceOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPriceNormalized",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setBandFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
    ],
    name: "setChainlinkFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
    ],
    name: "setLpFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setPythFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_validTimePeriod",
        type: "uint256",
      },
    ],
    name: "setPythValidTimePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "feed_",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "feedDecimals_",
        type: "uint8",
      },
    ],
    name: "setWitnetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validTimePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461006957600180546001600160a01b03199081169091556000805433928116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3611c206004556122ed908161006f8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816303b0f9a3146115a55781630c1502eb1461157d57816316b8e731146114a35781631badc89a14611467578382631e922ea61461142e575081632601c6b1146111b15781632fba4aa91461112f57816348a1371b14610fb2578382634b90fd6914610f235750816366331bba14610f07578163688202c514610c8957816369ef32d214610a12578163715018a6146109ad57816379ba5097146108ec5781638da5cb5b146108c457816395ee8208146107b6578163b1b06949146104dd578163cad75c6814610244578163cbdaeaba1461022257508063e30c3978146101fa578063e983fe25146101c3578063f2fde38b146101535763fc57d4df1461012457600080fd5b3461014f57602036600319011261014f5760209061014861014361160b565b611b26565b9051908152f35b5080fd5b82346101c05760203660031901126101c05761016d61160b565b61017561180b565b600180546001600160a01b0319166001600160a01b0392831690811790915582549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b80fd5b503461014f57602036600319011261014f5760209181906001600160a01b036101ea61160b565b1681526003845220549051908152f35b503461014f578160031936011261014f5760015490516001600160a01b039091168152602090f35b90503461024057826003193601126102405760209250549051908152f35b8280fd5b9050346102405760603660031901126102405761025f61160b565b602435906044356001600160a01b03818116918290036104d95761028161180b565b85519261028d846116e7565b87845282156104a45716948587526020946002865283600160ff81858c20015416610496575b600284516102c0816116b6565b8881528b8a8c888285019389855286828701948d8652606088019460128652608089019b8c52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055019151908151916001600160401b038311610483578b610346855461167c565b8b601f821161044a575b50505089908c601f85116001146103cf57936000805160206122988339815191529b9a99979593819382936103be9b9997946103c4575b50501b916000199060031b1c19161790555b815196879687528601528401526012606084015260a0608084015260a083019061163c565b0390a280f35b015192503880610387565b9190601f9493941984168684528c8420935b8181106104355750916103be9997959391856000805160206122988339815191529e9d9c9a9896941061041c575b505050811b019055610399565b015160001960f88460031b161c1916905538808061040f565b82840151855593860193928d01928d016103e1565b8287610471945220601f860160051c8101918d8710610479575b601f0160051c0190611863565b8b388b610350565b9091508190610464565b634e487b7160e01b8c526041855260248cfd5b6003885289848120556102b3565b865162461bcd60e51b8152602081880152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b8680fd5b91905034610240576080366003190112610240576104f961160b565b90610502611626565b9161050b6117e0565b90606435926001600160401b038085116107b257366023860112156107b257848701359588610539886117f0565b9661054685519889611702565b8888523660248a8301011161014f578860249960209a8b9301838b01378801015261056f61180b565b6001600160a01b0390811693841561077d5716808952600287528289206001908101549198899688949360ff1661076f575b8b8a8751926105af846116b6565b828452888285019360038552818601938c8552606087019360ff169d8e8552608088019b8c528252600290522093518455858401925160ff16835492600160a81b6101009003905160081b169160ff60a81b905160a81b16926001600160501b0360b01b161717179055600201935190815193841161075c5750610633845461167c565b601f811161072e575b5088908b601f85116001146106b257938060039a97946000805160206122988339815191529c9a979482946103be9b98946106a7575b50501b91600019908b1b1c19161790555b80519687968b8852870152850152606084015260a0608084015260a083019061163c565b015192503880610672565b50848c52898c209293929190601f1984168d5b8181106107195750926103be989592859260039c99966000805160206122988339815191529e9c999610610701575b505050811b019055610683565b0151600019838d1b60f8161c191690553880806106f4565b82840151855593860193928c01928c016106c5565b61075690858d528a8d20601f860160051c8101918c871061047957601f0160051c0190611863565b3861063c565b634e487b7160e01b8c526041905260248bfd5b60038a528b868120556105a1565b835162461bcd60e51b8152808a01899052600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b8780fd5b90503461024057602092836003193601126101c0576107d361160b565b916107dd83611b26565b845163313ce56760e01b80825291946001600160a01b0316929087818381875afa9081156108ba5760ff89949392601292889161089d575b501610610826575b82868851908152f35b86518094819382525afa9182156108925761085b9392610855926108509291610865575b50611933565b611fc0565b906118ad565b388084818061081d565b6108859150873d891161088b575b61087d8183611702565b81019061190e565b3861084a565b503d610873565b8451903d90823e3d90fd5b6108b49150863d881161088b5761087d8183611702565b38610815565b87513d87823e3d90fd5b50503461014f578160031936011261014f57905490516001600160a01b039091168152602090f35b91905034610240578260031936011261024057600154916001600160a01b039133838516036109585750506001600160a01b031991821660015582543392811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b83346101c057806003193601126101c0576109c661180b565b600180546001600160a01b03199081169091558154908116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8391503461014f578260031936011261014f57610a2d61160b565b90610a36611626565b610a3e61180b565b845190610a4a826116e7565b8482526001600160a01b03908116938415610c54571692838552602095600287528560019460ff86848420015416610c46575b60028351610a8a816116b6565b8381528a81018881528582018781528c846060850191600883528d60808701998d8b525252878d209351845560ff8b8501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550191518051916001600160401b038311610c335750610b0d835461167c565b601f8111610c05575b508990601f8311600114610b8d5791806103be9694928b9c9896946000805160206122988339815191529b9c92610b82575b5050600019600383901b1c191690881b1790555b80519586958a87528601528401526008606084015260a0608084015260a083019061163c565b015190508c80610b48565b838a528a8a209190601f1984168b5b818110610bf0575092899285926000805160206122988339815191529c9d9e9a98966103be9a989610610bd7575b505050811b019055610b5c565b015160001960f88460031b161c191690558c8080610bca565b828401518555938a0193928d01928d01610b9c565b610c2d90848b528b8b20601f850160051c8101918d861061047957601f0160051c0190611863565b8a610b16565b634e487b7160e01b8a5260419052602489fd5b600389528183812055610a7d565b865162461bcd60e51b8152602081860152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b9190503461024057606036600319011261024057610ca561160b565b91610cae611626565b92610cb76117e0565b92610cc061180b565b805194610ccc866116e7565b8686526001600160a01b03908116928315610ed25790869493929116958693848952826002602098818a5260ff8c600194859120015416610ec4575b8b8a875192610d16846116b6565b828452888285019386855286828701948d865260ff6060890195169e8f8652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b03841161075c5750610d9b845461167c565b601f8111610e96575b5088908b601f8511600114610e1a57938060029a97946000805160206122988339815191529c9a979482946103be9b9894610e0f575b50501b916000199060031b1c191617905580519687968b8852870152850152606084015260a0608084015260a083019061163c565b015192503880610dda565b50848c52898c209293929190601f1984168d5b818110610e815750926103be989592859260029c99966000805160206122988339815191529e9c999610610e6857505050811b019055610683565b015160001960f88460031b161c191690553880806106f4565b82840151855593860193928c01928c01610e2d565b610ebe90858d528a8d20601f860160051c8101918c871061047957601f0160051c0190611863565b38610da4565b60038a528b86812055610d08565b825162461bcd60e51b8152602081870152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b50503461014f578160031936011261014f576020905160018152f35b808434610faf576020366003190112610faf57600290610f4161160b565b610f4961180b565b6001600160a01b031683526020829052822082815560018101839055018054610f719061167c565b80610f7a575050f35b82601f8211600114610f8c5750505580f35b9091808252610faa601f60208420940160051c840160018501611863565b555580f35b50fd5b8391503461014f57602080600319360112610240578135926001600160401b0384116101c057366023850112156101c05783830135610ff0816117c9565b94610ffd87519687611702565b8186528386016024809360051b8301019136831161112b579497969593948301905b8282106110fa575050508351611034816117c9565b9261104187519485611702565b81845261104d826117c9565b8489019690601f1901368837855b8381106110a257505050505083519485948186019282875251809352850193925b82811061108b57505050500390f35b83518552869550938101939281019260010161107c565b97989697949695946110c66001600160a01b036110bf8385612122565b5116611b26565b6110d0828a612122565b5260001981146110e85760010198979694959861105b565b634e487b7160e01b8652601183528486fd5b969795969395949381356001600160a01b038116810361112757815294979695939490880190880161101f565b8580fd5b8480fd5b50503461014f57602036600319011261014f576001600160a01b03916111ad9082908461115a61160b565b1681526002602052209160ff83549361117a600260018301549201611723565b928051968796875283831660208801528260081c169086015260a81c16606084015260a0608084015260a083019061163c565b0390f35b9050346102405781600319360112610240576111cb61160b565b6111d3611626565b906111dc61180b565b8351916111e8836116e7565b8583526001600160a01b039081169182156113f95716938486528260209460028652600160ff81858b200154166113eb575b60028451611227816116b6565b8a81528a898b88828501936005855286828701948d8652606088019460128652608089019c8d52835252209351845560ff868501935116835492610100600160a81b03905160081b169160ff60a81b905160a81b16926001600160501b0360b01b1617171790550192518051926001600160401b0384116113d857506112ad845461167c565b601f81116113aa575b5087908a601f851160011461132e5793806103be979460059a979482946000805160206122988339815191529d9b9894611323575b50501b916000199060031b1c19161790555b80519586958a87528601528401526012606084015260a0608084015260a083019061163c565b0151925038806112eb565b50848b52888b209293929190601f1984168c5b8181106113955750926000805160206122988339815191529a98959285926103be999660059c99961061137c575b505050811b0190556112fd565b015160001960f88460031b161c1916905538808061136f565b82840151855593860193928b01928b01611341565b6113d290858c52898c20601f860160051c8101918b871061047957601f0160051c0190611863565b386112b6565b634e487b7160e01b8b526041905260248afd5b60038752888481205561121a565b855162461bcd60e51b8152602081870152600f60248201526e696e76616c6964206164647265737360881b6044820152606490fd5b808434610faf576020366003190112610faf5761144961160b565b61145161180b565b6001600160a01b03168252600360205281205580f35b50503461014f578060031936011261014f5761148161160b565b61148961180b565b6001600160a01b0316825260036020528120602435905580f35b8284346101c0576020918260031936011261014f578060ff6111ad926114c761160b565b946060608083516114d7816116b6565b83815289810184905284810184905282810184905201526001600160a01b039586168152600287522082519461150c866116b6565b81548652600182015491878701948484168652846115436002838b0194868860081c1686528360608d019860a81c16885201611723565b9660808a0197885282519a8b9a818c5251908b015251169088015251166060860152511660808401525160a08084015260c083019061163c565b50503461014f57602036600319011261014f5760209181906001600160a01b036101ea61160b565b905034610240576020366003190112610240578035916115c361180b565b603c83106115d057505580f35b906020606492519162461bcd60e51b83528201526015602482015274076616c696454696d65506572696f64203e3d20363605c1b6044820152fd5b600435906001600160a01b038216820361162157565b600080fd5b602435906001600160a01b038216820361162157565b919082519283825260005b848110611668575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611647565b90600182811c921680156116ac575b602083101461169657565b634e487b7160e01b600052602260045260246000fd5b91607f169161168b565b60a081019081106001600160401b038211176116d157604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b038211176116d157604052565b90601f801991011681019081106001600160401b038211176116d157604052565b90604051918260008254926117378461167c565b9081845260019485811690816000146117a65750600114611763575b505061176192500383611702565b565b9093915060005260209081600020936000915b81831061178e57505061176193508201013880611753565b85548884018501529485019487945091830191611776565b91505061176194506020925060ff191682840152151560051b8201013880611753565b6001600160401b0381116116d15760051b60200190565b6044359060ff8216820361162157565b6001600160401b0381116116d157601f01601f191660200190565b6000546001600160a01b0316330361181f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b81811061186e575050565b60008155600101611863565b90670de0b6b3a76400009182810292818404149015171561189757565b634e487b7160e01b600052601160045260246000fd5b8181029291811591840414171561189757565b906040516118cd816116b6565b6080611909600283958054855260ff6001820154818116602088015260018060a01b038160081c16604088015260a81c16606086015201611723565b910152565b90816020910312611621575160ff811681036116215790565b6040513d6000823e3d90fd5b60ff166012039060ff821161189757565b1561194b57565b60405162461bcd60e51b8152602060048201526011602482015270646563696d616c20756e646572666c6f7760781b6044820152606490fd5b51906001600160501b038216820361162157565b908160a0910312611621576119ac81611984565b916020820151916040810151916119ca608060608401519301611984565b90565b156119d457565b60405162461bcd60e51b815260206004820152600b60248201526a7374616c6520707269636560a81b6044820152606490fd5b15611a0e57565b60405162461bcd60e51b815260206004820152600e60248201526d6e6567617469766520707269636560901b6044820152606490fd5b9062015180820180921161189757565b9190820180921161189757565b15611a6857565b60405162461bcd60e51b81526020600482015260076024820152661d1a5b595bdd5d60ca1b6044820152606490fd5b604d811161189757600a0a90565b90816020910312611621575190565b90816060910312611621576040519060608201908282106001600160401b038311176116d157604091825280518352602081015160208401520151604082015290565b611b096040928383528383019061163c565b90602081830391015260038152621554d160ea1b60208201520190565b6001600160a01b0381166000908152600260205260409020611b47906118c0565b6040810180519092916001600160a01b039091169081611b81575b50506001600160a01b0316600090815260036020526040902090505490565b602080820192600160ff611b96865160ff1690565b1614611d845750600260ff611bac855160ff1690565b1614611cea5750600360ff611bc2845160ff1690565b1614611c1b57600460ff611bd7845160ff1690565b1614611c0e575060ff611bed6005925160ff1690565b1614611bfa578180611b62565b50516119ca906001600160a01b0316611ecf565b9150506119ca915061214c565b611c94939250606091506080611c75611c69611c69611c4e611c48611c438888015160ff1690565b611933565b60ff1690565b96611c5c6012891115611944565b516001600160a01b031690565b6001600160a01b031690565b91015190604051808096819463195556f360e21b835260048301611af7565b03915afa918215611ce5576119ca9261085591600091611cb7575b505191611a97565b611cd8915060603d8111611cde575b611cd08183611702565b810190611ab4565b38611caf565b503d611cc6565b611927565b93915060049250611d1d611c69611c69611d0f611c48611c4360608a97015160ff1690565b94611c5c6012871115611944565b60405163029f8a6d60e11b815293849182905afa918215611ce5576119ca93600093611d4f575b505061085590611a97565b6108559293509081611d7592903d10611d7d575b611d6d8183611702565b810190611aa5565b919038611d44565b503d611d63565b909350600492508391506040519283809263313ce56760e01b82525afa908115611ce557611c69611c69611dcd611c4860a095611ddb95600498600092611e93575b5050611933565b95611c5c6012881115611944565b604051633fabe5a360e21b815292839182905afa8015611ce5576119ca9260008092818091611e49575b61085594955091611e2b611e3c92611e44946001600160501b03809116911610156119cd565b611e3760008713611a07565b611a44565b421115611a61565b611a97565b5050506108559150611e44611e3c611e7a611e2b9560a03d8111611e8c575b611e728183611702565b810190611998565b9298508897509450909250611e059050565b503d611e68565b611ea99250803d1061088b5761087d8183611702565b3880611dc6565b9081602091031261162157516001600160a01b03811681036116215790565b604051630dfe168160e01b81526020906001600160a01b038316908281600481855afa908115611ce5578390600092611f80575b5060405163d21220a760e01b81529192829060049082905afa928315611ce557600093611f4b575b5050611f379083611fd1565b90611f429192611fd1565b6119ca91611a54565b611f379293509081611f7192903d10611f79575b611f698183611702565b810190611eb0565b919038611f2b565b503d611f5f565b60049250611f9a90823d8411611f7957611f698183611702565b91611f03565b8115611faa570490565b634e487b7160e01b600052601260045260246000fd5b60ff16604d811161189757600a0a90565b6040516370a0823160e01b81526001600160a01b038281166004830152838116939290916020918282602481895afa918215611ce5576004968491600094612103575b5060405163313ce56760e01b815297889182905afa958615611ce5576000966120e2575b5082906004604051809681936318160ddd60e01b8352165afa908115611ce55761207e93612078936000936120bd575b50506120739061187a565b611fa0565b91611b26565b6119ca926120999290601260ff8216106120a7575b506118ad565b670de0b6b3a7640000900490565b906108556108506120b793611933565b38612093565b61207392935090816120da92903d10611d7d57611d6d8183611702565b919038612068565b839196506120fc90823d841161088b5761087d8183611702565b9590612038565b61211b919450823d8411611d7d57611d6d8183611702565b9238612014565b80518210156121365760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b90604060018060a01b038184015116925160045490825191602083019163052571af60e51b8352602484015260448301526044825260808201916001600160401b0392818110848211176116d15784526000958692839251915afa3d1561228f573d906121b8826117f0565b916121c585519384611702565b82523d86602084013e5b1561225e5760808180518101031261112b576020810151928360070b8403611127578101518281160361112b57606001518060030b80910361112b57840393848060030b0361224a5763ffffffff8095166012039085821161224a57506119ca93946122439116611e446012821115611944565b91166118ad565b634e487b7160e01b81526011600452602490fd5b825162461bcd60e51b815260206004820152600a602482015269383cba341032b93937b960b11b6044820152606490fd5b6060906121cf56fe3d8adf1be139385d82a5f0d83d5ac348b4bc37e1e1613ccde2a9de0376090c28a264697066735822122058c891c43599bf33da5888da4be966fdf2709d2e3322835cf5e98c18fd13fe1e64736f6c63430008130033";

type FeedPriceOracleSafeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeedPriceOracleSafeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeedPriceOracleSafe__factory extends ContractFactory {
  constructor(...args: FeedPriceOracleSafeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FeedPriceOracleSafe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): FeedPriceOracleSafe__factory {
    return super.connect(runner) as FeedPriceOracleSafe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeedPriceOracleSafeInterface {
    return new Interface(_abi) as FeedPriceOracleSafeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FeedPriceOracleSafe {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as FeedPriceOracleSafe;
  }
}
