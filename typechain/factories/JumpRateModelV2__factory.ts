/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  JumpRateModelV2,
  JumpRateModelV2Interface,
} from "../JumpRateModelV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blocksPerYearOnChain",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "baseRatePerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "multiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jumpMultiplierPerBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "kink",
        type: "uint256",
      },
    ],
    name: "NewInterestParams",
    type: "event",
  },
  {
    inputs: [],
    name: "baseRatePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "getBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveFactorMantissa",
        type: "uint256",
      },
    ],
    name: "getSupplyRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isInterestRateModel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jumpMultiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplierPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseRatePerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "multiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "jumpMultiplierPerYear",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "kink_",
        type: "uint256",
      },
    ],
    name: "updateJumpRateModel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrows",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserves",
        type: "uint256",
      },
    ],
    name: "utilizationRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60a03461016457601f6106e738819003918201601f19168301916001600160401b038311848410176101695780849260c09460405283398101031261016457805190602081015160408201519260608301519160a060808501519401519060018060a01b03821680920361016457600080546001600160a01b0319169092178255608083905261009090839061017f565b9485600255670de0b6b3a764000090818102918183041490151715610150578483029183830486148415171561013c577f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d60808888886100fe896100f48a8a61017f565b928360015561017f565b908160035582600455604051938452602084015260408301526060820152a160405161054790816101a0823960805181818161018301526102590152f35b634e487b7160e01b81526011600452602490fd5b634e487b7160e01b82526011600452602482fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b8115610189570490565b634e487b7160e01b600052601260045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c806315f240531461036a5780632037f3e71461022c5780632191f92a146102105780636e71e2d8146101ed5780638726bb89146101ce5780638da5cb5b146101a6578063a385fb961461016b578063b8168816146100fc578063b9f9850a146100dd578063f14039de146100ba5763fd2da3391461009a57600080fd5b346100b657826003193601126100b65760209250549051908152f35b8280fd5b5050346100d957816003193601126100d9576020906002549051908152f35b5080fd5b5050346100d957816003193601126100d9576020906003549051908152f35b5091346101685761010c366103a5565b93670de0b6b3a764000092919294850390858211610155576020878761014d886101418989856101468b61014185858961049e565b61046b565b04936103f3565b049051908152f35b634e487b7160e01b815260118852602490fd5b80fd5b5050346100d957816003193601126100d957602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5050346100d957816003193601126100d957905490516001600160a01b039091168152602090f35b5050346100d957816003193601126100d9576020906001549051908152f35b5050346100d95760209061020961020336610386565b916103f3565b9051908152f35b5050346100d957816003193601126100d9576020905160018152f35b509190346100d95761023d366103a5565b85549294909390926001600160a01b031633036103185761027f7f0000000000000000000000000000000000000000000000000000000000000000809261047e565b9485600255670de0b6b3a76400009081810291818304149015171561030557928492836102e9846102df7f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9a986102d960809b8f9961046b565b9061047e565b938460015561047e565b938460035555815194855260208501528301526060820152a180f35b634e487b7160e01b875260118852602487fd5b825162461bcd60e51b8152602081890152602660248201527f6f6e6c7920746865206f776e6572206d61792063616c6c20746869732066756e60448201526531ba34b7b71760d11b6064820152608490fd5b5050346100d95760209061020961038036610386565b9161049e565b60609060031901126103a057600435906024359060443590565b600080fd5b60809060031901126103a05760043590602435906044359060643590565b919082018092116103d057565b634e487b7160e01b600052601160045260246000fd5b919082039182116103d057565b91908015610463578282118061044d575b61043e57670de0b6b3a7640000810291670de0b6b3a763ffff19828404016103d0576104366102d99261043b956103c3565b6103e6565b90565b505050670de0b6b3a764000090565b5061045c8261043685846103c3565b1515610404565b505050600090565b818102929181159184041417156103d057565b8115610488570490565b634e487b7160e01b600052601260045260246000fd5b906104a992916103f3565b6004548082116104d75750670de0b6b3a76400006104cd61043b926001549061046b565b04600254906103c3565b9061043b9161050b610502670de0b6b3a7640000926104fc846104cd6001548461046b565b946103e6565b6003549061046b565b046103c356fea2646970667358221220aa1c11a764a63273fa09c68dfe667f733b6b28453407e557c2ebaf91bbc0039564736f6c63430008130033";

export class JumpRateModelV2__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    blocksPerYearOnChain: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<JumpRateModelV2> {
    return super.deploy(
      blocksPerYearOnChain,
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    ) as Promise<JumpRateModelV2>;
  }
  getDeployTransaction(
    blocksPerYearOnChain: BigNumberish,
    baseRatePerYear: BigNumberish,
    multiplierPerYear: BigNumberish,
    jumpMultiplierPerYear: BigNumberish,
    kink_: BigNumberish,
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      blocksPerYearOnChain,
      baseRatePerYear,
      multiplierPerYear,
      jumpMultiplierPerYear,
      kink_,
      owner_,
      overrides || {}
    );
  }
  attach(address: string): JumpRateModelV2 {
    return super.attach(address) as JumpRateModelV2;
  }
  connect(signer: Signer): JumpRateModelV2__factory {
    return super.connect(signer) as JumpRateModelV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JumpRateModelV2Interface {
    return new utils.Interface(_abi) as JumpRateModelV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JumpRateModelV2 {
    return new Contract(address, _abi, signerOrProvider) as JumpRateModelV2;
  }
}
