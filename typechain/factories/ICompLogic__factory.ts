/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ICompLogic, ICompLogicInterface } from "../ICompLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "distributeBorrowerComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "supplier",
        type: "address",
      },
    ],
    name: "distributeSupplierComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    name: "initializeMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "supplySpeed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowSpeed",
        type: "uint256",
      },
    ],
    name: "setCompSpeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "mantissa",
            type: "uint256",
          },
        ],
        internalType: "struct Exp",
        name: "marketBorrowIndex",
        type: "tuple",
      },
    ],
    name: "updateCompBorrowIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "updateCompSupplyIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICompLogic__factory {
  static readonly abi = _abi;
  static createInterface(): ICompLogicInterface {
    return new utils.Interface(_abi) as ICompLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICompLogic {
    return new Contract(address, _abi, signerOrProvider) as ICompLogic;
  }
}
