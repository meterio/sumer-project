/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PythOracle, PythOracleInterface } from "../PythOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "SetFeed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeds",
    outputs: [
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "fixedPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "feedId",
            type: "bytes32",
          },
          {
            internalType: "uint8",
            name: "tokenDecimals",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct PythOracle.FeedData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getFixedPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "getUnderlyingPrices",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
    ],
    name: "removeFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "feedId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "setFeedId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "cToken_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setFixedPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611226806100326000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806348a1371b1161008c5780638da5cb5b116100665780638da5cb5b146101d9578063a6f9dae114610204578063e983fe2514610217578063fc57d4df1461023757600080fd5b806348a1371b1461018e5780634b90fd69146101ae57806366331bba146101c157600080fd5b80630c1502eb146100d457806316b8e731146101105780631badc89a146101305780631e922ea6146101455780632fba4aa91461015857806346ceecd11461017b575b600080fd5b6100fd6100e2366004610b6e565b6001600160a01b031660009081526002602052604090205490565b6040519081526020015b60405180910390f35b61012361011e366004610b6e565b61024a565b6040516101079190610bdd565b61014361013e366004610c29565b610356565b005b610143610153366004610b6e565b6103a5565b61016b610166366004610b6e565b6103e9565b6040516101079493929190610c53565b610143610189366004610cd7565b6104a9565b6101a161019c366004610db0565b6104e7565b6040516101079190610e5d565b6101436101bc366004610b6e565b610595565b6101c9600181565b6040519015158152602001610107565b6000546101ec906001600160a01b031681565b6040516001600160a01b039091168152602001610107565b610143610212366004610b6e565b610600565b6100fd610225366004610b6e565b60026020526000908152604090205481565b6100fd610245366004610b6e565b610695565b60408051608081018252600080825260208201819052918101919091526060808201526001600160a01b038083166000908152600160208181526040928390208351608081018552815481529281015460ff811692840192909252610100909104909316918101919091526002820180549192916060840191906102cd90610ea1565b80601f01602080910402602001604051908101604052809291908181526020018280546102f990610ea1565b80156103465780601f1061031b57610100808354040283529160200191610346565b820191906000526020600020905b81548152906001019060200180831161032957829003601f168201915b5050505050815250509050919050565b6000546001600160a01b031633146103895760405162461bcd60e51b815260040161038090610edc565b60405180910390fd5b6001600160a01b03909116600090815260026020526040902055565b6000546001600160a01b031633146103cf5760405162461bcd60e51b815260040161038090610edc565b6001600160a01b0316600090815260026020526040812055565b600160208190526000918252604090912080549181015460028201805460ff8316936101009093046001600160a01b031692919061042690610ea1565b80601f016020809104026020016040519081016040528092919081815260200182805461045290610ea1565b801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b5050505050905084565b6000546001600160a01b031633146104d35760405162461bcd60e51b815260040161038090610edc565b6104e0858585858561091f565b5050505050565b805160609060008167ffffffffffffffff81111561050757610507610c90565b604051908082528060200260200182016040528015610530578160200160208202803683370190505b50905060005b8281101561058d5761056085828151811061055357610553610f00565b6020026020010151610695565b82828151811061057257610572610f00565b602090810291909101015261058681610f2c565b9050610536565b509392505050565b6000546001600160a01b031633146105bf5760405162461bcd60e51b815260040161038090610edc565b6001600160a01b0381166000908152600160208190526040822082815590810180546001600160a81b0319169055906105fb6002830182610a81565b505050565b6000546001600160a01b0316331461062a5760405162461bcd60e51b815260040161038090610edc565b6001600160a01b0381166106735760405162461bcd60e51b815260206004820152601060248201526f41646472657373206973205a65726f2160801b6044820152606401610380565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038116600090815260026020526040812054156106cf57506001600160a01b031660009081526002602052604090205490565b6001600160a01b0380831660009081526001602081815260408084208151608081018352815481529381015460ff811693850193909352610100909204909416938201939093526002830180549293919260608401919061072f90610ea1565b80601f016020809104026020016040519081016040528092919081815260200182805461075b90610ea1565b80156107a85780601f1061077d576101008083540402835291602001916107a8565b820191906000526020600020905b81548152906001019060200180831161078b57829003601f168201915b5050509190925250508151919250506107f75760405162461bcd60e51b8152602060048201526011602482015270666565644964206e6f742065786973742160781b6044820152606401610380565b600081604001516001600160a01b03166396834ad383600001516040518263ffffffff1660e01b815260040161082f91815260200190565b608060405180830381865afa15801561084c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108709190610f47565b9050600081604001516000196108869190610fde565b602084015161089690602461106d565b60ff166108a39190611090565b63ffffffff16905060248111156108f05760405162461bcd60e51b8152602060048201526011602482015270444543494d414c20554e444552464c4f5760781b6044820152606401610380565b6108fb81600a61119b565b8251610911919067ffffffffffffffff166111a7565b95945050505050565b919050565b6001600160a01b0383166109685760405162461bcd60e51b815260206004820152601060248201526f41646472657373206973205a65726f2160801b6044820152606401610380565b836109a75760405162461bcd60e51b815260206004820152600f60248201526e666565644964206973205a65726f2160881b6044820152606401610380565b6040805160808101825285815260ff80851660208084019182526001600160a01b03808916858701908152606086018881528c83166000908152600180865298902087518155945197850180549251909316610100026001600160a81b03199092169790951696909617959095179094559051805192938493610a309260028501920190610abe565b50905050856001600160a01b03167ff442c4120f50030718536e79f9d27b218798713665dbf9ced105c73920382f60868685604051610a71939291906111c6565b60405180910390a2505050505050565b508054610a8d90610ea1565b6000825580601f10610a9d575050565b601f016020900490600052602060002090810190610abb9190610b42565b50565b828054610aca90610ea1565b90600052602060002090601f016020900481019282610aec5760008555610b32565b82601f10610b0557805160ff1916838001178555610b32565b82800160010185558215610b32579182015b82811115610b32578251825591602001919060010190610b17565b50610b3e929150610b42565b5090565b5b80821115610b3e5760008155600101610b43565b80356001600160a01b038116811461091a57600080fd5b600060208284031215610b8057600080fd5b610b8982610b57565b9392505050565b6000815180845260005b81811015610bb657602081850181015186830182015201610b9a565b81811115610bc8576000602083870101525b50601f01601f19169290920160200192915050565b602081528151602082015260ff602083015116604082015260018060a01b03604083015116606082015260006060830151608080840152610c2160a0840182610b90565b949350505050565b60008060408385031215610c3c57600080fd5b610c4583610b57565b946020939093013593505050565b84815260ff841660208201526001600160a01b0383166040820152608060608201819052600090610c8690830184610b90565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ccf57610ccf610c90565b604052919050565b600080600080600060a08688031215610cef57600080fd5b610cf886610b57565b94506020808701359450610d0e60408801610b57565b9350606087013560ff81168114610d2457600080fd5b9250608087013567ffffffffffffffff80821115610d4157600080fd5b818901915089601f830112610d5557600080fd5b813581811115610d6757610d67610c90565b610d79601f8201601f19168501610ca6565b91508082528a84828501011115610d8f57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60006020808385031215610dc357600080fd5b823567ffffffffffffffff80821115610ddb57600080fd5b818501915085601f830112610def57600080fd5b813581811115610e0157610e01610c90565b8060051b9150610e12848301610ca6565b8181529183018401918481019088841115610e2c57600080fd5b938501935b83851015610e5157610e4285610b57565b82529385019390850190610e31565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610e9557835183529284019291840191600101610e79565b50909695505050505050565b600181811c90821680610eb557607f821691505b60208210811415610ed657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a908201526927a7262c9027aba722a960b11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f4057610f40610f16565b5060010190565b600060808284031215610f5957600080fd5b6040516080810167ffffffffffffffff8282108183111715610f7d57610f7d610c90565b81604052845191508160070b8214610f9457600080fd5b9082526020840151908082168214610fab57600080fd5b5060208201526040830151600381900b8114610fc657600080fd5b60408201526060928301519281019290925250919050565b60008160030b8360030b637fffffff60008213600084138383048511828216161561100b5761100b610f16565b637fffffff19600085128281168783058712161561102b5761102b610f16565b6000871292508582058712848416161561104757611047610f16565b8585058712818416161561105d5761105d610f16565b5050509290910295945050505050565b600060ff821660ff84168082101561108757611087610f16565b90039392505050565b600063ffffffff838116908316818110156110ad576110ad610f16565b039392505050565b600181815b808511156110f05781600019048211156110d6576110d6610f16565b808516156110e357918102915b93841c93908002906110ba565b509250929050565b60008261110757506001611195565b8161111457506000611195565b816001811461112a576002811461113457611150565b6001915050611195565b60ff84111561114557611145610f16565b50506001821b611195565b5060208310610133831016604e8410600b8410161715611173575081810a611195565b61117d83836110b5565b806000190482111561119157611191610f16565b0290505b92915050565b6000610b8983836110f8565b60008160001904831182151516156111c1576111c1610f16565b500290565b8381526001600160a01b038316602082015260606040820181905260009061091190830184610b9056fea2646970667358221220a5d80e858aa6bedb93950ad63e454fa12b047187accea26b7dc39a13bfb9181564736f6c634300080b0033";

export class PythOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PythOracle> {
    return super.deploy(overrides || {}) as Promise<PythOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PythOracle {
    return super.attach(address) as PythOracle;
  }
  connect(signer: Signer): PythOracle__factory {
    return super.connect(signer) as PythOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PythOracleInterface {
    return new utils.Interface(_abi) as PythOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PythOracle {
    return new Contract(address, _abi, signerOrProvider) as PythOracle;
  }
}
