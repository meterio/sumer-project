/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface IUnderwriterAdminInterface extends ethers.utils.Interface {
  functions: {
    "_getBorrowPaused(address)": FunctionFragment;
    "_getMarketBorrowCap(address)": FunctionFragment;
    "_getMintPaused(address)": FunctionFragment;
    "_getSeizePaused()": FunctionFragment;
    "_getTransferPaused()": FunctionFragment;
    "getAssetGroup(uint8)": FunctionFragment;
    "getAssetGroupNum()": FunctionFragment;
    "getCompAddress()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_getBorrowPaused",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getMarketBorrowCap",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getMintPaused",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "_getSeizePaused",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_getTransferPaused",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAssetGroup",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAssetGroupNum",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getCompAddress",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "_getBorrowPaused",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getMarketBorrowCap",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getMintPaused",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getSeizePaused",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_getTransferPaused",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAssetGroup",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAssetGroupNum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCompAddress",
    data: BytesLike
  ): Result;

  events: {
    "ActionPaused(address,string,bool)": EventFragment;
    "NewAssetGroup(uint8,string,uint256,uint256,uint256,uint256,uint256,uint8)": EventFragment;
    "NewBorrowCap(address,uint256)": EventFragment;
    "NewBorrowCapGuardian(address,address)": EventFragment;
    "NewPauseGuardian(address,address)": EventFragment;
    "RemoveAssetGroup(uint8,uint8)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ActionPaused"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewAssetGroup"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewBorrowCap"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewBorrowCapGuardian"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "NewPauseGuardian"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveAssetGroup"): EventFragment;
}

export type ActionPausedEvent = TypedEvent<
  [string, string, boolean] & {
    cToken: string;
    action: string;
    pauseState: boolean;
  }
>;

export type NewAssetGroupEvent = TypedEvent<
  [
    number,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    number
  ] & {
    groupId: number;
    groupName: string;
    intraCRateMantissa: BigNumber;
    intraMintRateMantissa: BigNumber;
    intraSuRateMantissa: BigNumber;
    interCRateMantissa: BigNumber;
    interSuRateMantissa: BigNumber;
    assetsGroupNum: number;
  }
>;

export type NewBorrowCapEvent = TypedEvent<
  [string, BigNumber] & { cToken: string; newBorrowCap: BigNumber }
>;

export type NewBorrowCapGuardianEvent = TypedEvent<
  [string, string] & {
    oldBorrowCapGuardian: string;
    newBorrowCapGuardian: string;
  }
>;

export type NewPauseGuardianEvent = TypedEvent<
  [string, string] & { oldPauseGuardian: string; newPauseGuardian: string }
>;

export type RemoveAssetGroupEvent = TypedEvent<
  [number, number] & { groupId: number; equalAssetsGroupNum: number }
>;

export class IUnderwriterAdmin extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: IUnderwriterAdminInterface;

  functions: {
    _getBorrowPaused(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    _getMarketBorrowCap(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    _getMintPaused(
      cToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _getSeizePaused(overrides?: CallOverrides): Promise<[boolean]>;

    _getTransferPaused(overrides?: CallOverrides): Promise<[boolean]>;

    getAssetGroup(
      groupId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          number,
          string,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          groupId: number;
          groupName: string;
          intraCRateMantissa: BigNumber;
          intraMintRateMantissa: BigNumber;
          intraSuRateMantissa: BigNumber;
          interCRateMantissa: BigNumber;
          interSuRateMantissa: BigNumber;
        }
      ]
    >;

    getAssetGroupNum(overrides?: CallOverrides): Promise<[number]>;

    getCompAddress(overrides?: CallOverrides): Promise<[string]>;
  };

  _getBorrowPaused(cToken: string, overrides?: CallOverrides): Promise<boolean>;

  _getMarketBorrowCap(
    cToken: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  _getMintPaused(
    cToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _getSeizePaused(overrides?: CallOverrides): Promise<boolean>;

  _getTransferPaused(overrides?: CallOverrides): Promise<boolean>;

  getAssetGroup(
    groupId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [number, string, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
      groupId: number;
      groupName: string;
      intraCRateMantissa: BigNumber;
      intraMintRateMantissa: BigNumber;
      intraSuRateMantissa: BigNumber;
      interCRateMantissa: BigNumber;
      interSuRateMantissa: BigNumber;
    }
  >;

  getAssetGroupNum(overrides?: CallOverrides): Promise<number>;

  getCompAddress(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    _getBorrowPaused(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    _getMarketBorrowCap(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMintPaused(cToken: string, overrides?: CallOverrides): Promise<boolean>;

    _getSeizePaused(overrides?: CallOverrides): Promise<boolean>;

    _getTransferPaused(overrides?: CallOverrides): Promise<boolean>;

    getAssetGroup(
      groupId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        number,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        groupId: number;
        groupName: string;
        intraCRateMantissa: BigNumber;
        intraMintRateMantissa: BigNumber;
        intraSuRateMantissa: BigNumber;
        interCRateMantissa: BigNumber;
        interSuRateMantissa: BigNumber;
      }
    >;

    getAssetGroupNum(overrides?: CallOverrides): Promise<number>;

    getCompAddress(overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "ActionPaused(address,string,bool)"(
      cToken?: null,
      action?: null,
      pauseState?: null
    ): TypedEventFilter<
      [string, string, boolean],
      { cToken: string; action: string; pauseState: boolean }
    >;

    ActionPaused(
      cToken?: null,
      action?: null,
      pauseState?: null
    ): TypedEventFilter<
      [string, string, boolean],
      { cToken: string; action: string; pauseState: boolean }
    >;

    "NewAssetGroup(uint8,string,uint256,uint256,uint256,uint256,uint256,uint8)"(
      groupId?: BigNumberish | null,
      groupName?: string | null,
      intraCRateMantissa?: null,
      intraMintRateMantissa?: null,
      intraSuRateMantissa?: null,
      interCRateMantissa?: null,
      interSuRateMantissa?: null,
      assetsGroupNum?: null
    ): TypedEventFilter<
      [
        number,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number
      ],
      {
        groupId: number;
        groupName: string;
        intraCRateMantissa: BigNumber;
        intraMintRateMantissa: BigNumber;
        intraSuRateMantissa: BigNumber;
        interCRateMantissa: BigNumber;
        interSuRateMantissa: BigNumber;
        assetsGroupNum: number;
      }
    >;

    NewAssetGroup(
      groupId?: BigNumberish | null,
      groupName?: string | null,
      intraCRateMantissa?: null,
      intraMintRateMantissa?: null,
      intraSuRateMantissa?: null,
      interCRateMantissa?: null,
      interSuRateMantissa?: null,
      assetsGroupNum?: null
    ): TypedEventFilter<
      [
        number,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        number
      ],
      {
        groupId: number;
        groupName: string;
        intraCRateMantissa: BigNumber;
        intraMintRateMantissa: BigNumber;
        intraSuRateMantissa: BigNumber;
        interCRateMantissa: BigNumber;
        interSuRateMantissa: BigNumber;
        assetsGroupNum: number;
      }
    >;

    "NewBorrowCap(address,uint256)"(
      cToken?: string | null,
      newBorrowCap?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { cToken: string; newBorrowCap: BigNumber }
    >;

    NewBorrowCap(
      cToken?: string | null,
      newBorrowCap?: null
    ): TypedEventFilter<
      [string, BigNumber],
      { cToken: string; newBorrowCap: BigNumber }
    >;

    "NewBorrowCapGuardian(address,address)"(
      oldBorrowCapGuardian?: null,
      newBorrowCapGuardian?: null
    ): TypedEventFilter<
      [string, string],
      { oldBorrowCapGuardian: string; newBorrowCapGuardian: string }
    >;

    NewBorrowCapGuardian(
      oldBorrowCapGuardian?: null,
      newBorrowCapGuardian?: null
    ): TypedEventFilter<
      [string, string],
      { oldBorrowCapGuardian: string; newBorrowCapGuardian: string }
    >;

    "NewPauseGuardian(address,address)"(
      oldPauseGuardian?: null,
      newPauseGuardian?: null
    ): TypedEventFilter<
      [string, string],
      { oldPauseGuardian: string; newPauseGuardian: string }
    >;

    NewPauseGuardian(
      oldPauseGuardian?: null,
      newPauseGuardian?: null
    ): TypedEventFilter<
      [string, string],
      { oldPauseGuardian: string; newPauseGuardian: string }
    >;

    "RemoveAssetGroup(uint8,uint8)"(
      groupId?: BigNumberish | null,
      equalAssetsGroupNum?: null
    ): TypedEventFilter<
      [number, number],
      { groupId: number; equalAssetsGroupNum: number }
    >;

    RemoveAssetGroup(
      groupId?: BigNumberish | null,
      equalAssetsGroupNum?: null
    ): TypedEventFilter<
      [number, number],
      { groupId: number; equalAssetsGroupNum: number }
    >;
  };

  estimateGas: {
    _getBorrowPaused(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMarketBorrowCap(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _getMintPaused(
      cToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _getSeizePaused(overrides?: CallOverrides): Promise<BigNumber>;

    _getTransferPaused(overrides?: CallOverrides): Promise<BigNumber>;

    getAssetGroup(
      groupId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAssetGroupNum(overrides?: CallOverrides): Promise<BigNumber>;

    getCompAddress(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    _getBorrowPaused(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getMarketBorrowCap(
      cToken: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _getMintPaused(
      cToken: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _getSeizePaused(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    _getTransferPaused(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAssetGroup(
      groupId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAssetGroupNum(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getCompAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
