/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface SortedBorrowsInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "DEFAULT_ADMIN_ROLE"
      | "NAME"
      | "contains"
      | "data"
      | "findInsertPosition"
      | "getFirst"
      | "getLast"
      | "getNext"
      | "getPrev"
      | "getRoleAdmin"
      | "getRoleMember"
      | "getRoleMemberCount"
      | "getSize"
      | "grantRole"
      | "hasRole"
      | "initialize"
      | "insert"
      | "isEmpty"
      | "isSortedBorrows"
      | "reInsert"
      | "redemptionManager"
      | "remove"
      | "renounceRole"
      | "revokeRole"
      | "setRedemptionManager"
      | "supportsInterface"
      | "validInsertPosition"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "Initialized"
      | "NodeAdded"
      | "NodeRemoved"
      | "RoleAdminChanged"
      | "RoleGranted"
      | "RoleRevoked"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "NAME", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "contains",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(functionFragment: "data", values: [AddressLike]): string;
  encodeFunctionData(
    functionFragment: "findInsertPosition",
    values: [AddressLike, BigNumberish, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getFirst",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getLast",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getNext",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPrev",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMember",
    values: [BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleMemberCount",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getSize",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "insert",
    values: [AddressLike, AddressLike, BigNumberish, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isEmpty",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isSortedBorrows",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "reInsert",
    values: [AddressLike, AddressLike, BigNumberish, AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "redemptionManager",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "remove",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setRedemptionManager",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "validInsertPosition",
    values: [AddressLike, BigNumberish, AddressLike, AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "NAME", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "contains", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "data", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "findInsertPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFirst", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getLast", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getNext", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "getPrev", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleMemberCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getSize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "insert", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isEmpty", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isSortedBorrows",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "reInsert", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "redemptionManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "remove", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setRedemptionManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "validInsertPosition",
    data: BytesLike
  ): Result;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NodeAddedEvent {
  export type InputTuple = [
    _asset: AddressLike,
    _id: AddressLike,
    _NICR: BigNumberish
  ];
  export type OutputTuple = [_asset: string, _id: string, _NICR: bigint];
  export interface OutputObject {
    _asset: string;
    _id: string;
    _NICR: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace NodeRemovedEvent {
  export type InputTuple = [_asset: AddressLike, _id: AddressLike];
  export type OutputTuple = [_asset: string, _id: string];
  export interface OutputObject {
    _asset: string;
    _id: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChangedEvent {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGrantedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevokedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface SortedBorrows extends BaseContract {
  connect(runner?: ContractRunner | null): SortedBorrows;
  waitForDeployment(): Promise<this>;

  interface: SortedBorrowsInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  NAME: TypedContractMethod<[], [string], "view">;

  contains: TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [boolean],
    "view"
  >;

  data: TypedContractMethod<
    [arg0: AddressLike],
    [[string, string, bigint] & { head: string; tail: string; size: bigint }],
    "view"
  >;

  findInsertPosition: TypedContractMethod<
    [
      _asset: AddressLike,
      _NBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [[string, string]],
    "view"
  >;

  getFirst: TypedContractMethod<[_asset: AddressLike], [string], "view">;

  getLast: TypedContractMethod<[_asset: AddressLike], [string], "view">;

  getNext: TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [string],
    "view"
  >;

  getPrev: TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [string],
    "view"
  >;

  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], "view">;

  getRoleMember: TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;

  getRoleMemberCount: TypedContractMethod<[role: BytesLike], [bigint], "view">;

  getSize: TypedContractMethod<[_asset: AddressLike], [bigint], "view">;

  grantRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  hasRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  initialize: TypedContractMethod<[_admin: AddressLike], [void], "nonpayable">;

  insert: TypedContractMethod<
    [
      _asset: AddressLike,
      _id: AddressLike,
      _NBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  isEmpty: TypedContractMethod<[_asset: AddressLike], [boolean], "view">;

  isSortedBorrows: TypedContractMethod<[], [boolean], "view">;

  reInsert: TypedContractMethod<
    [
      _asset: AddressLike,
      _id: AddressLike,
      _newNBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  redemptionManager: TypedContractMethod<[], [string], "view">;

  remove: TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [void],
    "nonpayable"
  >;

  renounceRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  revokeRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  setRedemptionManager: TypedContractMethod<
    [_redemptionManager: AddressLike],
    [void],
    "nonpayable"
  >;

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  validInsertPosition: TypedContractMethod<
    [
      _asset: AddressLike,
      _NBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [boolean],
    "view"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "DEFAULT_ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "NAME"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "contains"
  ): TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "data"
  ): TypedContractMethod<
    [arg0: AddressLike],
    [[string, string, bigint] & { head: string; tail: string; size: bigint }],
    "view"
  >;
  getFunction(
    nameOrSignature: "findInsertPosition"
  ): TypedContractMethod<
    [
      _asset: AddressLike,
      _NBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [[string, string]],
    "view"
  >;
  getFunction(
    nameOrSignature: "getFirst"
  ): TypedContractMethod<[_asset: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "getLast"
  ): TypedContractMethod<[_asset: AddressLike], [string], "view">;
  getFunction(
    nameOrSignature: "getNext"
  ): TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getPrev"
  ): TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleAdmin"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getRoleMember"
  ): TypedContractMethod<
    [role: BytesLike, index: BigNumberish],
    [string],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRoleMemberCount"
  ): TypedContractMethod<[role: BytesLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getSize"
  ): TypedContractMethod<[_asset: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "grantRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "hasRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<[_admin: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "insert"
  ): TypedContractMethod<
    [
      _asset: AddressLike,
      _id: AddressLike,
      _NBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "isEmpty"
  ): TypedContractMethod<[_asset: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isSortedBorrows"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "reInsert"
  ): TypedContractMethod<
    [
      _asset: AddressLike,
      _id: AddressLike,
      _newNBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "redemptionManager"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "remove"
  ): TypedContractMethod<
    [_asset: AddressLike, _id: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setRedemptionManager"
  ): TypedContractMethod<
    [_redemptionManager: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "supportsInterface"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "validInsertPosition"
  ): TypedContractMethod<
    [
      _asset: AddressLike,
      _NBB: BigNumberish,
      _prevId: AddressLike,
      _nextId: AddressLike
    ],
    [boolean],
    "view"
  >;

  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "NodeAdded"
  ): TypedContractEvent<
    NodeAddedEvent.InputTuple,
    NodeAddedEvent.OutputTuple,
    NodeAddedEvent.OutputObject
  >;
  getEvent(
    key: "NodeRemoved"
  ): TypedContractEvent<
    NodeRemovedEvent.InputTuple,
    NodeRemovedEvent.OutputTuple,
    NodeRemovedEvent.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged"
  ): TypedContractEvent<
    RoleAdminChangedEvent.InputTuple,
    RoleAdminChangedEvent.OutputTuple,
    RoleAdminChangedEvent.OutputObject
  >;
  getEvent(
    key: "RoleGranted"
  ): TypedContractEvent<
    RoleGrantedEvent.InputTuple,
    RoleGrantedEvent.OutputTuple,
    RoleGrantedEvent.OutputObject
  >;
  getEvent(
    key: "RoleRevoked"
  ): TypedContractEvent<
    RoleRevokedEvent.InputTuple,
    RoleRevokedEvent.OutputTuple,
    RoleRevokedEvent.OutputObject
  >;

  filters: {
    "Initialized(uint8)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "NodeAdded(address,address,uint256)": TypedContractEvent<
      NodeAddedEvent.InputTuple,
      NodeAddedEvent.OutputTuple,
      NodeAddedEvent.OutputObject
    >;
    NodeAdded: TypedContractEvent<
      NodeAddedEvent.InputTuple,
      NodeAddedEvent.OutputTuple,
      NodeAddedEvent.OutputObject
    >;

    "NodeRemoved(address,address)": TypedContractEvent<
      NodeRemovedEvent.InputTuple,
      NodeRemovedEvent.OutputTuple,
      NodeRemovedEvent.OutputObject
    >;
    NodeRemoved: TypedContractEvent<
      NodeRemovedEvent.InputTuple,
      NodeRemovedEvent.OutputTuple,
      NodeRemovedEvent.OutputObject
    >;

    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;
    RoleAdminChanged: TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;

    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;
    RoleGranted: TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;

    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
  };
}
