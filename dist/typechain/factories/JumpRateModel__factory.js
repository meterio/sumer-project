"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.JumpRateModel__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "baseRatePerYear",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "multiplierPerYear",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "jumpMultiplierPerYear",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "kink_",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "baseRatePerBlock",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "multiplierPerBlock",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "jumpMultiplierPerBlock",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "kink",
                type: "uint256",
            },
        ],
        name: "NewInterestParams",
        type: "event",
    },
    {
        inputs: [],
        name: "baseRatePerBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "blocksPerYear",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "cash",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "borrows",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserves",
                type: "uint256",
            },
        ],
        name: "getBorrowRate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "cash",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "borrows",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserves",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserveFactorMantissa",
                type: "uint256",
            },
        ],
        name: "getSupplyRate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isInterestRateModel",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "jumpMultiplierPerBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "kink",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "multiplierPerBlock",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "cash",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "borrows",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "reserves",
                type: "uint256",
            },
        ],
        name: "utilizationRate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161079c38038061079c8339818101604052608081101561003357600080fd5b5080516020808301516040840151606090940151929390929091610065908590622014809061030c6100fd821b17901c565b60015561008083622014806100fd602090811b61030c17901c565b60005561009b82622014806100fd602090811b61030c17901c565b60028190556003829055600154600054604080519283526020830191909152818101929092526060810183905290517f6960ab234c7ef4b0c9197100f5393cfcde7c453ac910a27bd2000aa1dd4c068d9181900360800190a1505050506101ee565b600061014583836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061014c60201b60201c565b9392505050565b600081836101d85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561019d578181015183820152602001610185565b50505050905090810190601f1680156101ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816101e457fe5b0495945050505050565b61059f806101fd6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a385fb9611610066578063a385fb9614610120578063b816881614610128578063b9f9850a14610157578063f14039de1461015f578063fd2da3391461016757610093565b806315f24053146100985780632191f92a146100d35780636e71e2d8146100ef5780638726bb8914610118575b600080fd5b6100c1600480360360608110156100ae57600080fd5b508035906020810135906040013561016f565b60408051918252519081900360200190f35b6100db61023b565b604080519115158252519081900360200190f35b6100c16004803603606081101561010557600080fd5b5080359060208101359060400135610240565b6100c1610280565b6100c1610286565b6100c16004803603608081101561013e57600080fd5b508035906020810135906040810135906060013561028d565b6100c16102fa565b6100c1610300565b6100c1610306565b60008061017d858585610240565b905060035481116101c3576101bb6001546101b5670de0b6b3a76400006101af6000548661035790919063ffffffff16565b9061030c565b906103b0565b915050610234565b60006101ee6001546101b5670de0b6b3a76400006101af60005460035461035790919063ffffffff16565b905060006102076003548461040a90919063ffffffff16565b905061022e826101b5670de0b6b3a76400006101af6002548661035790919063ffffffff16565b93505050505b9392505050565b600181565b60008261024f57506000610234565b6102786102668361026087876103b0565b9061040a565b6101af85670de0b6b3a7640000610357565b949350505050565b60005481565b6220148081565b6000806102a2670de0b6b3a76400008461040a565b905060006102b187878761016f565b905060006102cb670de0b6b3a76400006101af8486610357565b90506102ee670de0b6b3a76400006101af836102e88c8c8c610240565b90610357565b98975050505050505050565b60025481565b60015481565b60035481565b600061034e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061044c565b90505b92915050565b60008261036657506000610351565b8282028284828161037357fe5b041461034e5760405162461bcd60e51b81526004018080602001828103825260218152602001806105496021913960400191505060405180910390fd5b60008282018381101561034e576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600061034e83836040518060400160405280601f81526020017f536166654d6174683a207375627472616374696f6e20756e646572666c6f77008152506104ee565b600081836104d85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561049d578181015183820152602001610485565b50505050905090810190601f1680156104ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816104e457fe5b0495945050505050565b600081848411156105405760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561049d578181015183820152602001610485565b50505090039056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122007e6860080b2e62b36e535afd5bacb379afc04a84ba929e796f2b153e255343064736f6c63430007060033";
class JumpRateModel__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (args.length === 1) {
            super(_abi, _bytecode, args[0]);
        }
        else {
            super(...args);
        }
    }
    deploy(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_, overrides) {
        return super.deploy(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_, overrides || {});
    }
    getDeployTransaction(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_, overrides) {
        return super.getDeployTransaction(baseRatePerYear, multiplierPerYear, jumpMultiplierPerYear, kink_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.JumpRateModel__factory = JumpRateModel__factory;
JumpRateModel__factory.bytecode = _bytecode;
JumpRateModel__factory.abi = _abi;
//# sourceMappingURL=JumpRateModel__factory.js.map